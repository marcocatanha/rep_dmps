<?xml version="1.0" encoding="UTF-8"?>
<job-specification xmlns="http://com.fico/dmip/jobsAndJobSteps" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://com.fico/dmip/jobsAndJobSteps SampleMergedJobTemplate.xsd">
    <diagram-state>
        <![CDATA[{"v":"1.0","s":0.8,"p":"86.875 992","d":90,"j":[{"i":"ingress","p":"1919.9999999999998 64.004583747462","g":"gr-1"},{"i":"invokeDM-CanadianRetail","p":"1411 2134.013751242386","g":"gr-4"},{"i":"createIsRef","p":"1920 242.004583747462","g":"gr-1"},{"i":"egress-5292","p":"879.9999999999998 3069.2797587390005","g":"gr-16"},{"i":"egressERROR-5292","p":"944 2638.013751242386","g":"gr-4"},{"i":"createOtherFields-5292","p":"938 2470.013751242386","g":"gr-4"},{"i":"createErrorField-5292","p":"998.9999999999993 2891.279758738997","g":"gr-16"},{"i":"callTypeRouting","p":"699.4999999999995 742.3761637466157","g":"gr-2"},{"i":"determine-call-type","p":"859.4999999999995 564.3761637466157","g":"gr-2"},{"i":"invokeDM-CanadianCommercial","p":"513 1966.0137512423862","g":"gr-4"},{"i":"E0001-Call-Type-Identification-Error","p":"1058.4999999999995 742.3761637466157","g":"gr-2"},{"i":"E0003-REST-Invocation-Error","p":"922.5 2302.013751242386","g":"gr-4"},{"i":"E0002-Payload-Routing-Error","p":"732.4843749999989 1268.009167494919","g":"gr-15"},{"i":"invokeDM-UsRetail","p":"864 1966.0137512423862","g":"gr-4"},{"i":"invokeDM-UsCommercial","p":"1132.5 1966.0137512423862","g":"gr-4"},{"i":"esDEBUG","p":"1279.9999999999998 3603.279758739004","g":"gr-16"},{"i":"add-streamProcessing-DT","p":"965.9999999999997 386.37616374661525","g":"gr-2"},{"i":"esERRORS","p":"1224 2638.013751242386","g":"gr-4"},{"i":"esResponseDebug","p":"879.9999999999998 3247.279758739004","g":"gr-16"},{"i":"corrId","p":"1920 420.0045837474619","g":"gr-1"},{"i":"log-job","p":"1000.0000000000002 3603.279758739004","g":"gr-16"},{"i":"split","p":"1840 140.7431599983081"},{"i":"logStartFormatter","p":"2000 308.7431599983081"},{"i":"format-request-log","p":"0 476.7431599983081"},{"i":"js-2","p":"1159.9999999999998 3069.2797587390005","g":"gr-16"},{"i":"parse-reponse-corrid","p":"1159.9999999999998 3247.279758739004","g":"gr-16"},{"i":"format-response-log","p":"1000.0000000000002 3425.279758739004","g":"gr-16"},{"i":"csc-Routing","p":"1400 476.7431599983081"},{"i":"ads-routing-err","p":"1840 2281.6421712432325"},{"i":"search-ads-store","p":"1510 874.7477437457701","g":"gr-3"},{"i":"adsOfferRouting","p":"1120 1042.7477437457703","g":"gr-3"},{"i":"populateAdsOffer","p":"1360 1378.7477437457703","g":"gr-3"},{"i":"formatAdsResponse","p":"1160 1546.74774374577","g":"gr-3"},{"i":"adsOutbound","p":"1160 1714.74774374577","g":"gr-3"},{"i":"invaildatedAdsOffer","p":"1120 1210.7477437457703","g":"gr-3"},{"i":"adsJavaScriptErr","p":"1440 1546.74774374577","g":"gr-3"},{"i":"ads-ProfileStoreErr","p":"1760 1042.7477437457703","g":"gr-3"},{"i":"format-request-single-stream","p":"1441 1966.0137512423862","g":"gr-4"},{"i":"profileRetrived","p":"1480 1042.7477437457703","g":"gr-3"},{"i":"csc-calculations","p":"1440 1210.7477437457703","g":"gr-3"},{"i":"invokeUsDataServices-1791","p":"284.5 896.7477437457703","g":"gr-5"},{"i":"GenerateRequest-1791","p":"419 540.7477437457703","g":"gr-5"},{"i":"E0006-Data-Services-Error-1791","p":"1083.9843749999998 1268.009167494919","g":"gr-15"},{"i":"esDebugDsRequest-1791","p":"572.5 896.7477437457703","g":"gr-5"},{"i":"esDebugDsResponse-1791","p":"321.13671875 1802.0091674949203","g":"gr-6"},{"i":"split-1-1791","p":"424 718.7477437457703","g":"gr-5"},{"i":"split-2-1791","p":"417.63671874999955 1268.009167494918","g":"gr-6"},{"i":"parseResponse-1791","p":"617.6367187500011 1446.0091674949194","g":"gr-6"},{"i":"calcDSResponseTime-1791","p":"319.63671875 1624.0091674949203","g":"gr-6"},{"i":"getFileToSend-1738","p":"422.1661376953118 2367.2667549906864","g":"gr-4-1738"},{"i":"onlyFilesWithContent-1738","p":"285.1661376953118 2545.2667549906864","g":"gr-4-1738"},{"i":"split-3-1738","p":"302.1661376953118 2723.2667549906864","g":"gr-4-1738"},{"i":"sftpFullResponse-1738","p":"376.6661376953118 2901.2667549906864","g":"gr-4-1738"},{"i":"esDebugSFTP-1738","p":"582.1661376953125 2545.2667549906864","g":"gr-4-1738"},{"i":"getSuccessStatus","p":"337.63671874999955 1446.009167494919","g":"gr-6"},{"i":"search-model-year-store","p":"1630 706.7477437457701","g":"gr-3"}],"l":[{"f":"ingress","t":"createIsRef","s":"s-6-B"},{"f":"invokeDM-CanadianRetail","t":"createErrorField-5292","s":"s-1-B"},{"f":"invokeDM-CanadianRetail","t":"esDEBUG","s":"s-1-B"},{"f":"invokeDM-CanadianRetail","t":"E0003-REST-Invocation-Error","s":"s-3-E"},{"f":"createIsRef","t":"corrId","s":"s-4-B"},{"f":"createOtherFields-5292","t":"egressERROR-5292","s":"s-2-B-5292"},{"f":"createOtherFields-5292","t":"esERRORS","s":"s-2-B-5292"},{"f":"createErrorField-5292","t":"egress-5292","s":"s-3-B-5292"},{"f":"createErrorField-5292","t":"js-2","s":"s-3-B-5292"},{"f":"callTypeRouting","t":"E0002-Payload-Routing-Error","s":"s-1-E"},{"f":"callTypeRouting","t":"csc-Routing","s":"strCanadianRetail"},{"f":"callTypeRouting","t":"format-request-log","s":"strCanadianRetail"},{"f":"callTypeRouting","t":"invokeDM-CanadianCommercial","s":"strCanadianCommercial"},{"f":"callTypeRouting","t":"invokeDM-UsRetail","s":"strUsRetail"},{"f":"callTypeRouting","t":"GenerateRequest-1791","s":"strUsCommercial"},{"f":"determine-call-type","t":"callTypeRouting","s":"s-2-B"},{"f":"determine-call-type","t":"E0001-Call-Type-Identification-Error","s":"s-2-E"},{"f":"invokeDM-CanadianCommercial","t":"createErrorField-5292","s":"s-5-B"},{"f":"invokeDM-CanadianCommercial","t":"esDEBUG","s":"s-5-B"},{"f":"invokeDM-CanadianCommercial","t":"E0003-REST-Invocation-Error","s":"s-4-E"},{"f":"E0001-Call-Type-Identification-Error","t":"createOtherFields-5292","s":"s-7-B"},{"f":"E0003-REST-Invocation-Error","t":"createOtherFields-5292","s":"s-8-B"},{"f":"E0002-Payload-Routing-Error","t":"createOtherFields-5292","s":"s-9-B"},{"f":"invokeDM-UsRetail","t":"esDEBUG","s":"s-10-B"},{"f":"invokeDM-UsRetail","t":"createErrorField-5292","s":"s-10-B"},{"f":"invokeDM-UsRetail","t":"E0003-REST-Invocation-Error","s":"s-5-E"},{"f":"invokeDM-UsCommercial","t":"createErrorField-5292","s":"s-11-B"},{"f":"invokeDM-UsCommercial","t":"esDEBUG","s":"s-11-B"},{"f":"invokeDM-UsCommercial","t":"E0003-REST-Invocation-Error","s":"s-6-E"},{"f":"add-streamProcessing-DT","t":"determine-call-type","s":"s-3-B"},{"f":"add-streamProcessing-DT","t":"E0001-Call-Type-Identification-Error","s":"s-7-E"},{"f":"corrId","t":"split","s":"s-12-B"},{"f":"split","t":"add-streamProcessing-DT","s":"s-15411"},{"f":"split","t":"logStartFormatter","s":"s-15458"},{"f":"logStartFormatter","t":"log-job","s":"s-13-B"},{"f":"format-request-log","t":"log-job","s":"s-14-B"},{"f":"js-2","t":"esResponseDebug","s":"s-19949"},{"f":"js-2","t":"parse-reponse-corrid","s":"s-19949"},{"f":"parse-reponse-corrid","t":"format-response-log","s":"s-15-B"},{"f":"format-response-log","t":"log-job","s":"s-16-B"},{"f":"csc-Routing","t":"ads-routing-err","s":"s-10-E"},{"f":"csc-Routing","t":"format-request-single-stream","s":"strRetailDm"},{"f":"csc-Routing","t":"search-model-year-store","s":"strAdsStore"},{"f":"search-ads-store","t":"adsOfferRouting","s":"s-30-B"},{"f":"search-ads-store","t":"profileRetrived","s":"s-30-B"},{"f":"search-ads-store","t":"ads-ProfileStoreErr","s":"s-12-E"},{"f":"adsOfferRouting","t":"ads-routing-err","s":"s-13-E"},{"f":"adsOfferRouting","t":"format-request-single-stream","s":"getAldDecision"},{"f":"adsOfferRouting","t":"invaildatedAdsOffer","s":"invalidAdsOffer"},{"f":"adsOfferRouting","t":"csc-calculations","s":"sendAdsOffer"},{"f":"populateAdsOffer","t":"formatAdsResponse","s":"s-31-B"},{"f":"populateAdsOffer","t":"adsJavaScriptErr","s":"s-14-E"},{"f":"formatAdsResponse","t":"adsOutbound","s":"s-32-B"},{"f":"invaildatedAdsOffer","t":"format-request-single-stream","s":"s-33-B"},{"f":"invaildatedAdsOffer","t":"adsJavaScriptErr","s":"s-15-E"},{"f":"format-request-single-stream","t":"invokeDM-CanadianRetail","s":"s-34-B"},{"f":"csc-calculations","t":"populateAdsOffer","s":"s-35-B"},{"f":"csc-calculations","t":"adsJavaScriptErr","s":"s-16-E"},{"f":"invokeUsDataServices-1791","t":"split-2-1791","s":"s-4-B-1791"},{"f":"invokeUsDataServices-1791","t":"E0006-Data-Services-Error-1791","s":"s-1-E-1791"},{"f":"GenerateRequest-1791","t":"split-1-1791","s":"s-5-B-1791"},{"f":"E0006-Data-Services-Error-1791","t":"createOtherFields-5292","s":"s-6-B-1791"},{"f":"split-1-1791","t":"invokeUsDataServices-1791","s":"s-5061-1791"},{"f":"split-1-1791","t":"esDebugDsRequest-1791","s":"s-5324-1791"},{"f":"split-2-1791","t":"getSuccessStatus","s":"s-7101-1791"},{"f":"split-2-1791","t":"parseResponse-1791","s":"s-7350-1791"},{"f":"split-2-1791","t":"getFileToSend-1738","s":"s-2873"},{"f":"parseResponse-1791","t":"invokeDM-UsCommercial","s":"s-8-B-1791"},{"f":"calcDSResponseTime-1791","t":"esDebugDsResponse-1791","s":"s-9-B-1791"},{"f":"getFileToSend-1738","t":"onlyFilesWithContent-1738","s":"s-11-B-1738"},{"f":"getFileToSend-1738","t":"esDebugSFTP-1738","s":"s-3-E-1738"},{"f":"onlyFilesWithContent-1738","t":"split-3-1738","s":"s-12-B-1738"},{"f":"split-3-1738","t":"sftpFullResponse-1738","s":"s-9700-1738"},{"f":"split-3-1738","t":"getFileToSend-1738","s":"s-10288-1738"},{"f":"getSuccessStatus","t":"calcDSResponseTime-1791","s":"s-17-B"},{"f":"search-model-year-store","t":"search-ads-store","s":"s-18-B"},{"f":"search-model-year-store","t":"ads-ProfileStoreErr","s":"s-8-E"}],"g":[{"i":"gr-1","n":"Ingress Steps","e":false,"p":"1870.320607500846 0"},{"i":"gr-2","n":"Call Type Routing","e":false,"p":"656.785451250846 322.37157999915416"},{"i":"gr-3","n":"CSC Contextual Profiles","e":true,"p":"1098.738576250846 644.7431599983081"},{"i":"gr-4","n":"DM Domain Calls","e":true,"p":"491.73857625084594 1904.0091674949244"},{"i":"gr-15","n":"US Data Error Formatters","e":false,"p":"709.222951250846 1204.004583747462"},{"i":"gr-16","n":"Egress Job Steps","e":false,"p":"1017.039357500846 2827.2751749915406"},{"i":"gr-5","n":"Request US Data Enhancement","e":false,"p":"287.2463887508461 490.37157999915416"},{"i":"gr-6","n":"Parse US Data Enhancement","e":false,"p":"296.3752950008461 1204.004583747462"},{"i":"gr-4-1738","n":"Send via SFTP","e":false,"p":"267.3987325008461 2295.270591244079"}],"m":{"x":{"p":"1600 0","d":1600,"l":1601},"y":{"p":"0 1600","d":1600,"l":1601}},"svg":"<svg width=\"2232px\" height=\"2901px\" viewBox=\"0 0 2232 2901\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#mainClip87108)\"><g transform=\"matrix(1, 0, 0, 1, 16, 16)\"><g transform=\"matrix(1, 0, 0, 1, -30, -30)\"><rect x=\"0\" y=\"0\" width=\"2284\" height=\"2953\" fill=\"#f2f2f2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87110)\"></g></g><g transform=\"matrix(1, 0, 0, 1, 1870.320607500846, 0)\"><rect x=\"0\" y=\"0\" width=\"139.35878499830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 133.35878499830793,0 C 135.59736124915395,0 138.35878499830793,2.761423749153968 138.35878499830793,5 L 138.35878499830793,34.743159998307945 C 138.35878499830793,36.981736249153975 135.59736124915395,39.743159998307945 133.35878499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 133.35878499830793,0 C 135.59736124915395,0 138.35878499830793,2.761423749153968 138.35878499830793,5 L 138.35878499830793,34.743159998307945 C 138.35878499830793,36.981736249153975 135.59736124915395,39.743159998307945 133.35878499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Ingress Steps</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 491.73857625084594, 1904.0091674949244)\"><rect x=\"0\" y=\"0\" width=\"1216.522847498308\" height=\"866.5172587216555\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 7.261423749153968, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3\" fill=\"black\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path><path d=\"M 0,3 L 6,3\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">DM Domain Calls</text></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 40.743159998307945)\"><path d=\"M 5,0 L 15,0 M 19,0 L 29,0 M 33,0 L 43,0 M 47,0 L 57,0 M 61,0 L 71,0 M 75,0 L 85,0 M 89,0 L 99,0 M 103,0 L 113,0 M 117,0 L 127,0 M 131,0 L 141,0 M 145,0 L 155,0 M 159,0 L 169,0 M 173,0 L 183,0 M 187,0 L 197,0 M 201,0 L 211,0 M 215,0 L 225,0 M 229,0 L 239,0 M 243,0 L 253,0 M 257,0 L 267,0 M 271,0 L 281,0 M 285,0 L 295,0 M 299,0 L 309,0 M 313,0 L 323,0 M 327,0 L 337,0 M 341,0 L 351,0 M 355,0 L 365,0 M 369,0 L 379,0 M 383,0 L 393,0 M 397,0 L 407,0 M 411,0 L 421,0 M 425,0 L 435,0 M 439,0 L 449,0 M 453,0 L 463,0 M 467,0 L 477,0 M 481,0 L 491,0 M 495,0 L 505,0 M 509,0 L 519,0 M 523,0 L 533,0 M 537,0 L 547,0 M 551,0 L 561,0 M 565,0 L 575,0 M 579,0 L 589,0 M 593,0 L 603,0 M 607,0 L 617,0 M 621,0 L 631,0 M 635,0 L 645,0 M 649,0 L 659,0 M 663,0 L 673,0 M 677,0 L 687,0 M 691,0 L 701,0 M 705,0 L 715,0 M 719,0 L 729,0 M 733,0 L 743,0 M 747,0 L 757,0 M 761,0 L 771,0 M 775,0 L 785,0 M 789,0 L 799,0 M 803,0 L 813,0 M 817,0 L 827,0 M 831,0 L 841,0 M 845,0 L 855,0 M 859,0 L 869,0 M 873,0 L 883,0 M 887,0 L 897,0 M 901,0 L 911,0 M 915,0 L 925,0 M 929,0 L 939,0 M 943,0 L 953,0 M 957,0 L 967,0 M 971,0 L 981,0 M 985,0 L 995,0 M 999,0 L 1009,0 M 1013,0 L 1023,0 M 1027,0 L 1037,0 M 1041,0 L 1051,0 M 1055,0 L 1065,0 M 1069,0 L 1079,0 M 1083,0 L 1093,0 M 1097,0 L 1107,0 M 1111,0 L 1121,0 M 1125,0 L 1135,0 M 1139,0 L 1149,0 M 1153,0 L 1163,0 M 1167,0 L 1177,0 M 1181,0 L 1191,0 M 1195,0 L 1205,0 M 1209,0 L 1210.522847498308,0 L 1212.2484968541337,0.46645021472477677 L 1213.8623135923754,1.6605339059327378 L 1215.0563972835832,3.2743506441743295 L 1215.522847498308,4.999999999999999 L 1215.5228485868322,5.886901230452315 M 1215.5228534961684,9.886901230449302 L 1215.522865769509,19.886901230441772 M 1215.5228706788453,23.88690123043876 L 1215.522882952186,33.88690123043123 M 1215.5228878615221,37.886901230428215 L 1215.5229001348628,47.88690123042068 M 1215.522905044199,51.88690123041767 L 1215.5229173175396,61.88690123041014 M 1215.5229222268758,65.88690123040712 L 1215.5229345002165,75.88690123039959 M 1215.5229394095527,79.88690123039657 L 1215.5229516828933,89.88690123038904 M 1215.5229565922295,93.88690123038603 L 1215.5229688655702,103.8869012303785 M 1215.5229737749064,107.88690123037549 L 1215.522986048247,117.88690123036795 M 1215.5229909575833,121.88690123036494 L 1215.523003230924,131.8869012303574 M 1215.5230081402601,135.8869012303544 L 1215.5230204136008,145.88690123034687 M 1215.523025322937,149.88690123034385 L 1215.5230375962776,159.88690123033632 M 1215.5230425056138,163.8869012303333 L 1215.5230547789545,173.88690123032578 M 1215.5230596882907,177.88690123032276 L 1215.5230719616313,187.88690123031523 M 1215.5230768709675,191.88690123031222 L 1215.5230891443082,201.8869012303047 M 1215.5230940536444,205.88690123030167 L 1215.523106326985,215.88690123029414 M 1215.5231112363213,219.88690123029113 L 1215.523123509662,229.8869012302836 M 1215.523128418998,233.88690123028059 L 1215.5231406923388,243.88690123027305 M 1215.523145601675,247.88690123027004 L 1215.5231578750156,257.88690123026254 M 1215.5231627843518,261.8869012302595 L 1215.5231750576925,271.88690123025196 M 1215.5231799670287,275.88690123024895 L 1215.5231922403693,285.8869012302414 M 1215.5231971497055,289.8869012302384 L 1215.5232094230462,299.8869012302308 M 1215.5232143323824,303.8869012302278 L 1215.523226605723,313.88690123022025 M 1215.5232315150593,317.88690123021723 L 1215.5232437884,327.8869012302097 M 1215.523248697736,331.88690123020666 L 1215.5232609710768,341.8869012301991 M 1215.523265880413,345.8869012301961 L 1215.5232781537536,355.8869012301885 M 1215.5232830630898,359.8869012301855 L 1215.5232953364305,369.88690123017795 M 1215.5233002457667,373.88690123017494 L 1215.5233125191073,383.8869012301674 M 1215.5233174284435,387.88690123016437 L 1215.5233297017842,397.8869012301568 M 1215.5233346111204,401.8869012301538 L 1215.523346884461,411.88690123014624 M 1215.5233517937972,415.8869012301432 L 1215.523364067138,425.88690123013566 M 1215.523368976474,429.88690123013265 L 1215.5233812498147,439.8869012301251 M 1215.523386159151,443.8869012301221 L 1215.5233984324916,453.8869012301145 M 1215.5234033418278,457.8869012301115 L 1215.5234156151685,467.88690123010394 M 1215.5234205245047,471.88690123010093 L 1215.5234327978453,481.8869012300934 M 1215.5234377071815,485.88690123009036 L 1215.5234499805222,495.8869012300828 M 1215.5234548898584,499.8869012300798 L 1215.523467163199,509.8869012300722 M 1215.5234720725352,513.8869012300693 L 1215.5234843458759,523.8869012300618 M 1215.523489255212,527.8869012300588 L 1215.5235015285527,537.8869012300513 M 1215.523506437889,541.8869012300484 L 1215.5235187112296,551.8869012300408 M 1215.5235236205658,555.8869012300379 L 1215.5235358939065,565.8869012300304 M 1215.5235408032427,569.8869012300274 L 1215.5235530765833,579.8869012300199 M 1215.5235579859195,583.886901230017 L 1215.5235702592602,593.8869012300095 M 1215.5235751685964,597.8869012300065 L 1215.523587441937,607.886901229999 M 1215.5235923512732,611.886901229996 L 1215.5236046246139,621.8869012299886 M 1215.52360953395,625.8869012299856 L 1215.5236218072907,635.8869012299781 M 1215.523626716627,639.8869012299751 L 1215.5236389899676,649.8869012299676 M 1215.5236438993038,653.8869012299647 L 1215.5236561726445,663.8869012299572 M 1215.5236610819807,667.8869012299542 L 1215.5236733553213,677.8869012299467 M 1215.5236782646575,681.8869012299438 L 1215.5236905379982,691.8869012299363 M 1215.5236954473344,695.8869012299333 L 1215.523707720675,705.8869012299258 M 1215.5237126300112,709.8869012299228 L 1215.5237249033519,719.8869012299153 M 1215.523729812688,723.8869012299124 L 1215.5237420860287,733.8869012299049 M 1215.523746995365,737.8869012299019 L 1215.5237592687056,747.8869012298944 M 1215.5237641780418,751.8869012298915 L 1215.5237764513824,761.886901229884 M 1215.5237813607187,765.886901229881 L 1215.5237936340593,775.8869012298735 M 1215.5237985433955,779.8869012298705 L 1215.5238108167362,789.886901229863 M 1215.5238157260724,793.8869012298601 L 1215.523827999413,803.8869012298526 M 1215.5238329087492,807.8869012298496 L 1215.5238451820899,817.8869012298421 M 1215.5238474983116,819.7740987233489 M 1215.0573972835869,821.4997480791744 M 1214.863955552923,821.7611866241594 L 1213.863313592379,823.1135648174161 L 1212.2494968541373,824.3076485086242 L 1210.5238474983116,824.7740987233489 L 1206.0012962630587,824.7740987233489 M 1202.0012962630587,824.7740987233489 L 1192.0012962630587,824.7740987233489 M 1188.0012962630587,824.7740987233489 L 1178.0012962630587,824.7740987233489 M 1174.0012962630587,824.7740987233489 L 1164.0012962630587,824.7740987233489 M 1160.0012962630587,824.7740987233489 L 1150.0012962630587,824.7740987233489 M 1146.0012962630587,824.7740987233489 L 1136.0012962630587,824.7740987233489 M 1132.0012962630587,824.7740987233489 L 1122.0012962630587,824.7740987233489 M 1118.0012962630587,824.7740987233489 L 1108.0012962630587,824.7740987233489 M 1104.0012962630587,824.7740987233489 L 1094.0012962630587,824.7740987233489 M 1090.0012962630587,824.7740987233489 L 1080.0012962630587,824.7740987233489 M 1076.0012962630587,824.7740987233489 L 1066.0012962630587,824.7740987233489 M 1062.0012962630587,824.7740987233489 L 1052.0012962630587,824.7740987233489 M 1048.0012962630587,824.7740987233489 L 1038.0012962630587,824.7740987233489 M 1034.0012962630587,824.7740987233489 L 1024.0012962630587,824.7740987233489 M 1020.0012962630587,824.7740987233489 L 1010.0012962630587,824.7740987233489 M 1006.0012962630587,824.7740987233489 L 996.0012962630587,824.7740987233489 M 992.0012962630587,824.7740987233489 L 982.0012962630587,824.7740987233489 M 978.0012962630587,824.7740987233489 L 968.0012962630587,824.7740987233489 M 964.0012962630587,824.7740987233489 L 954.0012962630587,824.7740987233489 M 950.0012962630587,824.7740987233489 L 940.0012962630587,824.7740987233489 M 936.0012962630587,824.7740987233489 L 926.0012962630587,824.7740987233489 M 922.0012962630587,824.7740987233489 L 912.0012962630587,824.7740987233489 M 908.0012962630587,824.7740987233489 L 898.0012962630587,824.7740987233489 M 894.0012962630587,824.7740987233489 L 884.0012962630587,824.7740987233489 M 880.0012962630587,824.7740987233489 L 870.0012962630587,824.7740987233489 M 866.0012962630587,824.7740987233489 L 856.0012962630587,824.7740987233489 M 852.0012962630587,824.7740987233489 L 842.0012962630587,824.7740987233489 M 838.0012962630587,824.7740987233489 L 828.0012962630587,824.7740987233489 M 824.0012962630587,824.7740987233489 L 814.0012962630587,824.7740987233489 M 810.0012962630587,824.7740987233489 L 800.0012962630587,824.7740987233489 M 796.0012962630587,824.7740987233489 L 786.0012962630587,824.7740987233489 M 782.0012962630587,824.7740987233489 L 772.0012962630587,824.7740987233489 M 768.0012962630587,824.7740987233489 L 758.0012962630587,824.7740987233489 M 754.0012962630587,824.7740987233489 L 744.0012962630587,824.7740987233489 M 740.0012962630587,824.7740987233489 L 730.0012962630587,824.7740987233489 M 726.0012962630587,824.7740987233489 L 716.0012962630587,824.7740987233489 M 712.0012962630587,824.7740987233489 L 702.0012962630587,824.7740987233489 M 698.0012962630587,824.7740987233489 L 688.0012962630587,824.7740987233489 M 684.0012962630587,824.7740987233489 L 674.0012962630587,824.7740987233489 M 670.0012962630587,824.7740987233489 L 660.0012962630587,824.7740987233489 M 656.0012962630587,824.7740987233489 L 646.0012962630587,824.7740987233489 M 642.0012962630587,824.7740987233489 L 632.0012962630587,824.7740987233489 M 628.0012962630587,824.7740987233489 L 618.0012962630587,824.7740987233489 M 614.0012962630587,824.7740987233489 L 604.0012962630587,824.7740987233489 M 600.0012962630587,824.7740987233489 L 590.0012962630587,824.7740987233489 M 586.0012962630587,824.7740987233489 L 576.0012962630587,824.7740987233489 M 572.0012962630587,824.7740987233489 L 562.0012962630587,824.7740987233489 M 558.0012962630587,824.7740987233489 L 548.0012962630587,824.7740987233489 M 544.0012962630587,824.7740987233489 L 534.0012962630587,824.7740987233489 M 530.0012962630587,824.7740987233489 L 520.0012962630587,824.7740987233489 M 516.0012962630587,824.7740987233489 L 506.00129626305875,824.7740987233489 M 502.00129626305875,824.7740987233489 L 492.00129626305875,824.7740987233489 M 488.00129626305875,824.7740987233489 L 478.00129626305875,824.7740987233489 M 474.00129626305875,824.7740987233489 L 464.00129626305875,824.7740987233489 M 460.00129626305875,824.7740987233489 L 450.00129626305875,824.7740987233489 M 446.00129626305875,824.7740987233489 L 436.00129626305875,824.7740987233489 M 432.00129626305875,824.7740987233489 L 422.00129626305875,824.7740987233489 M 418.00129626305875,824.7740987233489 L 408.00129626305875,824.7740987233489 M 404.00129626305875,824.7740987233489 L 394.00129626305875,824.7740987233489 M 390.00129626305875,824.7740987233489 L 380.00129626305875,824.7740987233489 M 376.00129626305875,824.7740987233489 L 366.00129626305875,824.7740987233489 M 362.00129626305875,824.7740987233489 L 352.00129626305875,824.7740987233489 M 348.00129626305875,824.7740987233489 L 338.00129626305875,824.7740987233489 M 334.00129626305875,824.7740987233489 L 324.00129626305875,824.7740987233489 M 320.00129626305875,824.7740987233489 L 310.00129626305875,824.7740987233489 M 306.00129626305875,824.7740987233489 L 296.00129626305875,824.7740987233489 M 292.00129626305875,824.7740987233489 L 282.00129626305875,824.7740987233489 M 278.00129626305875,824.7740987233489 L 268.00129626305875,824.7740987233489 M 264.00129626305875,824.7740987233489 L 254.00129626305875,824.7740987233489 M 250.00129626305875,824.7740987233489 L 240.00129626305875,824.7740987233489 M 236.00129626305875,824.7740987233489 L 226.00129626305875,824.7740987233489 M 222.00129626305875,824.7740987233489 L 212.00129626305875,824.7740987233489 M 208.00129626305875,824.7740987233489 L 198.00129626305875,824.7740987233489 M 194.00129626305875,824.7740987233489 L 184.00129626305875,824.7740987233489 M 180.00129626305875,824.7740987233489 L 170.00129626305875,824.7740987233489 M 166.00129626305875,824.7740987233489 L 156.00129626305875,824.7740987233489 M 152.00129626305875,824.7740987233489 L 142.00129626305875,824.7740987233489 M 138.00129626305875,824.7740987233489 L 128.00129626305875,824.7740987233489 M 124.00129626305875,824.7740987233489 L 114.00129626305875,824.7740987233489 M 110.00129626305875,824.7740987233489 L 100.00129626305875,824.7740987233489 M 96.00129626305875,824.7740987233489 L 86.00129626305875,824.7740987233489 M 82.00129626305875,824.7740987233489 L 72.00129626305875,824.7740987233489 M 68.00129626305875,824.7740987233489 L 58.00129626305875,824.7740987233489 M 54.00129626305875,824.7740987233489 L 44.00129626305875,824.7740987233489 M 40.00129626305875,824.7740987233489 L 30.001296263058748,824.7740987233489 M 26.001296263058748,824.7740987233489 L 16.001296263058748,824.7740987233489 M 12.001296263058748,824.7740987233489 L 5.001000000003614,824.7740987233489 L 3.2753506441779443,824.3076485086242 L 2.300954009947051,823.58667994873 M 1.6615339059363525,823.1135648174161 M 0.46745021472839166,821.4997480791744 M 0.15509719100464003,820.3441868270543 L 0.001000000003614887,819.7740987233489 L 0.0010115485450823223,810.3646462576501 M 0.0010164578813097068,806.364646257653 L 0.0010287312218781677,796.3646462576605 M 0.0010336405581055522,792.3646462576635 L 0.0010459138986740131,782.364646257671 M 0.0010508232349013976,778.3646462576739 L 0.0010630965754698585,768.3646462576814 M 0.001068005911697243,764.3646462576844 L 0.001080279252265704,754.3646462576919 M 0.0010851885884930884,750.3646462576949 L 0.0010974619290615494,740.3646462577024 M 0.0011023712652889338,736.3646462577053 L 0.0011146446058573948,726.3646462577128 M 0.0011195539420847792,722.3646462577158 L 0.0011318272826532402,712.3646462577233 M 0.0011367366188806247,708.3646462577262 L 0.0011490099594490856,698.3646462577337 M 0.00115391929567647,694.3646462577367 L 0.001166192636244931,684.3646462577442 M 0.0011711019724723155,680.3646462577472 L 0.0011833753130407764,670.3646462577547 M 0.0011882846492681609,666.3646462577576 L 0.0012005579898366218,656.3646462577651 M 0.0012054673260640063,652.3646462577681 L 0.0012177406666324673,642.3646462577756 M 0.0012226500028598517,638.3646462577785 L 0.0012349233434283127,628.364646257786 M 0.0012398326796556971,624.364646257789 L 0.001252106020224158,614.3646462577965 M 0.0012570153564515425,610.3646462577994 L 0.0012692886970200035,600.364646257807 M 0.001274198033247388,596.3646462578099 L 0.001286471373815849,586.3646462578174 M 0.0012913807100432334,582.3646462578204 L 0.0013036540506116943,572.3646462578279 M 0.0013085633868390788,568.3646462578308 L 0.0013208367274075397,558.3646462578383 M 0.0013257460636349242,554.3646462578413 L 0.0013380194042033851,544.3646462578488 M 0.0013429287404307696,540.3646462578517 L 0.0013552020809992306,530.3646462578592 M 0.001360111417226615,526.3646462578622 L 0.001372384757795076,516.3646462578697 M 0.0013772940940224604,512.3646462578727 L 0.0013895674345909214,502.36464625788017 M 0.0013944767708183058,498.3646462578832 L 0.0014067501113867668,488.36464625789074 M 0.0014116594476141513,484.36464625789375 L 0.0014239327881826122,474.3646462579013 M 0.0014288421244099967,470.3646462579043 L 0.0014411154649784576,460.3646462579119 M 0.001446024801205842,456.3646462579149 L 0.001458298141774303,446.36464625792246 M 0.0014632074780016875,442.3646462579255 L 0.0014754808185701484,432.36464625793303 M 0.001480390154797533,428.36464625793604 L 0.0014926634953659939,418.3646462579436 M 0.0014975728315933783,414.3646462579466 L 0.0015098461721618393,404.3646462579542 M 0.0015147555083892237,400.3646462579572 L 0.0015270288489576847,390.36464625796475 M 0.0015319381851850692,386.36464625796776 L 0.00154421152575353,376.3646462579753 M 0.0015491208619809146,372.36464625797834 L 0.0015613942025493755,362.3646462579859 M 0.00156630353877676,358.3646462579889 L 0.001578576879345221,348.36464625799647 M 0.0015834862155726054,344.3646462579995 L 0.0015957595561410663,334.36464625800704 M 0.0016006688923684508,330.36464625801005 L 0.0016129422329369118,320.3646462580176 M 0.0016178515691642962,316.3646462580206 L 0.0016301249097327572,306.3646462580282 M 0.0016350342459601416,302.3646462580312 L 0.0016473075865286026,292.36464625803876 M 0.001652216922755987,288.3646462580418 L 0.001664490263324448,278.36464625804933 M 0.0016693995995518325,274.36464625805235 L 0.0016816729401202934,264.3646462580599 M 0.0016865822763476779,260.3646462580629 L 0.0016988556169161388,250.36464625807045 M 0.0017037649531435233,246.36464625807346 L 0.0017160382937119842,236.364646258081 M 0.0017209476299393687,232.364646258084 L 0.0017332209705078296,222.36464625809154 M 0.001738130306735214,218.36464625809455 L 0.001750403647303675,208.36464625810208 M 0.0017553129835310595,204.3646462581051 L 0.0017675863240995205,194.36464625811263 M 0.001772495660326905,190.36464625811564 L 0.0017847690008953659,180.36464625812317 M 0.0017896783371227503,176.36464625812619 L 0.0018019516776912113,166.36464625813372 M 0.0018068610139185958,162.36464625813673 L 0.0018191343544870567,152.36464625814426 M 0.0018240436907144412,148.36464625814727 L 0.0018363170312829021,138.3646462581548 M 0.0018412263675102866,134.36464625815782 L 0.0018534997080787475,124.36464625816535 M 0.001858409044306132,120.36464625816836 L 0.001870682384874593,110.3646462581759 M 0.0018755917211019774,106.36464625817891 L 0.0018878650616704384,96.36464625818644 M 0.0018927743978978228,92.36464625818945 L 0.0019050477384662838,82.36464625819698 M 0.0019099570746936682,78.3646462582 L 0.0019222304152621292,68.36464625820753 M 0.0019271397514895137,64.36464625821054 L 0.0019394130920579746,54.36464625821807 M 0.001944322428285359,50.364646258221086 L 0.0019565957688538202,40.36464625822862 M 0.0019615051050812047,36.36464625823163 L 0.001973778445649666,26.364646258239162 M 0.0019786877818770503,22.364646258242175 L 0.0019909611224455115,12.364646258249707 M 0.001995870458672896,8.36464625825272 L 0.0020000000036148927,4.999999999999919 L 0.46845021472839166,3.274350644174249 L 1.6625339059363529,1.6605339059326572 L 3.2763506441779446,0.46645021472469606 L 4.080184751933677,0.24917050439422783 M 5.002000000003615,-8.071321389024888e-14 M 5,0 L 15,0 M 19,0 L 29,0 M 33,0 L 43,0 M 47,0 L 57,0 M 61,0 L 71,0 M 75,0 L 85,0 M 89,0 L 99,0 M 103,0 L 113,0 M 117,0 L 127,0 M 131,0 L 141,0 M 145,0 L 155,0 M 159,0 L 169,0 M 173,0 L 183,0 M 187,0 L 197,0 M 201,0 L 211,0 M 215,0 L 225,0 M 229,0 L 239,0 M 243,0 L 253,0 M 257,0 L 267,0 M 271,0 L 281,0 M 285,0 L 295,0 M 299,0 L 309,0 M 313,0 L 323,0 M 327,0 L 337,0 M 341,0 L 351,0 M 355,0 L 365,0 M 369,0 L 379,0 M 383,0 L 393,0 M 397,0 L 407,0 M 411,0 L 421,0 M 425,0 L 435,0 M 439,0 L 449,0 M 453,0 L 463,0 M 467,0 L 477,0 M 481,0 L 491,0 M 495,0 L 505,0 M 509,0 L 519,0 M 523,0 L 533,0 M 537,0 L 547,0 M 551,0 L 561,0 M 565,0 L 575,0 M 579,0 L 589,0 M 593,0 L 603,0 M 607,0 L 617,0 M 621,0 L 631,0 M 635,0 L 645,0 M 649,0 L 659,0 M 663,0 L 673,0 M 677,0 L 687,0 M 691,0 L 701,0 M 705,0 L 715,0 M 719,0 L 729,0 M 733,0 L 743,0 M 747,0 L 757,0 M 761,0 L 771,0 M 775,0 L 785,0 M 789,0 L 799,0 M 803,0 L 813,0 M 817,0 L 827,0 M 831,0 L 841,0 M 845,0 L 855,0 M 859,0 L 869,0 M 873,0 L 883,0 M 887,0 L 897,0 M 901,0 L 911,0 M 915,0 L 925,0 M 929,0 L 939,0 M 943,0 L 953,0 M 957,0 L 967,0 M 971,0 L 981,0 M 985,0 L 995,0 M 999,0 L 1009,0 M 1013,0 L 1023,0 M 1027,0 L 1037,0 M 1041,0 L 1051,0 M 1055,0 L 1065,0 M 1069,0 L 1079,0 M 1083,0 L 1093,0 M 1097,0 L 1107,0 M 1111,0 L 1121,0 M 1125,0 L 1135,0 M 1139,0 L 1149,0 M 1153,0 L 1163,0 M 1167,0 L 1177,0 M 1181,0 L 1191,0 M 1195,0 L 1205,0 M 1209,0 L 1210.522847498308,0 L 1212.2484968541337,0.46645021472477677 L 1213.8623135923754,1.6605339059327378 L 1215.0563972835832,3.2743506441743295 L 1215.522847498308,4.999999999999999 L 1215.5228485868322,5.886901230452315 M 1215.5228534961684,9.886901230449302 L 1215.522865769509,19.886901230441772 M 1215.5228706788453,23.88690123043876 L 1215.522882952186,33.88690123043123 M 1215.5228878615221,37.886901230428215 L 1215.5229001348628,47.88690123042068 M 1215.522905044199,51.88690123041767 L 1215.5229173175396,61.88690123041014 M 1215.5229222268758,65.88690123040712 L 1215.5229345002165,75.88690123039959 M 1215.5229394095527,79.88690123039657 L 1215.5229516828933,89.88690123038904 M 1215.5229565922295,93.88690123038603 L 1215.5229688655702,103.8869012303785 M 1215.5229737749064,107.88690123037549 L 1215.522986048247,117.88690123036795 M 1215.5229909575833,121.88690123036494 L 1215.523003230924,131.8869012303574 M 1215.5230081402601,135.8869012303544 L 1215.5230204136008,145.88690123034687 M 1215.523025322937,149.88690123034385 L 1215.5230375962776,159.88690123033632 M 1215.5230425056138,163.8869012303333 L 1215.5230547789545,173.88690123032578 M 1215.5230596882907,177.88690123032276 L 1215.5230719616313,187.88690123031523 M 1215.5230768709675,191.88690123031222 L 1215.5230891443082,201.8869012303047 M 1215.5230940536444,205.88690123030167 L 1215.523106326985,215.88690123029414 M 1215.5231112363213,219.88690123029113 L 1215.523123509662,229.8869012302836 M 1215.523128418998,233.88690123028059 L 1215.5231406923388,243.88690123027305 M 1215.523145601675,247.88690123027004 L 1215.5231578750156,257.88690123026254 M 1215.5231627843518,261.8869012302595 L 1215.5231750576925,271.88690123025196 M 1215.5231799670287,275.88690123024895 L 1215.5231922403693,285.8869012302414 M 1215.5231971497055,289.8869012302384 L 1215.5232094230462,299.8869012302308 M 1215.5232143323824,303.8869012302278 L 1215.523226605723,313.88690123022025 M 1215.5232315150593,317.88690123021723 L 1215.5232437884,327.8869012302097 M 1215.523248697736,331.88690123020666 L 1215.5232609710768,341.8869012301991 M 1215.523265880413,345.8869012301961 L 1215.5232781537536,355.8869012301885 M 1215.5232830630898,359.8869012301855 L 1215.5232953364305,369.88690123017795 M 1215.5233002457667,373.88690123017494 L 1215.5233125191073,383.8869012301674 M 1215.5233174284435,387.88690123016437 L 1215.5233297017842,397.8869012301568 M 1215.5233346111204,401.8869012301538 L 1215.523346884461,411.88690123014624 M 1215.5233517937972,415.8869012301432 L 1215.523364067138,425.88690123013566 M 1215.523368976474,429.88690123013265 L 1215.5233812498147,439.8869012301251 M 1215.523386159151,443.8869012301221 L 1215.5233984324916,453.8869012301145 M 1215.5234033418278,457.8869012301115 L 1215.5234156151685,467.88690123010394 M 1215.5234205245047,471.88690123010093 L 1215.5234327978453,481.8869012300934 M 1215.5234377071815,485.88690123009036 L 1215.5234499805222,495.8869012300828 M 1215.5234548898584,499.8869012300798 L 1215.523467163199,509.8869012300722 M 1215.5234720725352,513.8869012300693 L 1215.5234843458759,523.8869012300618 M 1215.523489255212,527.8869012300588 L 1215.5235015285527,537.8869012300513 M 1215.523506437889,541.8869012300484 L 1215.5235187112296,551.8869012300408 M 1215.5235236205658,555.8869012300379 L 1215.5235358939065,565.8869012300304 M 1215.5235408032427,569.8869012300274 L 1215.5235530765833,579.8869012300199 M 1215.5235579859195,583.886901230017 L 1215.5235702592602,593.8869012300095 M 1215.5235751685964,597.8869012300065 L 1215.523587441937,607.886901229999 M 1215.5235923512732,611.886901229996 L 1215.5236046246139,621.8869012299886 M 1215.52360953395,625.8869012299856 L 1215.5236218072907,635.8869012299781 M 1215.523626716627,639.8869012299751 L 1215.5236389899676,649.8869012299676 M 1215.5236438993038,653.8869012299647 L 1215.5236561726445,663.8869012299572 M 1215.5236610819807,667.8869012299542 L 1215.5236733553213,677.8869012299467 M 1215.5236782646575,681.8869012299438 L 1215.5236905379982,691.8869012299363 M 1215.5236954473344,695.8869012299333 L 1215.523707720675,705.8869012299258 M 1215.5237126300112,709.8869012299228 L 1215.5237249033519,719.8869012299153 M 1215.523729812688,723.8869012299124 L 1215.5237420860287,733.8869012299049 M 1215.523746995365,737.8869012299019 L 1215.5237592687056,747.8869012298944 M 1215.5237641780418,751.8869012298915 L 1215.5237764513824,761.886901229884 M 1215.5237813607187,765.886901229881 L 1215.5237936340593,775.8869012298735 M 1215.5237985433955,779.8869012298705 L 1215.5238108167362,789.886901229863 M 1215.5238157260724,793.8869012298601 L 1215.523827999413,803.8869012298526 M 1215.5238329087492,807.8869012298496 L 1215.5238451820899,817.8869012298421 M 1215.5238474983116,819.7740987233489 M 1215.0573972835869,821.4997480791744 M 1214.863955552923,821.7611866241594 L 1213.863313592379,823.1135648174161 L 1212.2494968541373,824.3076485086242 L 1210.5238474983116,824.7740987233489 L 1206.0012962630587,824.7740987233489 M 1202.0012962630587,824.7740987233489 L 1192.0012962630587,824.7740987233489 M 1188.0012962630587,824.7740987233489 L 1178.0012962630587,824.7740987233489 M 1174.0012962630587,824.7740987233489 L 1164.0012962630587,824.7740987233489 M 1160.0012962630587,824.7740987233489 L 1150.0012962630587,824.7740987233489 M 1146.0012962630587,824.7740987233489 L 1136.0012962630587,824.7740987233489 M 1132.0012962630587,824.7740987233489 L 1122.0012962630587,824.7740987233489 M 1118.0012962630587,824.7740987233489 L 1108.0012962630587,824.7740987233489 M 1104.0012962630587,824.7740987233489 L 1094.0012962630587,824.7740987233489 M 1090.0012962630587,824.7740987233489 L 1080.0012962630587,824.7740987233489 M 1076.0012962630587,824.7740987233489 L 1066.0012962630587,824.7740987233489 M 1062.0012962630587,824.7740987233489 L 1052.0012962630587,824.7740987233489 M 1048.0012962630587,824.7740987233489 L 1038.0012962630587,824.7740987233489 M 1034.0012962630587,824.7740987233489 L 1024.0012962630587,824.7740987233489 M 1020.0012962630587,824.7740987233489 L 1010.0012962630587,824.7740987233489 M 1006.0012962630587,824.7740987233489 L 996.0012962630587,824.7740987233489 M 992.0012962630587,824.7740987233489 L 982.0012962630587,824.7740987233489 M 978.0012962630587,824.7740987233489 L 968.0012962630587,824.7740987233489 M 964.0012962630587,824.7740987233489 L 954.0012962630587,824.7740987233489 M 950.0012962630587,824.7740987233489 L 940.0012962630587,824.7740987233489 M 936.0012962630587,824.7740987233489 L 926.0012962630587,824.7740987233489 M 922.0012962630587,824.7740987233489 L 912.0012962630587,824.7740987233489 M 908.0012962630587,824.7740987233489 L 898.0012962630587,824.7740987233489 M 894.0012962630587,824.7740987233489 L 884.0012962630587,824.7740987233489 M 880.0012962630587,824.7740987233489 L 870.0012962630587,824.7740987233489 M 866.0012962630587,824.7740987233489 L 856.0012962630587,824.7740987233489 M 852.0012962630587,824.7740987233489 L 842.0012962630587,824.7740987233489 M 838.0012962630587,824.7740987233489 L 828.0012962630587,824.7740987233489 M 824.0012962630587,824.7740987233489 L 814.0012962630587,824.7740987233489 M 810.0012962630587,824.7740987233489 L 800.0012962630587,824.7740987233489 M 796.0012962630587,824.7740987233489 L 786.0012962630587,824.7740987233489 M 782.0012962630587,824.7740987233489 L 772.0012962630587,824.7740987233489 M 768.0012962630587,824.7740987233489 L 758.0012962630587,824.7740987233489 M 754.0012962630587,824.7740987233489 L 744.0012962630587,824.7740987233489 M 740.0012962630587,824.7740987233489 L 730.0012962630587,824.7740987233489 M 726.0012962630587,824.7740987233489 L 716.0012962630587,824.7740987233489 M 712.0012962630587,824.7740987233489 L 702.0012962630587,824.7740987233489 M 698.0012962630587,824.7740987233489 L 688.0012962630587,824.7740987233489 M 684.0012962630587,824.7740987233489 L 674.0012962630587,824.7740987233489 M 670.0012962630587,824.7740987233489 L 660.0012962630587,824.7740987233489 M 656.0012962630587,824.7740987233489 L 646.0012962630587,824.7740987233489 M 642.0012962630587,824.7740987233489 L 632.0012962630587,824.7740987233489 M 628.0012962630587,824.7740987233489 L 618.0012962630587,824.7740987233489 M 614.0012962630587,824.7740987233489 L 604.0012962630587,824.7740987233489 M 600.0012962630587,824.7740987233489 L 590.0012962630587,824.7740987233489 M 586.0012962630587,824.7740987233489 L 576.0012962630587,824.7740987233489 M 572.0012962630587,824.7740987233489 L 562.0012962630587,824.7740987233489 M 558.0012962630587,824.7740987233489 L 548.0012962630587,824.7740987233489 M 544.0012962630587,824.7740987233489 L 534.0012962630587,824.7740987233489 M 530.0012962630587,824.7740987233489 L 520.0012962630587,824.7740987233489 M 516.0012962630587,824.7740987233489 L 506.00129626305875,824.7740987233489 M 502.00129626305875,824.7740987233489 L 492.00129626305875,824.7740987233489 M 488.00129626305875,824.7740987233489 L 478.00129626305875,824.7740987233489 M 474.00129626305875,824.7740987233489 L 464.00129626305875,824.7740987233489 M 460.00129626305875,824.7740987233489 L 450.00129626305875,824.7740987233489 M 446.00129626305875,824.7740987233489 L 436.00129626305875,824.7740987233489 M 432.00129626305875,824.7740987233489 L 422.00129626305875,824.7740987233489 M 418.00129626305875,824.7740987233489 L 408.00129626305875,824.7740987233489 M 404.00129626305875,824.7740987233489 L 394.00129626305875,824.7740987233489 M 390.00129626305875,824.7740987233489 L 380.00129626305875,824.7740987233489 M 376.00129626305875,824.7740987233489 L 366.00129626305875,824.7740987233489 M 362.00129626305875,824.7740987233489 L 352.00129626305875,824.7740987233489 M 348.00129626305875,824.7740987233489 L 338.00129626305875,824.7740987233489 M 334.00129626305875,824.7740987233489 L 324.00129626305875,824.7740987233489 M 320.00129626305875,824.7740987233489 L 310.00129626305875,824.7740987233489 M 306.00129626305875,824.7740987233489 L 296.00129626305875,824.7740987233489 M 292.00129626305875,824.7740987233489 L 282.00129626305875,824.7740987233489 M 278.00129626305875,824.7740987233489 L 268.00129626305875,824.7740987233489 M 264.00129626305875,824.7740987233489 L 254.00129626305875,824.7740987233489 M 250.00129626305875,824.7740987233489 L 240.00129626305875,824.7740987233489 M 236.00129626305875,824.7740987233489 L 226.00129626305875,824.7740987233489 M 222.00129626305875,824.7740987233489 L 212.00129626305875,824.7740987233489 M 208.00129626305875,824.7740987233489 L 198.00129626305875,824.7740987233489 M 194.00129626305875,824.7740987233489 L 184.00129626305875,824.7740987233489 M 180.00129626305875,824.7740987233489 L 170.00129626305875,824.7740987233489 M 166.00129626305875,824.7740987233489 L 156.00129626305875,824.7740987233489 M 152.00129626305875,824.7740987233489 L 142.00129626305875,824.7740987233489 M 138.00129626305875,824.7740987233489 L 128.00129626305875,824.7740987233489 M 124.00129626305875,824.7740987233489 L 114.00129626305875,824.7740987233489 M 110.00129626305875,824.7740987233489 L 100.00129626305875,824.7740987233489 M 96.00129626305875,824.7740987233489 L 86.00129626305875,824.7740987233489 M 82.00129626305875,824.7740987233489 L 72.00129626305875,824.7740987233489 M 68.00129626305875,824.7740987233489 L 58.00129626305875,824.7740987233489 M 54.00129626305875,824.7740987233489 L 44.00129626305875,824.7740987233489 M 40.00129626305875,824.7740987233489 L 30.001296263058748,824.7740987233489 M 26.001296263058748,824.7740987233489 L 16.001296263058748,824.7740987233489 M 12.001296263058748,824.7740987233489 L 5.001000000003614,824.7740987233489 L 3.2753506441779443,824.3076485086242 L 2.300954009947051,823.58667994873 M 1.6615339059363525,823.1135648174161 M 0.46745021472839166,821.4997480791744 M 0.15509719100464003,820.3441868270543 L 0.001000000003614887,819.7740987233489 L 0.0010115485450823223,810.3646462576501 M 0.0010164578813097068,806.364646257653 L 0.0010287312218781677,796.3646462576605 M 0.0010336405581055522,792.3646462576635 L 0.0010459138986740131,782.364646257671 M 0.0010508232349013976,778.3646462576739 L 0.0010630965754698585,768.3646462576814 M 0.001068005911697243,764.3646462576844 L 0.001080279252265704,754.3646462576919 M 0.0010851885884930884,750.3646462576949 L 0.0010974619290615494,740.3646462577024 M 0.0011023712652889338,736.3646462577053 L 0.0011146446058573948,726.3646462577128 M 0.0011195539420847792,722.3646462577158 L 0.0011318272826532402,712.3646462577233 M 0.0011367366188806247,708.3646462577262 L 0.0011490099594490856,698.3646462577337 M 0.00115391929567647,694.3646462577367 L 0.001166192636244931,684.3646462577442 M 0.0011711019724723155,680.3646462577472 L 0.0011833753130407764,670.3646462577547 M 0.0011882846492681609,666.3646462577576 L 0.0012005579898366218,656.3646462577651 M 0.0012054673260640063,652.3646462577681 L 0.0012177406666324673,642.3646462577756 M 0.0012226500028598517,638.3646462577785 L 0.0012349233434283127,628.364646257786 M 0.0012398326796556971,624.364646257789 L 0.001252106020224158,614.3646462577965 M 0.0012570153564515425,610.3646462577994 L 0.0012692886970200035,600.364646257807 M 0.001274198033247388,596.3646462578099 L 0.001286471373815849,586.3646462578174 M 0.0012913807100432334,582.3646462578204 L 0.0013036540506116943,572.3646462578279 M 0.0013085633868390788,568.3646462578308 L 0.0013208367274075397,558.3646462578383 M 0.0013257460636349242,554.3646462578413 L 0.0013380194042033851,544.3646462578488 M 0.0013429287404307696,540.3646462578517 L 0.0013552020809992306,530.3646462578592 M 0.001360111417226615,526.3646462578622 L 0.001372384757795076,516.3646462578697 M 0.0013772940940224604,512.3646462578727 L 0.0013895674345909214,502.36464625788017 M 0.0013944767708183058,498.3646462578832 L 0.0014067501113867668,488.36464625789074 M 0.0014116594476141513,484.36464625789375 L 0.0014239327881826122,474.3646462579013 M 0.0014288421244099967,470.3646462579043 L 0.0014411154649784576,460.3646462579119 M 0.001446024801205842,456.3646462579149 L 0.001458298141774303,446.36464625792246 M 0.0014632074780016875,442.3646462579255 L 0.0014754808185701484,432.36464625793303 M 0.001480390154797533,428.36464625793604 L 0.0014926634953659939,418.3646462579436 M 0.0014975728315933783,414.3646462579466 L 0.0015098461721618393,404.3646462579542 M 0.0015147555083892237,400.3646462579572 L 0.0015270288489576847,390.36464625796475 M 0.0015319381851850692,386.36464625796776 L 0.00154421152575353,376.3646462579753 M 0.0015491208619809146,372.36464625797834 L 0.0015613942025493755,362.3646462579859 M 0.00156630353877676,358.3646462579889 L 0.001578576879345221,348.36464625799647 M 0.0015834862155726054,344.3646462579995 L 0.0015957595561410663,334.36464625800704 M 0.0016006688923684508,330.36464625801005 L 0.0016129422329369118,320.3646462580176 M 0.0016178515691642962,316.3646462580206 L 0.0016301249097327572,306.3646462580282 M 0.0016350342459601416,302.3646462580312 L 0.0016473075865286026,292.36464625803876 M 0.001652216922755987,288.3646462580418 L 0.001664490263324448,278.36464625804933 M 0.0016693995995518325,274.36464625805235 L 0.0016816729401202934,264.3646462580599 M 0.0016865822763476779,260.3646462580629 L 0.0016988556169161388,250.36464625807045 M 0.0017037649531435233,246.36464625807346 L 0.0017160382937119842,236.364646258081 M 0.0017209476299393687,232.364646258084 L 0.0017332209705078296,222.36464625809154 M 0.001738130306735214,218.36464625809455 L 0.001750403647303675,208.36464625810208 M 0.0017553129835310595,204.3646462581051 L 0.0017675863240995205,194.36464625811263 M 0.001772495660326905,190.36464625811564 L 0.0017847690008953659,180.36464625812317 M 0.0017896783371227503,176.36464625812619 L 0.0018019516776912113,166.36464625813372 M 0.0018068610139185958,162.36464625813673 L 0.0018191343544870567,152.36464625814426 M 0.0018240436907144412,148.36464625814727 L 0.0018363170312829021,138.3646462581548 M 0.0018412263675102866,134.36464625815782 L 0.0018534997080787475,124.36464625816535 M 0.001858409044306132,120.36464625816836 L 0.001870682384874593,110.3646462581759 M 0.0018755917211019774,106.36464625817891 L 0.0018878650616704384,96.36464625818644 M 0.0018927743978978228,92.36464625818945 L 0.0019050477384662838,82.36464625819698 M 0.0019099570746936682,78.3646462582 L 0.0019222304152621292,68.36464625820753 M 0.0019271397514895137,64.36464625821054 L 0.0019394130920579746,54.36464625821807 M 0.001944322428285359,50.364646258221086 L 0.0019565957688538202,40.36464625822862 M 0.0019615051050812047,36.36464625823163 L 0.001973778445649666,26.364646258239162 M 0.0019786877818770503,22.364646258242175 L 0.0019909611224455115,12.364646258249707 M 0.001995870458672896,8.36464625825272 L 0.0020000000036148927,4.999999999999919 L 0.46845021472839166,3.274350644174249 L 1.6625339059363529,1.6605339059326572 L 3.2763506441779446,0.46645021472469606 L 4.080184751933677,0.24917050439422783 M 5.002000000003615,-8.071321389024888e-14\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g></g><g transform=\"matrix(1, 0, 0, 1, 1411, 2134.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 225,0 L 225,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 225,0 L 225,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 211, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87111)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.37548828125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invokeDM-CanadianRetail</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1017.039357500846, 2827.2751749915406)\"><rect x=\"0\" y=\"0\" width=\"165.92128499830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 159.92128499830793,0 C 162.15986124915395,0 164.92128499830793,2.761423749153968 164.92128499830793,5 L 164.92128499830793,34.743159998307945 C 164.92128499830793,36.981736249153975 162.15986124915395,39.743159998307945 159.92128499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 159.92128499830793,0 C 162.15986124915395,0 164.92128499830793,2.761423749153968 164.92128499830793,5 L 164.92128499830793,34.743159998307945 C 164.92128499830793,36.981736249153975 162.15986124915395,39.743159998307945 159.92128499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Egress Job Steps</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 944, 2638.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87112)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 16.396484375, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 24.375,22.75 C 25.268176470588234,22.75 26,22.018176470588234 26,21.125 L 26,1.625 C 26,0.7318235294117652 25.268176470588234,0 24.375,0 L 1.625,0 C 0.7318235294117648,0 0,0.7318235294117652 0,1.625 L 0,21.125 C 0,22.018176470588234 0.7318235294117647,22.75 1.625,22.75 z M 22.75,3.25 L 22.75,19.5 L 19.5,19.5 L 19.5,3.25 L 22.75,3.25 z M 17.875,3.25 L 17.875,19.5 L 14.624999999999998,19.5 L 14.624999999999998,3.25 L 17.875,3.25 z M 13,3.25 L 13,19.5 L 9.75,19.5 L 9.75,3.25 L 13,3.25 z M 8.125,6.5 L 3.25,10.562882352941175 L 3.25,2.4371176470588214 L 8.125,6.4999999999999964 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">egressERROR-5292</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">topic-outbound</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 938, 2470.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 211,0 L 211,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 211,0 L 211,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 197, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87113)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.138916015625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">createOtherFields-5292</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 656.785451250846, 322.37157999915416)\"><rect x=\"0\" y=\"0\" width=\"166.42909749830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 160.42909749830793,0 C 162.66767374915395,0 165.42909749830793,2.761423749153968 165.42909749830793,5 L 165.42909749830793,34.743159998307945 C 165.42909749830793,36.981736249153975 162.66767374915395,39.743159998307945 160.42909749830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 160.42909749830793,0 C 162.66767374915395,0 165.42909749830793,2.761423749153968 165.42909749830793,5 L 165.42909749830793,34.743159998307945 C 165.42909749830793,36.981736249153975 162.66767374915395,39.743159998307945 160.42909749830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Call Type Routing</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 513, 1966.0137512423862)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 261,0 L 261,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 261,0 L 261,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 247, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87114)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.138671875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invokeDM-CanadianCommercial</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 922.5, 2302.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 242,0 L 242,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 242,0 L 242,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 228, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87115)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.245849609375, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">E0003-REST-Invocation-Error</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 709.222951250846, 1204.004583747462)\"><rect x=\"0\" y=\"0\" width=\"221.55409749830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 215.55409749830793,0 C 217.79267374915395,0 220.55409749830793,2.761423749153968 220.55409749830793,5 L 220.55409749830793,34.743159998307945 C 220.55409749830793,36.981736249153975 217.79267374915395,39.743159998307945 215.55409749830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 215.55409749830793,0 C 217.79267374915395,0 220.55409749830793,2.761423749153968 220.55409749830793,5 L 220.55409749830793,34.743159998307945 C 220.55409749830793,36.981736249153975 217.79267374915395,39.743159998307945 215.55409749830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">US Data Error Formatters</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 864, 1966.0137512423862)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87116)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 18.1357421875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invokeDM-UsRetail</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1132.5, 1966.0137512423862)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 222,0 L 222,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 222,0 L 222,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 208, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87117)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.39892578125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invokeDM-UsCommercial</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1224, 2638.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87118)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.9384765625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">esERRORS</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1840, 140.7431599983081)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87119)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 33.978515625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 4.875,3.25 Q 4.875,3.927083333333333 4.401041666666666,4.401041666666666 Q 3.927083333333333,4.875 3.25,4.875 Q 2.5729166666666665,4.875 2.098958333333333,4.401041666666666 Q 1.625,3.927083333333333 1.625,3.25 Q 1.625,2.5729166666666665 2.098958333333333,2.098958333333333 Q 2.5729166666666665,1.625 3.25,1.625 Q 3.927083333333333,1.625 4.401041666666666,2.098958333333333 Q 4.875,2.5729166666666665 4.875,3.25 z M 4.875,22.75 Q 4.875,23.427083333333332 4.401041666666666,23.901041666666664 Q 3.927083333333333,24.375 3.25,24.375 Q 2.5729166666666665,24.375 2.098958333333333,23.901041666666664 Q 1.625,23.427083333333332 1.625,22.75 Q 1.625,22.072916666666664 2.098958333333333,21.598958333333332 Q 2.5729166666666665,21.125 3.25,21.125 Q 3.927083333333333,21.125 4.401041666666666,21.598958333333332 Q 4.875,22.072916666666664 4.875,22.75 z M 15.708333333333332,20.583333333333332 Q 15.708333333333332,21.260416666666664 15.234374999999998,21.734375 Q 14.760416666666666,22.208333333333332 14.083333333333332,22.208333333333332 Q 13.406249999999998,22.208333333333332 12.932291666666666,21.734375 Q 12.458333333333332,21.260416666666664 12.458333333333332,20.583333333333332 Q 12.458333333333332,19.90625 12.932291666666666,19.432291666666664 Q 13.406249999999998,18.958333333333332 14.083333333333332,18.958333333333332 Q 14.760416666666666,18.958333333333332 15.234374999999998,19.432291666666664 Q 15.708333333333332,19.90625 15.708333333333332,20.583333333333332 z M 17.333333333333332,20.583333333333332 Q 17.333333333333332,19.703125 16.893229166666664,18.949869791666664 Q 16.453125,18.196614583333332 15.708333333333332,17.7734375 Q 15.674479166666666,12.915364583333332 11.8828125,10.765625 Q 10.748697916666666,10.122395833333332 8.446614583333332,9.39453125 Q 6.279947916666666,8.717447916666666 5.577473958333333,8.192708333333332 Q 4.875,7.667968749999999 4.875,6.5 L 4.875,6.059895833333333 Q 5.619791666666666,5.63671875 6.059895833333333,4.883463541666666 Q 6.5,4.130208333333333 6.5,3.25 Q 6.5,1.8958333333333333 5.552083333333333,0.9479166666666666 Q 4.604166666666666,0 3.25,0 Q 1.8958333333333333,0 0.9479166666666666,0.9479166666666666 Q 0,1.8958333333333333 0,3.25 Q 0,4.130208333333333 0.44010416666666663,4.883463541666666 Q 0.8802083333333333,5.63671875 1.625,6.059895833333333 L 1.625,19.940104166666664 Q 0.8802083333333333,20.36328125 0.44010416666666663,21.116536458333332 Q 0,21.869791666666664 0,22.75 Q 0,24.104166666666664 0.9479166666666666,25.052083333333332 Q 1.8958333333333333,26 3.25,26 Q 4.604166666666666,26 5.552083333333333,25.052083333333332 Q 6.5,24.104166666666664 6.5,22.75 Q 6.5,21.869791666666664 6.059895833333333,21.116536458333332 Q 5.619791666666666,20.36328125 4.875,19.940104166666664 L 4.875,11.52734375 Q 5.7890625,11.967447916666666 7.481770833333333,12.4921875 Q 8.412760416666666,12.779947916666666 8.962890625,12.991536458333332 Q 9.513020833333332,13.203124999999998 10.15625,13.516276041666666 Q 10.799479166666666,13.829427083333332 11.154947916666666,14.184895833333332 Q 11.510416666666666,14.540364583333332 11.840494791666666,15.048177083333332 Q 12.170572916666666,15.555989583333332 12.314453125,16.224609375 Q 12.458333333333332,16.893229166666664 12.458333333333332,17.7734375 Q 11.713541666666666,18.196614583333332 11.2734375,18.949869791666664 Q 10.833333333333332,19.703125 10.833333333333332,20.583333333333332 Q 10.833333333333332,21.9375 11.78125,22.885416666666664 Q 12.729166666666666,23.833333333333332 14.083333333333332,23.833333333333332 Q 15.437499999999998,23.833333333333332 16.385416666666664,22.885416666666664 Q 17.333333333333332,21.9375 17.333333333333332,20.583333333333332 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">split</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">stream-splitter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 2000, 308.7431599983081)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87120)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 21.014404296875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">logStartFormatter</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 476.7431599983081)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87121)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 19.167236328125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">format-request-log</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1400, 476.7431599983081)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 279,0 L 279,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 279,0 L 279,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 265, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87122)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 78.451416015625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.666666666666666,17.333333333333332 Q 8.666666666666666,16.550925925925924 8.094907407407407,15.979166666666666 Q 7.523148148148148,15.407407407407407 6.7407407407407405,15.407407407407407 Q 5.958333333333333,15.407407407407407 5.3865740740740735,15.979166666666666 Q 4.814814814814815,16.550925925925924 4.814814814814815,17.333333333333332 Q 4.814814814814815,18.11574074074074 5.3865740740740735,18.6875 Q 5.958333333333333,19.25925925925926 6.7407407407407405,19.25925925925926 Q 7.523148148148148,19.25925925925926 8.094907407407407,18.6875 Q 8.666666666666666,18.11574074074074 8.666666666666666,17.333333333333332 z M 2.888888888888889,9.62962962962963 L 8.666666666666666,9.62962962962963 L 8.666666666666666,5.777777777777778 L 6.289351851851851,5.777777777777778 Q 6.09375,5.777777777777778 5.958333333333333,5.913194444444444 L 3.0243055555555554,8.847222222222221 Q 2.888888888888889,8.982638888888888 2.888888888888889,9.17824074074074 L 2.888888888888889,9.62962962962963 z M 22.148148148148145,17.333333333333332 Q 22.148148148148145,16.550925925925924 21.57638888888889,15.979166666666666 Q 21.00462962962963,15.407407407407407 20.22222222222222,15.407407407407407 Q 19.439814814814813,15.407407407407407 18.868055555555554,15.979166666666666 Q 18.296296296296294,16.550925925925924 18.296296296296294,17.333333333333332 Q 18.296296296296294,18.11574074074074 18.868055555555554,18.6875 Q 19.439814814814813,19.25925925925926 20.22222222222222,19.25925925925926 Q 21.00462962962963,19.25925925925926 21.57638888888889,18.6875 Q 22.148148148148145,18.11574074074074 22.148148148148145,17.333333333333332 z M 26,0.9629629629629629 L 26,16.37037037037037 Q 26,16.596064814814813 25.939814814814813,16.76909722222222 Q 25.87962962962963,16.94212962962963 25.736689814814813,17.047453703703702 Q 25.59375,17.15277777777778 25.488425925925924,17.22048611111111 Q 25.38310185185185,17.288194444444443 25.134837962962962,17.31076388888889 Q 24.886574074074073,17.333333333333332 24.796296296296294,17.34085648148148 Q 24.706018518518515,17.34837962962963 24.41261574074074,17.34085648148148 Q 24.119212962962962,17.333333333333332 24.074074074074073,17.333333333333332 Q 24.074074074074073,18.92824074074074 22.94560185185185,20.056712962962962 Q 21.81712962962963,21.185185185185183 20.22222222222222,21.185185185185183 Q 18.627314814814813,21.185185185185183 17.49884259259259,20.056712962962962 Q 16.37037037037037,18.92824074074074 16.37037037037037,17.333333333333332 L 10.592592592592592,17.333333333333332 Q 10.592592592592592,18.92824074074074 9.46412037037037,20.056712962962962 Q 8.335648148148147,21.185185185185183 6.7407407407407405,21.185185185185183 Q 5.145833333333333,21.185185185185183 4.017361111111111,20.056712962962962 Q 2.888888888888889,18.92824074074074 2.888888888888889,17.333333333333332 L 1.9259259259259258,17.333333333333332 Q 1.880787037037037,17.333333333333332 1.587384259259259,17.34085648148148 Q 1.2939814814814814,17.34837962962963 1.2037037037037037,17.34085648148148 Q 1.1134259259259258,17.333333333333332 0.865162037037037,17.31076388888889 Q 0.6168981481481481,17.288194444444443 0.5115740740740741,17.22048611111111 Q 0.40625,17.15277777777778 0.2633101851851852,17.047453703703702 Q 0.12037037037037036,16.94212962962963 0.06018518518518518,16.76909722222222 Q 0,16.596064814814813 0,16.37037037037037 Q 0,15.979166666666666 0.2858796296296296,15.693287037037036 Q 0.5717592592592592,15.407407407407407 0.9629629629629629,15.407407407407407 L 0.9629629629629629,10.592592592592592 Q 0.9629629629629629,10.472222222222221 0.9554398148148148,10.065972222222221 Q 0.9479166666666666,9.659722222222221 0.9554398148148148,9.494212962962962 Q 0.9629629629629629,9.328703703703702 0.9930555555555555,8.97511574074074 Q 1.0231481481481481,8.621527777777777 1.0908564814814814,8.418402777777777 Q 1.1585648148148147,8.215277777777777 1.3015046296296295,7.9594907407407405 Q 1.4444444444444444,7.703703703703703 1.6400462962962963,7.508101851851851 L 4.619212962962963,4.528935185185185 Q 4.905092592592593,4.243055555555555 5.379050925925926,4.047453703703703 Q 5.853009259259259,3.8518518518518516 6.259259259259259,3.8518518518518516 L 8.666666666666666,3.8518518518518516 L 8.666666666666666,0.9629629629629629 Q 8.666666666666666,0.5717592592592592 8.952546296296296,0.2858796296296296 Q 9.238425925925926,0 9.62962962962963,0 L 25.037037037037035,0 Q 25.42824074074074,0 25.71412037037037,0.2858796296296296 Q 26,0.5717592592592592 26,0.9629629629629629 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">csc-Routing</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">routing</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1840, 2281.6421712432325)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87123)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.9384765625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">ads-routing-err</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1098.738576250846, 644.7431599983081)\"><rect x=\"0\" y=\"0\" width=\"882.5228474983079\" height=\"1358.2660074966159\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 7.261423749153968, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3\" fill=\"black\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path><path d=\"M 0,3 L 6,3\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">CSC Contextual Profiles</text></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 40.743159998307945)\"><path d=\"M 5,0 L 15,0 M 19,0 L 29,0 M 33,0 L 43,0 M 47,0 L 57,0 M 61,0 L 71,0 M 75,0 L 85,0 M 89,0 L 99,0 M 103,0 L 113,0 M 117,0 L 127,0 M 131,0 L 141,0 M 145,0 L 155,0 M 159,0 L 169,0 M 173,0 L 183,0 M 187,0 L 197,0 M 201,0 L 211,0 M 215,0 L 225,0 M 229,0 L 239,0 M 243,0 L 253,0 M 257,0 L 267,0 M 271,0 L 281,0 M 285,0 L 295,0 M 299,0 L 309,0 M 313,0 L 323,0 M 327,0 L 337,0 M 341,0 L 351,0 M 355,0 L 365,0 M 369,0 L 379,0 M 383,0 L 393,0 M 397,0 L 407,0 M 411,0 L 421,0 M 425,0 L 435,0 M 439,0 L 449,0 M 453,0 L 463,0 M 467,0 L 477,0 M 481,0 L 491,0 M 495,0 L 505,0 M 509,0 L 519,0 M 523,0 L 533,0 M 537,0 L 547,0 M 551,0 L 561,0 M 565,0 L 575,0 M 579,0 L 589,0 M 593,0 L 603,0 M 607,0 L 617,0 M 621,0 L 631,0 M 635,0 L 645,0 M 649,0 L 659,0 M 663,0 L 673,0 M 677,0 L 687,0 M 691,0 L 701,0 M 705,0 L 715,0 M 719,0 L 729,0 M 733,0 L 743,0 M 747,0 L 757,0 M 761,0 L 771,0 M 775,0 L 785,0 M 789,0 L 799,0 M 803,0 L 813,0 M 817,0 L 827,0 M 831,0 L 841,0 M 845,0 L 855,0 M 859,0 L 869,0 M 873,0 L 876.5228474983079,0 L 878.2484968541335,0.46645021472477677 L 879.8623135923751,1.6605339059327378 L 881.0563972835832,3.27435064417433 L 881.2323960380392,3.925464370067429 M 881.5228474983079,5 M 881.5228497079142,7.886901230452255 L 881.522857361818,17.886901230449325 M 881.5228604233794,21.886901230448153 L 881.5228680772831,31.886901230445226 M 881.5228711388445,35.88690123044405 L 881.5228787927482,45.886901230441126 M 881.5228818543096,49.88690123043995 L 881.5228895082133,59.886901230437026 M 881.5228925697747,63.88690123043585 L 881.5229002236784,73.88690123043293 M 881.5229032852399,77.88690123043176 L 881.5229109391436,87.88690123042883 M 881.522914000705,91.88690123042767 L 881.5229216546087,101.88690123042474 M 881.5229247161701,105.88690123042358 L 881.5229323700738,115.88690123042065 M 881.5229354316352,119.88690123041948 L 881.5229430855389,129.88690123041656 M 881.5229461471004,133.8869012304154 L 881.5229538010041,143.88690123041246 M 881.5229568625655,147.8869012304113 L 881.5229645164692,157.88690123040837 M 881.5229675780306,161.8869012304072 L 881.5229752319343,171.88690123040428 M 881.5229782934957,175.8869012304031 L 881.5229859473994,185.88690123040018 M 881.5229890089608,189.88690123039902 L 881.5229966628646,199.8869012303961 M 881.522999724426,203.88690123039493 L 881.5230073783297,213.886901230392 M 881.5230104398911,217.88690123039083 L 881.5230180937948,227.8869012303879 M 881.5230211553562,231.88690123038674 L 881.5230288092599,241.8869012303838 M 881.5230318708213,245.88690123038265 L 881.523039524725,255.88690123037972 M 881.5230425862865,259.88690123037856 L 881.5230502401902,269.8869012303756 M 881.5230533017516,273.8869012303744 L 881.5230609556553,283.88690123037145 M 881.5230640172167,287.88690123037026 L 881.5230716711204,297.8869012303673 M 881.5230747326818,301.8869012303661 L 881.5230823865855,311.88690123036315 M 881.523085448147,315.88690123036196 L 881.5230931020507,325.886901230359 M 881.5230961636121,329.8869012303578 L 881.5231038175158,339.88690123035485 M 881.5231068790772,343.88690123035366 L 881.5231145329809,353.8869012303507 M 881.5231175945423,357.8869012303495 L 881.523125248446,367.88690123034655 M 881.5231283100075,371.88690123034536 L 881.5231359639112,381.8869012303424 M 881.5231390254726,385.8869012303412 L 881.5231466793763,395.88690123033825 M 881.5231497409377,399.88690123033706 L 881.5231573948414,409.8869012303341 M 881.5231604564028,413.8869012303329 L 881.5231681103065,423.88690123032995 M 881.523171171868,427.88690123032876 L 881.5231788257717,437.8869012303258 M 881.5231818873331,441.8869012303246 L 881.5231895412368,451.88690123032166 M 881.5231926027982,455.88690123032046 L 881.5232002567019,465.8869012303175 M 881.5232033182633,469.8869012303163 L 881.523210972167,479.88690123031336 M 881.5232140337284,483.88690123031216 L 881.5232216876321,493.8869012303092 M 881.5232247491936,497.886901230308 L 881.5232324030973,507.88690123030506 M 881.5232354646587,511.88690123030386 L 881.5232431185624,521.886901230301 M 881.5232461801238,525.8869012302998 L 881.5232538340275,535.8869012302969 M 881.5232568955889,539.8869012302957 L 881.5232645494926,549.8869012302928 M 881.523267611054,553.8869012302916 L 881.5232752649578,563.8869012302887 M 881.5232783265192,567.8869012302875 L 881.5232859804229,577.8869012302846 M 881.5232890419843,581.8869012302835 L 881.523296695888,591.8869012302805 M 881.5232997574494,595.8869012302794 L 881.5233074113531,605.8869012302764 M 881.5233104729145,609.8869012302753 L 881.5233181268183,619.8869012302723 M 881.5233211883797,623.8869012302712 L 881.5233288422834,633.8869012302682 M 881.5233319038448,637.8869012302671 L 881.5233395577485,647.8869012302641 M 881.5233426193099,651.886901230263 L 881.5233502732136,661.88690123026 M 881.523353334775,665.8869012302589 L 881.5233609886787,675.886901230256 M 881.5233640502402,679.8869012302548 L 881.5233717041439,689.8869012302519 M 881.5233747657053,693.8869012302507 L 881.523382419609,703.8869012302478 M 881.5233854811704,707.8869012302466 L 881.5233931350741,717.8869012302437 M 881.5233961966355,721.8869012302425 L 881.5234038505392,731.8869012302396 M 881.5234069121007,735.8869012302384 L 881.5234145660044,745.8869012302355 M 881.5234176275658,749.8869012302343 L 881.5234252814695,759.8869012302314 M 881.5234283430309,763.8869012302303 L 881.5234359969346,773.8869012302273 M 881.523439058496,777.8869012302262 L 881.5234467123997,787.8869012302232 M 881.5234497739611,791.8869012302221 L 881.5234574278649,801.8869012302191 M 881.5234604894263,805.886901230218 L 881.52346814333,815.886901230215 M 881.5234712048914,819.8869012302139 L 881.5234788587951,829.8869012302109 M 881.5234819203565,833.8869012302098 L 881.5234895742602,843.8869012302068 M 881.5234926358216,847.8869012302057 L 881.5235002897253,857.8869012302027 M 881.5235033512868,861.8869012302016 L 881.5235110051905,871.8869012301986 M 881.5235140667519,875.8869012301975 L 881.5235217206556,885.8869012301946 M 881.523524782217,889.8869012301934 L 881.5235324361207,899.8869012301905 M 881.5235354976821,903.8869012301893 L 881.5235431515858,913.8869012301864 M 881.5235462131473,917.8869012301852 L 881.523553867051,927.8869012301823 M 881.5235569286124,931.8869012301811 L 881.5235645825161,941.8869012301782 M 881.5235676440775,945.886901230177 L 881.5235752979812,955.8869012301741 M 881.5235783595426,959.886901230173 L 881.5235860134463,969.88690123017 M 881.5235890750077,973.8869012301689 L 881.5235967289115,983.8869012301659 M 881.5235997904729,987.8869012301648 L 881.5236074443766,997.8869012301618 M 881.523610505938,1001.8869012301607 L 881.5236181598417,1011.8869012301577 M 881.5236212214031,1015.8869012301566 L 881.5236288753068,1025.8869012301536 M 881.5236319368682,1029.8869012301525 L 881.523639590772,1039.8869012301495 M 881.5236426523334,1043.8869012301484 L 881.5236503062371,1053.8869012301454 M 881.5236533677985,1057.8869012301443 L 881.5236610217022,1067.8869012301413 M 881.5236640832636,1071.8869012301402 L 881.5236717371673,1081.8869012301373 M 881.5236747987287,1085.8869012301361 L 881.5236824526324,1095.8869012301332 M 881.5236855141939,1099.886901230132 L 881.5236931680976,1109.886901230129 M 881.523696229659,1113.886901230128 L 881.5237038835627,1123.886901230125 M 881.5237069451241,1127.8869012301238 L 881.5237145990278,1137.8869012301209 M 881.5237176605892,1141.8869012301197 L 881.5237253144929,1151.8869012301168 M 881.5237283760544,1155.8869012301157 L 881.5237360299581,1165.8869012301127 M 881.5237390915195,1169.8869012301116 L 881.5237467454232,1179.8869012301086 M 881.5237498069846,1183.8869012301075 L 881.5237574608883,1193.8869012301045 M 881.5237605224497,1197.8869012301034 L 881.5237681763534,1207.8869012301004 M 881.5237712379148,1211.8869012300993 L 881.5237788918186,1221.8869012300963 M 881.52378195338,1225.8869012300952 L 881.5237896072837,1235.8869012300922 M 881.5237926688451,1239.886901230091 L 881.5238003227488,1249.8869012300881 M 881.5238033843102,1253.886901230087 L 881.5238110382139,1263.886901230084 M 881.5238140997753,1267.886901230083 L 881.523821753679,1277.88690123008 M 881.5238248152405,1281.8869012300788 L 881.5238324691442,1291.8869012300759 M 881.5238355307056,1295.8869012300747 L 881.5238431846093,1305.8869012300718 M 881.5238462461707,1309.8869012300706 L 881.5238474983082,1311.5228474983078 L 881.0573972835836,1313.2484968541335 L 879.8633135923754,1314.8623135923751 L 878.2494968541338,1316.056397283583 L 876.5238474983082,1316.5228474983078 L 875.7500450377848,1316.5228474983078 M 871.7500450377848,1316.5228474983078 L 861.7500450377848,1316.5228474983078 M 857.7500450377848,1316.5228474983078 L 847.7500450377848,1316.5228474983078 M 843.7500450377848,1316.5228474983078 L 833.7500450377848,1316.5228474983078 M 829.7500450377848,1316.5228474983078 L 819.7500450377848,1316.5228474983078 M 815.7500450377848,1316.5228474983078 L 805.7500450377848,1316.5228474983078 M 801.7500450377848,1316.5228474983078 L 791.7500450377848,1316.5228474983078 M 787.7500450377848,1316.5228474983078 L 777.7500450377848,1316.5228474983078 M 773.7500450377848,1316.5228474983078 L 763.7500450377848,1316.5228474983078 M 759.7500450377848,1316.5228474983078 L 749.7500450377848,1316.5228474983078 M 745.7500450377848,1316.5228474983078 L 735.7500450377848,1316.5228474983078 M 731.7500450377848,1316.5228474983078 L 721.7500450377848,1316.5228474983078 M 717.7500450377848,1316.5228474983078 L 707.7500450377848,1316.5228474983078 M 703.7500450377848,1316.5228474983078 L 693.7500450377848,1316.5228474983078 M 689.7500450377848,1316.5228474983078 L 679.7500450377848,1316.5228474983078 M 675.7500450377848,1316.5228474983078 L 665.7500450377848,1316.5228474983078 M 661.7500450377848,1316.5228474983078 L 651.7500450377848,1316.5228474983078 M 647.7500450377848,1316.5228474983078 L 637.7500450377848,1316.5228474983078 M 633.7500450377848,1316.5228474983078 L 623.7500450377848,1316.5228474983078 M 619.7500450377848,1316.5228474983078 L 609.7500450377848,1316.5228474983078 M 605.7500450377848,1316.5228474983078 L 595.7500450377848,1316.5228474983078 M 591.7500450377848,1316.5228474983078 L 581.7500450377848,1316.5228474983078 M 577.7500450377848,1316.5228474983078 L 567.7500450377848,1316.5228474983078 M 563.7500450377848,1316.5228474983078 L 553.7500450377848,1316.5228474983078 M 549.7500450377848,1316.5228474983078 L 539.7500450377848,1316.5228474983078 M 535.7500450377848,1316.5228474983078 L 525.7500450377848,1316.5228474983078 M 521.7500450377848,1316.5228474983078 L 511.75004503778484,1316.5228474983078 M 507.75004503778484,1316.5228474983078 L 497.75004503778484,1316.5228474983078 M 493.75004503778484,1316.5228474983078 L 483.75004503778484,1316.5228474983078 M 479.75004503778484,1316.5228474983078 L 469.75004503778484,1316.5228474983078 M 465.75004503778484,1316.5228474983078 L 455.75004503778484,1316.5228474983078 M 451.75004503778484,1316.5228474983078 L 441.75004503778484,1316.5228474983078 M 437.75004503778484,1316.5228474983078 L 427.75004503778484,1316.5228474983078 M 423.75004503778484,1316.5228474983078 L 413.75004503778484,1316.5228474983078 M 409.75004503778484,1316.5228474983078 L 399.75004503778484,1316.5228474983078 M 395.75004503778484,1316.5228474983078 L 385.75004503778484,1316.5228474983078 M 381.75004503778484,1316.5228474983078 L 371.75004503778484,1316.5228474983078 M 367.75004503778484,1316.5228474983078 L 357.75004503778484,1316.5228474983078 M 353.75004503778484,1316.5228474983078 L 343.75004503778484,1316.5228474983078 M 339.75004503778484,1316.5228474983078 L 329.75004503778484,1316.5228474983078 M 325.75004503778484,1316.5228474983078 L 315.75004503778484,1316.5228474983078 M 311.75004503778484,1316.5228474983078 L 301.75004503778484,1316.5228474983078 M 297.75004503778484,1316.5228474983078 L 287.75004503778484,1316.5228474983078 M 283.75004503778484,1316.5228474983078 L 273.75004503778484,1316.5228474983078 M 269.75004503778484,1316.5228474983078 L 259.75004503778484,1316.5228474983078 M 255.75004503778484,1316.5228474983078 L 245.75004503778484,1316.5228474983078 M 241.75004503778484,1316.5228474983078 L 231.75004503778484,1316.5228474983078 M 227.75004503778484,1316.5228474983078 L 217.75004503778484,1316.5228474983078 M 213.75004503778484,1316.5228474983078 L 203.75004503778484,1316.5228474983078 M 199.75004503778484,1316.5228474983078 L 189.75004503778484,1316.5228474983078 M 185.75004503778484,1316.5228474983078 L 175.75004503778484,1316.5228474983078 M 171.75004503778484,1316.5228474983078 L 161.75004503778484,1316.5228474983078 M 157.75004503778484,1316.5228474983078 L 147.75004503778484,1316.5228474983078 M 143.75004503778484,1316.5228474983078 L 133.75004503778484,1316.5228474983078 M 129.75004503778484,1316.5228474983078 L 119.75004503778484,1316.5228474983078 M 115.75004503778484,1316.5228474983078 L 105.75004503778484,1316.5228474983078 M 101.75004503778484,1316.5228474983078 L 91.75004503778484,1316.5228474983078 M 87.75004503778484,1316.5228474983078 L 77.75004503778484,1316.5228474983078 M 73.75004503778484,1316.5228474983078 L 63.750045037784844,1316.5228474983078 M 59.750045037784844,1316.5228474983078 L 49.750045037784844,1316.5228474983078 M 45.750045037784844,1316.5228474983078 L 35.750045037784844,1316.5228474983078 M 31.750045037784844,1316.5228474983078 L 21.750045037784844,1316.5228474983078 M 17.750045037784844,1316.5228474983078 L 7.750045037784844,1316.5228474983078 M 5.001000000000317,1316.5228474983078 M 3.793384184479625,1316.196423909093 L 3.2753506441746474,1316.056397283583 L 1.6615339059330556,1314.8623135923751 L 0.46745021472509474,1313.2484968541335 L 0.0010000000003179688,1311.5228474983078 L 0.0010028018676546057,1307.8621438073324 M 0.0010058634291172759,1303.8621438073335 L 0.0010135173327739512,1293.8621438073365 M 0.0010165788942366214,1289.8621438073376 L 0.0010242327978932967,1279.8621438073405 M 0.0010272943593559669,1275.8621438073417 L 0.0010349482630126422,1265.8621438073446 M 0.0010380098244753124,1261.8621438073458 L 0.0010456637281319877,1251.8621438073487 M 0.0010487252895946579,1247.8621438073499 L 0.0010563791932513332,1237.8621438073528 M 0.0010594407547140033,1233.862143807354 L 0.0010670946583706787,1223.862143807357 M 0.0010701562198333488,1219.862143807358 L 0.0010778101234900242,1209.862143807361 M 0.0010808716849526943,1205.8621438073621 L 0.0010885255886093697,1195.862143807365 M 0.0010915871500720398,1191.8621438073662 L 0.0010992410537287152,1181.8621438073692 M 0.0011023026151913853,1177.8621438073703 L 0.0011099565188480607,1167.8621438073733 M 0.0011130180803107308,1163.8621438073744 L 0.0011206719839674062,1153.8621438073774 M 0.0011237335454300763,1149.8621438073785 L 0.0011313874490867517,1139.8621438073815 M 0.0011344490105494218,1135.8621438073826 L 0.0011421029142060972,1125.8621438073856 M 0.0011451644756687673,1121.8621438073867 L 0.0011528183793254427,1111.8621438073897 M 0.0011558799407881128,1107.8621438073908 L 0.0011635338444447882,1097.8621438073937 M 0.0011665954059074583,1093.862143807395 L 0.0011742493095641337,1083.8621438073978 M 0.0011773108710268038,1079.862143807399 L 0.0011849647746834792,1069.862143807402 M 0.0011880263361461493,1065.862143807403 L 0.0011956802398028247,1055.862143807406 M 0.0011987418012654948,1051.8621438074072 L 0.0012063957049221702,1041.8621438074101 M 0.0012094572663848403,1037.8621438074113 L 0.0012171111700415157,1027.8621438074142 M 0.0012201727315041858,1023.8621438074154 L 0.0012278266351608612,1013.8621438074183 M 0.0012308881966235313,1009.8621438074194 L 0.0012385421002802067,999.8621438074224 M 0.0012416036617428768,995.8621438074235 L 0.0012492575653995522,985.8621438074265 M 0.0012523191268622223,981.8621438074276 L 0.0012599730305188977,971.8621438074306 M 0.0012630345919815678,967.8621438074317 L 0.0012706884956382432,957.8621438074347 M 0.0012737500571009133,953.8621438074358 L 0.0012814039607575887,943.8621438074388 M 0.0012844655222202588,939.8621438074399 L 0.0012921194258769342,929.8621438074429 M 0.0012951809873396043,925.862143807444 L 0.0013028348909962797,915.862143807447 M 0.0013058964524589498,911.8621438074481 L 0.0013135503561156252,901.862143807451 M 0.0013166119175782953,897.8621438074522 L 0.0013242658212349707,887.8621438074551 M 0.0013273273826976408,883.8621438074563 L 0.0013349812863543162,873.8621438074592 M 0.0013380428478169863,869.8621438074604 L 0.0013456967514736617,859.8621438074633 M 0.0013487583129363318,855.8621438074645 L 0.0013564122165930072,845.8621438074674 M 0.0013594737780556773,841.8621438074686 L 0.0013671276817123527,831.8621438074715 M 0.0013701892431750228,827.8621438074726 L 0.0013778431468316982,817.8621438074756 M 0.0013809047082943683,813.8621438074767 L 0.0013885586119510437,803.8621438074797 M 0.0013916201734137138,799.8621438074808 L 0.0013992740770703892,789.8621438074838 M 0.0014023356385330593,785.8621438074849 L 0.0014099895421897347,775.8621438074879 M 0.0014130511036524048,771.862143807489 L 0.0014207050073090802,761.862143807492 M 0.0014237665687717503,757.8621438074931 L 0.0014314204724284257,747.8621438074961 M 0.0014344820338910958,743.8621438074972 L 0.0014421359375477712,733.8621438075002 M 0.0014451974990104413,729.8621438075013 L 0.0014528514026671167,719.8621438075043 M 0.0014559129641297868,715.8621438075054 L 0.0014635668677864622,705.8621438075083 M 0.0014666284292491323,701.8621438075095 L 0.0014742823329058077,691.8621438075124 M 0.0014773438943684778,687.8621438075136 L 0.0014849977980251532,677.8621438075165 M 0.0014880593594878233,673.8621438075177 L 0.0014957132631444987,663.8621438075206 M 0.0014987748246071688,659.8621438075218 L 0.0015064287282638442,649.8621438075247 M 0.0015094902897265143,645.8621438075259 L 0.0015171441933831897,635.8621438075288 M 0.0015202057548458598,631.86214380753 L 0.0015278596585025352,621.8621438075329 M 0.0015309212199652053,617.862143807534 L 0.0015385751236218807,607.862143807537 M 0.0015416366850845508,603.8621438075381 L 0.0015492905887412262,593.8621438075411 M 0.0015523521502038963,589.8621438075422 L 0.0015600060538605717,579.8621438075452 M 0.0015630676153232418,575.8621438075463 L 0.0015707215189799172,565.8621438075493 M 0.0015737830804425873,561.8621438075504 L 0.0015814369840992627,551.8621438075534 M 0.0015844985455619328,547.8621438075545 L 0.0015921524492186082,537.8621438075575 M 0.0015952140106812783,533.8621438075586 L 0.0016028679143379537,523.8621438075616 M 0.0016059294758006238,519.8621438075627 L 0.0016135833794572992,509.86214380756564 M 0.0016166449409199693,505.86214380756684 L 0.0016242988445766447,495.8621438075698 M 0.0016273604060393148,491.862143807571 L 0.0016350143096959902,481.86214380757394 M 0.0016380758711586603,477.86214380757514 L 0.0016457297748153357,467.8621438075781 M 0.0016487913362780058,463.8621438075793 L 0.0016564452399346812,453.86214380758224 M 0.0016595068013973513,449.86214380758344 L 0.0016671607050540267,439.8621438075864 M 0.0016702222665166968,435.8621438075876 L 0.0016778761701733722,425.86214380759054 M 0.0016809377316360423,421.86214380759174 L 0.0016885916352927177,411.8621438075947 M 0.0016916531967553878,407.8621438075959 L 0.0016993071004120632,397.86214380759884 M 0.0017023686618747333,393.86214380760003 L 0.0017100225655314087,383.862143807603 M 0.0017130841269940788,379.8621438076042 L 0.0017207380306507542,369.86214380760714 M 0.0017237995921134243,365.86214380760833 L 0.0017314534957700997,355.8621438076113 M 0.0017345150572327698,351.8621438076125 L 0.0017421689608894452,341.86214380761544 M 0.0017452305223521153,337.86214380761663 L 0.0017528844260087907,327.8621438076196 M 0.0017559459874714608,323.8621438076208 L 0.0017635998911281362,313.86214380762374 M 0.0017666614525908063,309.86214380762493 L 0.0017743153562474817,299.8621438076279 M 0.0017773769177101518,295.8621438076291 L 0.0017850308213668272,285.86214380763204 M 0.0017880923828294973,281.86214380763323 L 0.0017957462864861726,271.8621438076362 M 0.0017988078479488428,267.8621438076374 L 0.0018064617516055181,257.86214380764034 M 0.0018095233130681883,253.8621438076415 L 0.0018171772167248636,243.86214380764443 M 0.0018202387781875338,239.8621438076456 L 0.0018278926818442091,229.86214380764852 M 0.0018309542433068793,225.8621438076497 L 0.0018386081469635546,215.86214380765261 M 0.0018416697084262248,211.86214380765378 L 0.0018493236120829001,201.8621438076567 M 0.0018523851735455703,197.86214380765787 L 0.0018600390772022456,187.8621438076608 M 0.0018631006386649158,183.86214380766197 L 0.0018707545423215911,173.8621438076649 M 0.0018738161037842613,169.86214380766606 L 0.0018814700074409366,159.86214380766899 M 0.0018845315689036068,155.86214380767015 L 0.0018921854725602821,145.86214380767308 M 0.0018952470340229523,141.86214380767424 L 0.0019029009376796276,131.86214380767717 M 0.0019059624991422978,127.86214380767834 L 0.0019136164027989731,117.86214380768126 M 0.0019166779642616433,113.86214380768243 L 0.0019243318679183186,103.86214380768536 M 0.0019273934293809888,99.86214380768652 L 0.0019350473330376641,89.86214380768945 M 0.0019381088945003343,85.86214380769061 L 0.0019457627981570096,75.86214380769354 M 0.0019488243596196798,71.86214380769471 L 0.001956478263276355,61.862143807697635 M 0.001959539824739025,57.86214380769881 L 0.0019671937283957004,47.862143807701734 M 0.0019702552898583706,43.86214380770291 L 0.001977909193515046,33.862143807705834 M 0.001980970754977716,29.862143807707007 L 0.0019886246586343914,19.862143807709934 M 0.0019916862200970616,15.862143807711107 L 0.001999340123753737,5.862143807714036 M 0.0020000000003179814,5.000000000000169 M 0.46845021472509474,3.2743506441744987 M 1.2715915399892659,2.188896648421766 L 1.662533905933056,1.660533905932907 L 3.2763506441746477,0.46645021472494586 L 5.002000000000318,1.6908696665041134e-13 M 5,0 L 15,0 M 19,0 L 29,0 M 33,0 L 43,0 M 47,0 L 57,0 M 61,0 L 71,0 M 75,0 L 85,0 M 89,0 L 99,0 M 103,0 L 113,0 M 117,0 L 127,0 M 131,0 L 141,0 M 145,0 L 155,0 M 159,0 L 169,0 M 173,0 L 183,0 M 187,0 L 197,0 M 201,0 L 211,0 M 215,0 L 225,0 M 229,0 L 239,0 M 243,0 L 253,0 M 257,0 L 267,0 M 271,0 L 281,0 M 285,0 L 295,0 M 299,0 L 309,0 M 313,0 L 323,0 M 327,0 L 337,0 M 341,0 L 351,0 M 355,0 L 365,0 M 369,0 L 379,0 M 383,0 L 393,0 M 397,0 L 407,0 M 411,0 L 421,0 M 425,0 L 435,0 M 439,0 L 449,0 M 453,0 L 463,0 M 467,0 L 477,0 M 481,0 L 491,0 M 495,0 L 505,0 M 509,0 L 519,0 M 523,0 L 533,0 M 537,0 L 547,0 M 551,0 L 561,0 M 565,0 L 575,0 M 579,0 L 589,0 M 593,0 L 603,0 M 607,0 L 617,0 M 621,0 L 631,0 M 635,0 L 645,0 M 649,0 L 659,0 M 663,0 L 673,0 M 677,0 L 687,0 M 691,0 L 701,0 M 705,0 L 715,0 M 719,0 L 729,0 M 733,0 L 743,0 M 747,0 L 757,0 M 761,0 L 771,0 M 775,0 L 785,0 M 789,0 L 799,0 M 803,0 L 813,0 M 817,0 L 827,0 M 831,0 L 841,0 M 845,0 L 855,0 M 859,0 L 869,0 M 873,0 L 876.5228474983079,0 L 878.2484968541335,0.46645021472477677 L 879.8623135923751,1.6605339059327378 L 881.0563972835832,3.27435064417433 L 881.2323960380392,3.925464370067429 M 881.5228474983079,5 M 881.5228497079142,7.886901230452255 L 881.522857361818,17.886901230449325 M 881.5228604233794,21.886901230448153 L 881.5228680772831,31.886901230445226 M 881.5228711388445,35.88690123044405 L 881.5228787927482,45.886901230441126 M 881.5228818543096,49.88690123043995 L 881.5228895082133,59.886901230437026 M 881.5228925697747,63.88690123043585 L 881.5229002236784,73.88690123043293 M 881.5229032852399,77.88690123043176 L 881.5229109391436,87.88690123042883 M 881.522914000705,91.88690123042767 L 881.5229216546087,101.88690123042474 M 881.5229247161701,105.88690123042358 L 881.5229323700738,115.88690123042065 M 881.5229354316352,119.88690123041948 L 881.5229430855389,129.88690123041656 M 881.5229461471004,133.8869012304154 L 881.5229538010041,143.88690123041246 M 881.5229568625655,147.8869012304113 L 881.5229645164692,157.88690123040837 M 881.5229675780306,161.8869012304072 L 881.5229752319343,171.88690123040428 M 881.5229782934957,175.8869012304031 L 881.5229859473994,185.88690123040018 M 881.5229890089608,189.88690123039902 L 881.5229966628646,199.8869012303961 M 881.522999724426,203.88690123039493 L 881.5230073783297,213.886901230392 M 881.5230104398911,217.88690123039083 L 881.5230180937948,227.8869012303879 M 881.5230211553562,231.88690123038674 L 881.5230288092599,241.8869012303838 M 881.5230318708213,245.88690123038265 L 881.523039524725,255.88690123037972 M 881.5230425862865,259.88690123037856 L 881.5230502401902,269.8869012303756 M 881.5230533017516,273.8869012303744 L 881.5230609556553,283.88690123037145 M 881.5230640172167,287.88690123037026 L 881.5230716711204,297.8869012303673 M 881.5230747326818,301.8869012303661 L 881.5230823865855,311.88690123036315 M 881.523085448147,315.88690123036196 L 881.5230931020507,325.886901230359 M 881.5230961636121,329.8869012303578 L 881.5231038175158,339.88690123035485 M 881.5231068790772,343.88690123035366 L 881.5231145329809,353.8869012303507 M 881.5231175945423,357.8869012303495 L 881.523125248446,367.88690123034655 M 881.5231283100075,371.88690123034536 L 881.5231359639112,381.8869012303424 M 881.5231390254726,385.8869012303412 L 881.5231466793763,395.88690123033825 M 881.5231497409377,399.88690123033706 L 881.5231573948414,409.8869012303341 M 881.5231604564028,413.8869012303329 L 881.5231681103065,423.88690123032995 M 881.523171171868,427.88690123032876 L 881.5231788257717,437.8869012303258 M 881.5231818873331,441.8869012303246 L 881.5231895412368,451.88690123032166 M 881.5231926027982,455.88690123032046 L 881.5232002567019,465.8869012303175 M 881.5232033182633,469.8869012303163 L 881.523210972167,479.88690123031336 M 881.5232140337284,483.88690123031216 L 881.5232216876321,493.8869012303092 M 881.5232247491936,497.886901230308 L 881.5232324030973,507.88690123030506 M 881.5232354646587,511.88690123030386 L 881.5232431185624,521.886901230301 M 881.5232461801238,525.8869012302998 L 881.5232538340275,535.8869012302969 M 881.5232568955889,539.8869012302957 L 881.5232645494926,549.8869012302928 M 881.523267611054,553.8869012302916 L 881.5232752649578,563.8869012302887 M 881.5232783265192,567.8869012302875 L 881.5232859804229,577.8869012302846 M 881.5232890419843,581.8869012302835 L 881.523296695888,591.8869012302805 M 881.5232997574494,595.8869012302794 L 881.5233074113531,605.8869012302764 M 881.5233104729145,609.8869012302753 L 881.5233181268183,619.8869012302723 M 881.5233211883797,623.8869012302712 L 881.5233288422834,633.8869012302682 M 881.5233319038448,637.8869012302671 L 881.5233395577485,647.8869012302641 M 881.5233426193099,651.886901230263 L 881.5233502732136,661.88690123026 M 881.523353334775,665.8869012302589 L 881.5233609886787,675.886901230256 M 881.5233640502402,679.8869012302548 L 881.5233717041439,689.8869012302519 M 881.5233747657053,693.8869012302507 L 881.523382419609,703.8869012302478 M 881.5233854811704,707.8869012302466 L 881.5233931350741,717.8869012302437 M 881.5233961966355,721.8869012302425 L 881.5234038505392,731.8869012302396 M 881.5234069121007,735.8869012302384 L 881.5234145660044,745.8869012302355 M 881.5234176275658,749.8869012302343 L 881.5234252814695,759.8869012302314 M 881.5234283430309,763.8869012302303 L 881.5234359969346,773.8869012302273 M 881.523439058496,777.8869012302262 L 881.5234467123997,787.8869012302232 M 881.5234497739611,791.8869012302221 L 881.5234574278649,801.8869012302191 M 881.5234604894263,805.886901230218 L 881.52346814333,815.886901230215 M 881.5234712048914,819.8869012302139 L 881.5234788587951,829.8869012302109 M 881.5234819203565,833.8869012302098 L 881.5234895742602,843.8869012302068 M 881.5234926358216,847.8869012302057 L 881.5235002897253,857.8869012302027 M 881.5235033512868,861.8869012302016 L 881.5235110051905,871.8869012301986 M 881.5235140667519,875.8869012301975 L 881.5235217206556,885.8869012301946 M 881.523524782217,889.8869012301934 L 881.5235324361207,899.8869012301905 M 881.5235354976821,903.8869012301893 L 881.5235431515858,913.8869012301864 M 881.5235462131473,917.8869012301852 L 881.523553867051,927.8869012301823 M 881.5235569286124,931.8869012301811 L 881.5235645825161,941.8869012301782 M 881.5235676440775,945.886901230177 L 881.5235752979812,955.8869012301741 M 881.5235783595426,959.886901230173 L 881.5235860134463,969.88690123017 M 881.5235890750077,973.8869012301689 L 881.5235967289115,983.8869012301659 M 881.5235997904729,987.8869012301648 L 881.5236074443766,997.8869012301618 M 881.523610505938,1001.8869012301607 L 881.5236181598417,1011.8869012301577 M 881.5236212214031,1015.8869012301566 L 881.5236288753068,1025.8869012301536 M 881.5236319368682,1029.8869012301525 L 881.523639590772,1039.8869012301495 M 881.5236426523334,1043.8869012301484 L 881.5236503062371,1053.8869012301454 M 881.5236533677985,1057.8869012301443 L 881.5236610217022,1067.8869012301413 M 881.5236640832636,1071.8869012301402 L 881.5236717371673,1081.8869012301373 M 881.5236747987287,1085.8869012301361 L 881.5236824526324,1095.8869012301332 M 881.5236855141939,1099.886901230132 L 881.5236931680976,1109.886901230129 M 881.523696229659,1113.886901230128 L 881.5237038835627,1123.886901230125 M 881.5237069451241,1127.8869012301238 L 881.5237145990278,1137.8869012301209 M 881.5237176605892,1141.8869012301197 L 881.5237253144929,1151.8869012301168 M 881.5237283760544,1155.8869012301157 L 881.5237360299581,1165.8869012301127 M 881.5237390915195,1169.8869012301116 L 881.5237467454232,1179.8869012301086 M 881.5237498069846,1183.8869012301075 L 881.5237574608883,1193.8869012301045 M 881.5237605224497,1197.8869012301034 L 881.5237681763534,1207.8869012301004 M 881.5237712379148,1211.8869012300993 L 881.5237788918186,1221.8869012300963 M 881.52378195338,1225.8869012300952 L 881.5237896072837,1235.8869012300922 M 881.5237926688451,1239.886901230091 L 881.5238003227488,1249.8869012300881 M 881.5238033843102,1253.886901230087 L 881.5238110382139,1263.886901230084 M 881.5238140997753,1267.886901230083 L 881.523821753679,1277.88690123008 M 881.5238248152405,1281.8869012300788 L 881.5238324691442,1291.8869012300759 M 881.5238355307056,1295.8869012300747 L 881.5238431846093,1305.8869012300718 M 881.5238462461707,1309.8869012300706 L 881.5238474983082,1311.5228474983078 L 881.0573972835836,1313.2484968541335 L 879.8633135923754,1314.8623135923751 L 878.2494968541338,1316.056397283583 L 876.5238474983082,1316.5228474983078 L 875.7500450377848,1316.5228474983078 M 871.7500450377848,1316.5228474983078 L 861.7500450377848,1316.5228474983078 M 857.7500450377848,1316.5228474983078 L 847.7500450377848,1316.5228474983078 M 843.7500450377848,1316.5228474983078 L 833.7500450377848,1316.5228474983078 M 829.7500450377848,1316.5228474983078 L 819.7500450377848,1316.5228474983078 M 815.7500450377848,1316.5228474983078 L 805.7500450377848,1316.5228474983078 M 801.7500450377848,1316.5228474983078 L 791.7500450377848,1316.5228474983078 M 787.7500450377848,1316.5228474983078 L 777.7500450377848,1316.5228474983078 M 773.7500450377848,1316.5228474983078 L 763.7500450377848,1316.5228474983078 M 759.7500450377848,1316.5228474983078 L 749.7500450377848,1316.5228474983078 M 745.7500450377848,1316.5228474983078 L 735.7500450377848,1316.5228474983078 M 731.7500450377848,1316.5228474983078 L 721.7500450377848,1316.5228474983078 M 717.7500450377848,1316.5228474983078 L 707.7500450377848,1316.5228474983078 M 703.7500450377848,1316.5228474983078 L 693.7500450377848,1316.5228474983078 M 689.7500450377848,1316.5228474983078 L 679.7500450377848,1316.5228474983078 M 675.7500450377848,1316.5228474983078 L 665.7500450377848,1316.5228474983078 M 661.7500450377848,1316.5228474983078 L 651.7500450377848,1316.5228474983078 M 647.7500450377848,1316.5228474983078 L 637.7500450377848,1316.5228474983078 M 633.7500450377848,1316.5228474983078 L 623.7500450377848,1316.5228474983078 M 619.7500450377848,1316.5228474983078 L 609.7500450377848,1316.5228474983078 M 605.7500450377848,1316.5228474983078 L 595.7500450377848,1316.5228474983078 M 591.7500450377848,1316.5228474983078 L 581.7500450377848,1316.5228474983078 M 577.7500450377848,1316.5228474983078 L 567.7500450377848,1316.5228474983078 M 563.7500450377848,1316.5228474983078 L 553.7500450377848,1316.5228474983078 M 549.7500450377848,1316.5228474983078 L 539.7500450377848,1316.5228474983078 M 535.7500450377848,1316.5228474983078 L 525.7500450377848,1316.5228474983078 M 521.7500450377848,1316.5228474983078 L 511.75004503778484,1316.5228474983078 M 507.75004503778484,1316.5228474983078 L 497.75004503778484,1316.5228474983078 M 493.75004503778484,1316.5228474983078 L 483.75004503778484,1316.5228474983078 M 479.75004503778484,1316.5228474983078 L 469.75004503778484,1316.5228474983078 M 465.75004503778484,1316.5228474983078 L 455.75004503778484,1316.5228474983078 M 451.75004503778484,1316.5228474983078 L 441.75004503778484,1316.5228474983078 M 437.75004503778484,1316.5228474983078 L 427.75004503778484,1316.5228474983078 M 423.75004503778484,1316.5228474983078 L 413.75004503778484,1316.5228474983078 M 409.75004503778484,1316.5228474983078 L 399.75004503778484,1316.5228474983078 M 395.75004503778484,1316.5228474983078 L 385.75004503778484,1316.5228474983078 M 381.75004503778484,1316.5228474983078 L 371.75004503778484,1316.5228474983078 M 367.75004503778484,1316.5228474983078 L 357.75004503778484,1316.5228474983078 M 353.75004503778484,1316.5228474983078 L 343.75004503778484,1316.5228474983078 M 339.75004503778484,1316.5228474983078 L 329.75004503778484,1316.5228474983078 M 325.75004503778484,1316.5228474983078 L 315.75004503778484,1316.5228474983078 M 311.75004503778484,1316.5228474983078 L 301.75004503778484,1316.5228474983078 M 297.75004503778484,1316.5228474983078 L 287.75004503778484,1316.5228474983078 M 283.75004503778484,1316.5228474983078 L 273.75004503778484,1316.5228474983078 M 269.75004503778484,1316.5228474983078 L 259.75004503778484,1316.5228474983078 M 255.75004503778484,1316.5228474983078 L 245.75004503778484,1316.5228474983078 M 241.75004503778484,1316.5228474983078 L 231.75004503778484,1316.5228474983078 M 227.75004503778484,1316.5228474983078 L 217.75004503778484,1316.5228474983078 M 213.75004503778484,1316.5228474983078 L 203.75004503778484,1316.5228474983078 M 199.75004503778484,1316.5228474983078 L 189.75004503778484,1316.5228474983078 M 185.75004503778484,1316.5228474983078 L 175.75004503778484,1316.5228474983078 M 171.75004503778484,1316.5228474983078 L 161.75004503778484,1316.5228474983078 M 157.75004503778484,1316.5228474983078 L 147.75004503778484,1316.5228474983078 M 143.75004503778484,1316.5228474983078 L 133.75004503778484,1316.5228474983078 M 129.75004503778484,1316.5228474983078 L 119.75004503778484,1316.5228474983078 M 115.75004503778484,1316.5228474983078 L 105.75004503778484,1316.5228474983078 M 101.75004503778484,1316.5228474983078 L 91.75004503778484,1316.5228474983078 M 87.75004503778484,1316.5228474983078 L 77.75004503778484,1316.5228474983078 M 73.75004503778484,1316.5228474983078 L 63.750045037784844,1316.5228474983078 M 59.750045037784844,1316.5228474983078 L 49.750045037784844,1316.5228474983078 M 45.750045037784844,1316.5228474983078 L 35.750045037784844,1316.5228474983078 M 31.750045037784844,1316.5228474983078 L 21.750045037784844,1316.5228474983078 M 17.750045037784844,1316.5228474983078 L 7.750045037784844,1316.5228474983078 M 5.001000000000317,1316.5228474983078 M 3.793384184479625,1316.196423909093 L 3.2753506441746474,1316.056397283583 L 1.6615339059330556,1314.8623135923751 L 0.46745021472509474,1313.2484968541335 L 0.0010000000003179688,1311.5228474983078 L 0.0010028018676546057,1307.8621438073324 M 0.0010058634291172759,1303.8621438073335 L 0.0010135173327739512,1293.8621438073365 M 0.0010165788942366214,1289.8621438073376 L 0.0010242327978932967,1279.8621438073405 M 0.0010272943593559669,1275.8621438073417 L 0.0010349482630126422,1265.8621438073446 M 0.0010380098244753124,1261.8621438073458 L 0.0010456637281319877,1251.8621438073487 M 0.0010487252895946579,1247.8621438073499 L 0.0010563791932513332,1237.8621438073528 M 0.0010594407547140033,1233.862143807354 L 0.0010670946583706787,1223.862143807357 M 0.0010701562198333488,1219.862143807358 L 0.0010778101234900242,1209.862143807361 M 0.0010808716849526943,1205.8621438073621 L 0.0010885255886093697,1195.862143807365 M 0.0010915871500720398,1191.8621438073662 L 0.0010992410537287152,1181.8621438073692 M 0.0011023026151913853,1177.8621438073703 L 0.0011099565188480607,1167.8621438073733 M 0.0011130180803107308,1163.8621438073744 L 0.0011206719839674062,1153.8621438073774 M 0.0011237335454300763,1149.8621438073785 L 0.0011313874490867517,1139.8621438073815 M 0.0011344490105494218,1135.8621438073826 L 0.0011421029142060972,1125.8621438073856 M 0.0011451644756687673,1121.8621438073867 L 0.0011528183793254427,1111.8621438073897 M 0.0011558799407881128,1107.8621438073908 L 0.0011635338444447882,1097.8621438073937 M 0.0011665954059074583,1093.862143807395 L 0.0011742493095641337,1083.8621438073978 M 0.0011773108710268038,1079.862143807399 L 0.0011849647746834792,1069.862143807402 M 0.0011880263361461493,1065.862143807403 L 0.0011956802398028247,1055.862143807406 M 0.0011987418012654948,1051.8621438074072 L 0.0012063957049221702,1041.8621438074101 M 0.0012094572663848403,1037.8621438074113 L 0.0012171111700415157,1027.8621438074142 M 0.0012201727315041858,1023.8621438074154 L 0.0012278266351608612,1013.8621438074183 M 0.0012308881966235313,1009.8621438074194 L 0.0012385421002802067,999.8621438074224 M 0.0012416036617428768,995.8621438074235 L 0.0012492575653995522,985.8621438074265 M 0.0012523191268622223,981.8621438074276 L 0.0012599730305188977,971.8621438074306 M 0.0012630345919815678,967.8621438074317 L 0.0012706884956382432,957.8621438074347 M 0.0012737500571009133,953.8621438074358 L 0.0012814039607575887,943.8621438074388 M 0.0012844655222202588,939.8621438074399 L 0.0012921194258769342,929.8621438074429 M 0.0012951809873396043,925.862143807444 L 0.0013028348909962797,915.862143807447 M 0.0013058964524589498,911.8621438074481 L 0.0013135503561156252,901.862143807451 M 0.0013166119175782953,897.8621438074522 L 0.0013242658212349707,887.8621438074551 M 0.0013273273826976408,883.8621438074563 L 0.0013349812863543162,873.8621438074592 M 0.0013380428478169863,869.8621438074604 L 0.0013456967514736617,859.8621438074633 M 0.0013487583129363318,855.8621438074645 L 0.0013564122165930072,845.8621438074674 M 0.0013594737780556773,841.8621438074686 L 0.0013671276817123527,831.8621438074715 M 0.0013701892431750228,827.8621438074726 L 0.0013778431468316982,817.8621438074756 M 0.0013809047082943683,813.8621438074767 L 0.0013885586119510437,803.8621438074797 M 0.0013916201734137138,799.8621438074808 L 0.0013992740770703892,789.8621438074838 M 0.0014023356385330593,785.8621438074849 L 0.0014099895421897347,775.8621438074879 M 0.0014130511036524048,771.862143807489 L 0.0014207050073090802,761.862143807492 M 0.0014237665687717503,757.8621438074931 L 0.0014314204724284257,747.8621438074961 M 0.0014344820338910958,743.8621438074972 L 0.0014421359375477712,733.8621438075002 M 0.0014451974990104413,729.8621438075013 L 0.0014528514026671167,719.8621438075043 M 0.0014559129641297868,715.8621438075054 L 0.0014635668677864622,705.8621438075083 M 0.0014666284292491323,701.8621438075095 L 0.0014742823329058077,691.8621438075124 M 0.0014773438943684778,687.8621438075136 L 0.0014849977980251532,677.8621438075165 M 0.0014880593594878233,673.8621438075177 L 0.0014957132631444987,663.8621438075206 M 0.0014987748246071688,659.8621438075218 L 0.0015064287282638442,649.8621438075247 M 0.0015094902897265143,645.8621438075259 L 0.0015171441933831897,635.8621438075288 M 0.0015202057548458598,631.86214380753 L 0.0015278596585025352,621.8621438075329 M 0.0015309212199652053,617.862143807534 L 0.0015385751236218807,607.862143807537 M 0.0015416366850845508,603.8621438075381 L 0.0015492905887412262,593.8621438075411 M 0.0015523521502038963,589.8621438075422 L 0.0015600060538605717,579.8621438075452 M 0.0015630676153232418,575.8621438075463 L 0.0015707215189799172,565.8621438075493 M 0.0015737830804425873,561.8621438075504 L 0.0015814369840992627,551.8621438075534 M 0.0015844985455619328,547.8621438075545 L 0.0015921524492186082,537.8621438075575 M 0.0015952140106812783,533.8621438075586 L 0.0016028679143379537,523.8621438075616 M 0.0016059294758006238,519.8621438075627 L 0.0016135833794572992,509.86214380756564 M 0.0016166449409199693,505.86214380756684 L 0.0016242988445766447,495.8621438075698 M 0.0016273604060393148,491.862143807571 L 0.0016350143096959902,481.86214380757394 M 0.0016380758711586603,477.86214380757514 L 0.0016457297748153357,467.8621438075781 M 0.0016487913362780058,463.8621438075793 L 0.0016564452399346812,453.86214380758224 M 0.0016595068013973513,449.86214380758344 L 0.0016671607050540267,439.8621438075864 M 0.0016702222665166968,435.8621438075876 L 0.0016778761701733722,425.86214380759054 M 0.0016809377316360423,421.86214380759174 L 0.0016885916352927177,411.8621438075947 M 0.0016916531967553878,407.8621438075959 L 0.0016993071004120632,397.86214380759884 M 0.0017023686618747333,393.86214380760003 L 0.0017100225655314087,383.862143807603 M 0.0017130841269940788,379.8621438076042 L 0.0017207380306507542,369.86214380760714 M 0.0017237995921134243,365.86214380760833 L 0.0017314534957700997,355.8621438076113 M 0.0017345150572327698,351.8621438076125 L 0.0017421689608894452,341.86214380761544 M 0.0017452305223521153,337.86214380761663 L 0.0017528844260087907,327.8621438076196 M 0.0017559459874714608,323.8621438076208 L 0.0017635998911281362,313.86214380762374 M 0.0017666614525908063,309.86214380762493 L 0.0017743153562474817,299.8621438076279 M 0.0017773769177101518,295.8621438076291 L 0.0017850308213668272,285.86214380763204 M 0.0017880923828294973,281.86214380763323 L 0.0017957462864861726,271.8621438076362 M 0.0017988078479488428,267.8621438076374 L 0.0018064617516055181,257.86214380764034 M 0.0018095233130681883,253.8621438076415 L 0.0018171772167248636,243.86214380764443 M 0.0018202387781875338,239.8621438076456 L 0.0018278926818442091,229.86214380764852 M 0.0018309542433068793,225.8621438076497 L 0.0018386081469635546,215.86214380765261 M 0.0018416697084262248,211.86214380765378 L 0.0018493236120829001,201.8621438076567 M 0.0018523851735455703,197.86214380765787 L 0.0018600390772022456,187.8621438076608 M 0.0018631006386649158,183.86214380766197 L 0.0018707545423215911,173.8621438076649 M 0.0018738161037842613,169.86214380766606 L 0.0018814700074409366,159.86214380766899 M 0.0018845315689036068,155.86214380767015 L 0.0018921854725602821,145.86214380767308 M 0.0018952470340229523,141.86214380767424 L 0.0019029009376796276,131.86214380767717 M 0.0019059624991422978,127.86214380767834 L 0.0019136164027989731,117.86214380768126 M 0.0019166779642616433,113.86214380768243 L 0.0019243318679183186,103.86214380768536 M 0.0019273934293809888,99.86214380768652 L 0.0019350473330376641,89.86214380768945 M 0.0019381088945003343,85.86214380769061 L 0.0019457627981570096,75.86214380769354 M 0.0019488243596196798,71.86214380769471 L 0.001956478263276355,61.862143807697635 M 0.001959539824739025,57.86214380769881 L 0.0019671937283957004,47.862143807701734 M 0.0019702552898583706,43.86214380770291 L 0.001977909193515046,33.862143807705834 M 0.001980970754977716,29.862143807707007 L 0.0019886246586343914,19.862143807709934 M 0.0019916862200970616,15.862143807711107 L 0.001999340123753737,5.862143807714036 M 0.0020000000003179814,5.000000000000169 M 0.46845021472509474,3.2743506441744987 M 1.2715915399892659,2.188896648421766 L 1.662533905933056,1.660533905932907 L 3.2763506441746477,0.46645021472494586 L 5.002000000000318,1.6908696665041134e-13\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g></g><g transform=\"matrix(1, 0, 0, 1, 1510, 874.7477437457701)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 219,0 L 219,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 219,0 L 219,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 205, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87124)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.330078125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 0,0 L 0,17.875 L 26,17.875 L 26,0 L 0,0 z M 9.75,11.375 L 9.75,8.125 L 16.25,8.125 L 16.25,11.375 L 9.75,11.375 z M 16.25,13 L 16.25,16.25 L 9.75,16.25 L 9.75,13 L 16.25,13 z M 16.25,3.25 L 16.25,6.5 L 9.75,6.5 L 9.75,3.25 L 16.25,3.25 z M 8.125,3.25 L 8.125,6.5 L 1.625,6.5 L 1.625,3.25 L 8.125,3.25 z M 1.625,8.125 L 8.125,8.125 L 8.125,11.375 L 1.625,11.375 L 1.625,8.125 z M 17.875,8.125 L 24.375,8.125 L 24.375,11.375 L 17.875,11.375 L 17.875,8.125 z M 17.875,6.5 L 17.875,3.25 L 24.375,3.25 L 24.375,6.5 L 17.875,6.5 z M 1.625,13 L 8.125,13 L 8.125,16.25 L 1.625,16.25 L 1.625,13 z M 17.875,16.25 L 17.875,13 L 24.375,13 L 24.375,16.25 L 17.875,16.25 z\" fill=\"#ED8B00\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">search-ads-store</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">readonly-contextual-profile</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1120, 1042.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 279,0 L 279,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 279,0 L 279,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 265, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87125)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 65.356201171875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.666666666666666,17.333333333333332 Q 8.666666666666666,16.550925925925924 8.094907407407407,15.979166666666666 Q 7.523148148148148,15.407407407407407 6.7407407407407405,15.407407407407407 Q 5.958333333333333,15.407407407407407 5.3865740740740735,15.979166666666666 Q 4.814814814814815,16.550925925925924 4.814814814814815,17.333333333333332 Q 4.814814814814815,18.11574074074074 5.3865740740740735,18.6875 Q 5.958333333333333,19.25925925925926 6.7407407407407405,19.25925925925926 Q 7.523148148148148,19.25925925925926 8.094907407407407,18.6875 Q 8.666666666666666,18.11574074074074 8.666666666666666,17.333333333333332 z M 2.888888888888889,9.62962962962963 L 8.666666666666666,9.62962962962963 L 8.666666666666666,5.777777777777778 L 6.289351851851851,5.777777777777778 Q 6.09375,5.777777777777778 5.958333333333333,5.913194444444444 L 3.0243055555555554,8.847222222222221 Q 2.888888888888889,8.982638888888888 2.888888888888889,9.17824074074074 L 2.888888888888889,9.62962962962963 z M 22.148148148148145,17.333333333333332 Q 22.148148148148145,16.550925925925924 21.57638888888889,15.979166666666666 Q 21.00462962962963,15.407407407407407 20.22222222222222,15.407407407407407 Q 19.439814814814813,15.407407407407407 18.868055555555554,15.979166666666666 Q 18.296296296296294,16.550925925925924 18.296296296296294,17.333333333333332 Q 18.296296296296294,18.11574074074074 18.868055555555554,18.6875 Q 19.439814814814813,19.25925925925926 20.22222222222222,19.25925925925926 Q 21.00462962962963,19.25925925925926 21.57638888888889,18.6875 Q 22.148148148148145,18.11574074074074 22.148148148148145,17.333333333333332 z M 26,0.9629629629629629 L 26,16.37037037037037 Q 26,16.596064814814813 25.939814814814813,16.76909722222222 Q 25.87962962962963,16.94212962962963 25.736689814814813,17.047453703703702 Q 25.59375,17.15277777777778 25.488425925925924,17.22048611111111 Q 25.38310185185185,17.288194444444443 25.134837962962962,17.31076388888889 Q 24.886574074074073,17.333333333333332 24.796296296296294,17.34085648148148 Q 24.706018518518515,17.34837962962963 24.41261574074074,17.34085648148148 Q 24.119212962962962,17.333333333333332 24.074074074074073,17.333333333333332 Q 24.074074074074073,18.92824074074074 22.94560185185185,20.056712962962962 Q 21.81712962962963,21.185185185185183 20.22222222222222,21.185185185185183 Q 18.627314814814813,21.185185185185183 17.49884259259259,20.056712962962962 Q 16.37037037037037,18.92824074074074 16.37037037037037,17.333333333333332 L 10.592592592592592,17.333333333333332 Q 10.592592592592592,18.92824074074074 9.46412037037037,20.056712962962962 Q 8.335648148148147,21.185185185185183 6.7407407407407405,21.185185185185183 Q 5.145833333333333,21.185185185185183 4.017361111111111,20.056712962962962 Q 2.888888888888889,18.92824074074074 2.888888888888889,17.333333333333332 L 1.9259259259259258,17.333333333333332 Q 1.880787037037037,17.333333333333332 1.587384259259259,17.34085648148148 Q 1.2939814814814814,17.34837962962963 1.2037037037037037,17.34085648148148 Q 1.1134259259259258,17.333333333333332 0.865162037037037,17.31076388888889 Q 0.6168981481481481,17.288194444444443 0.5115740740740741,17.22048611111111 Q 0.40625,17.15277777777778 0.2633101851851852,17.047453703703702 Q 0.12037037037037036,16.94212962962963 0.06018518518518518,16.76909722222222 Q 0,16.596064814814813 0,16.37037037037037 Q 0,15.979166666666666 0.2858796296296296,15.693287037037036 Q 0.5717592592592592,15.407407407407407 0.9629629629629629,15.407407407407407 L 0.9629629629629629,10.592592592592592 Q 0.9629629629629629,10.472222222222221 0.9554398148148148,10.065972222222221 Q 0.9479166666666666,9.659722222222221 0.9554398148148148,9.494212962962962 Q 0.9629629629629629,9.328703703703702 0.9930555555555555,8.97511574074074 Q 1.0231481481481481,8.621527777777777 1.0908564814814814,8.418402777777777 Q 1.1585648148148147,8.215277777777777 1.3015046296296295,7.9594907407407405 Q 1.4444444444444444,7.703703703703703 1.6400462962962963,7.508101851851851 L 4.619212962962963,4.528935185185185 Q 4.905092592592593,4.243055555555555 5.379050925925926,4.047453703703703 Q 5.853009259259259,3.8518518518518516 6.259259259259259,3.8518518518518516 L 8.666666666666666,3.8518518518518516 L 8.666666666666666,0.9629629629629629 Q 8.666666666666666,0.5717592592592592 8.952546296296296,0.2858796296296296 Q 9.238425925925926,0 9.62962962962963,0 L 25.037037037037035,0 Q 25.42824074074074,0 25.71412037037037,0.2858796296296296 Q 26,0.5717592592592592 26,0.9629629629629629 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">adsOfferRouting</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">routing</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1360, 1378.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87126)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 22.017333984375, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 9.007874015748031,8.220472440944881 L 1.669291338582677,15.559055118110235 Q 1.5118110236220472,15.716535433070867 1.3070866141732282,15.716535433070867 Q 1.1023622047244095,15.716535433070867 0.9448818897637795,15.559055118110235 L 0.15748031496062992,14.771653543307087 Q 0,14.614173228346456 0,14.409448818897637 Q 0,14.204724409448819 0.15748031496062992,14.047244094488189 L 6.346456692913386,7.858267716535433 L 0.15748031496062992,1.669291338582677 Q 0,1.5118110236220472 0,1.3070866141732282 Q 0,1.1023622047244095 0.15748031496062992,0.9448818897637795 L 0.9448818897637795,0.15748031496062992 Q 1.1023622047244095,0 1.3070866141732282,0 Q 1.5118110236220472,0 1.669291338582677,0.15748031496062992 L 9.007874015748031,7.496062992125984 Q 9.165354330708661,7.653543307086614 9.165354330708661,7.858267716535433 Q 9.165354330708661,8.062992125984252 9.007874015748031,8.220472440944881 z M 26,15.417322834645669 L 26,16.4251968503937 Q 26,16.64566929133858 25.858267716535433,16.787401574803148 Q 25.716535433070867,16.929133858267715 25.496062992125985,16.929133858267715 L 10.377952755905511,16.929133858267715 Q 10.15748031496063,16.929133858267715 10.015748031496063,16.787401574803148 Q 9.874015748031496,16.64566929133858 9.874015748031496,16.4251968503937 L 9.874015748031496,15.417322834645669 Q 9.874015748031496,15.196850393700787 10.015748031496063,15.05511811023622 Q 10.15748031496063,14.913385826771654 10.377952755905511,14.913385826771654 L 25.496062992125985,14.913385826771654 Q 25.716535433070867,14.913385826771654 25.858267716535433,15.05511811023622 Q 26,15.196850393700787 26,15.417322834645669 z\" fill=\"#ED8B00\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">populateAdsOffer</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">script</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1160, 1546.74774374577)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87127)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 13.467041015625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatAdsResponse</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1160, 1714.74774374577)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87128)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 32.3203125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 24.375,22.75 C 25.268176470588234,22.75 26,22.018176470588234 26,21.125 L 26,1.625 C 26,0.7318235294117652 25.268176470588234,0 24.375,0 L 1.625,0 C 0.7318235294117648,0 0,0.7318235294117652 0,1.625 L 0,21.125 C 0,22.018176470588234 0.7318235294117647,22.75 1.625,22.75 z M 22.75,3.25 L 22.75,19.5 L 19.5,19.5 L 19.5,3.25 L 22.75,3.25 z M 17.875,3.25 L 17.875,19.5 L 14.624999999999998,19.5 L 14.624999999999998,3.25 L 17.875,3.25 z M 13,3.25 L 13,19.5 L 9.75,19.5 L 9.75,3.25 L 13,3.25 z M 8.125,6.5 L 3.25,10.562882352941175 L 3.25,2.4371176470588214 L 8.125,6.4999999999999964 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">adsOutbound</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">topic-outbound</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1120, 1210.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87129)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 15.64111328125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 9.007874015748031,8.220472440944881 L 1.669291338582677,15.559055118110235 Q 1.5118110236220472,15.716535433070867 1.3070866141732282,15.716535433070867 Q 1.1023622047244095,15.716535433070867 0.9448818897637795,15.559055118110235 L 0.15748031496062992,14.771653543307087 Q 0,14.614173228346456 0,14.409448818897637 Q 0,14.204724409448819 0.15748031496062992,14.047244094488189 L 6.346456692913386,7.858267716535433 L 0.15748031496062992,1.669291338582677 Q 0,1.5118110236220472 0,1.3070866141732282 Q 0,1.1023622047244095 0.15748031496062992,0.9448818897637795 L 0.9448818897637795,0.15748031496062992 Q 1.1023622047244095,0 1.3070866141732282,0 Q 1.5118110236220472,0 1.669291338582677,0.15748031496062992 L 9.007874015748031,7.496062992125984 Q 9.165354330708661,7.653543307086614 9.165354330708661,7.858267716535433 Q 9.165354330708661,8.062992125984252 9.007874015748031,8.220472440944881 z M 26,15.417322834645669 L 26,16.4251968503937 Q 26,16.64566929133858 25.858267716535433,16.787401574803148 Q 25.716535433070867,16.929133858267715 25.496062992125985,16.929133858267715 L 10.377952755905511,16.929133858267715 Q 10.15748031496063,16.929133858267715 10.015748031496063,16.787401574803148 Q 9.874015748031496,16.64566929133858 9.874015748031496,16.4251968503937 L 9.874015748031496,15.417322834645669 Q 9.874015748031496,15.196850393700787 10.015748031496063,15.05511811023622 Q 10.15748031496063,14.913385826771654 10.377952755905511,14.913385826771654 L 25.496062992125985,14.913385826771654 Q 25.716535433070867,14.913385826771654 25.858267716535433,15.05511811023622 Q 26,15.196850393700787 26,15.417322834645669 z\" fill=\"#ED8B00\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invaildatedAdsOffer</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">script</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1440, 1546.74774374577)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87130)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.35986328125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">adsJavaScriptErr</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1760, 1042.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87131)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 18.21826171875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">ads-ProfileStoreErr</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1441, 1966.0137512423862)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 245,0 L 245,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 245,0 L 245,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 231, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87132)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.406494140625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">format-request-single-stream</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1480, 1042.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87133)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.9384765625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">profileRetrived</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1440, 1210.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87134)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 25.730712890625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">csc-calculations</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 287.2463887508461, 490.37157999915416)\"><rect x=\"0\" y=\"0\" width=\"265.50722249830795\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 259.50722249830795,0 C 261.745798749154,0 264.50722249830795,2.761423749153968 264.50722249830795,5 L 264.50722249830795,34.743159998307945 C 264.50722249830795,36.981736249153975 261.745798749154,39.743159998307945 259.50722249830795,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 259.50722249830795,0 C 261.745798749154,0 264.50722249830795,2.761423749153968 264.50722249830795,5 L 264.50722249830795,34.743159998307945 C 264.50722249830795,36.981736249153975 261.745798749154,39.743159998307945 259.50722249830795,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153996, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Request US Data Enhancement</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 296.3752950008461, 1204.004583747462)\"><rect x=\"0\" y=\"0\" width=\"247.24940999830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 241.24940999830793,0 C 243.48798624915395,0 246.24940999830793,2.761423749153968 246.24940999830793,5 L 246.24940999830793,34.743159998307945 C 246.24940999830793,36.981736249153975 243.48798624915395,39.743159998307945 241.24940999830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 241.24940999830793,0 C 243.48798624915395,0 246.24940999830793,2.761423749153968 246.24940999830793,5 L 246.24940999830793,34.743159998307945 C 246.24940999830793,36.981736249153975 243.48798624915395,39.743159998307945 241.24940999830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Parse US Data Enhancement</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 267.3987325008461, 2295.270591244079)\"><rect x=\"0\" y=\"0\" width=\"145.20253499830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 139.20253499830793,0 C 141.44111124915395,0 144.20253499830793,2.761423749153968 144.20253499830793,5 L 144.20253499830793,34.743159998307945 C 144.20253499830793,36.981736249153975 141.44111124915395,39.743159998307945 139.20253499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 139.20253499830793,0 C 141.44111124915395,0 144.20253499830793,2.761423749153968 144.20253499830793,5 L 144.20253499830793,34.743159998307945 C 144.20253499830793,36.981736249153975 141.44111124915395,39.743159998307945 139.20253499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Send via SFTP</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1630, 706.7477437457701)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 219,0 L 219,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 219,0 L 219,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 205, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87135)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.330078125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 0,0 L 0,17.875 L 26,17.875 L 26,0 L 0,0 z M 9.75,11.375 L 9.75,8.125 L 16.25,8.125 L 16.25,11.375 L 9.75,11.375 z M 16.25,13 L 16.25,16.25 L 9.75,16.25 L 9.75,13 L 16.25,13 z M 16.25,3.25 L 16.25,6.5 L 9.75,6.5 L 9.75,3.25 L 16.25,3.25 z M 8.125,3.25 L 8.125,6.5 L 1.625,6.5 L 1.625,3.25 L 8.125,3.25 z M 1.625,8.125 L 8.125,8.125 L 8.125,11.375 L 1.625,11.375 L 1.625,8.125 z M 17.875,8.125 L 24.375,8.125 L 24.375,11.375 L 17.875,11.375 L 17.875,8.125 z M 17.875,6.5 L 17.875,3.25 L 24.375,3.25 L 24.375,6.5 L 17.875,6.5 z M 1.625,13 L 8.125,13 L 8.125,16.25 L 1.625,16.25 L 1.625,13 z M 17.875,16.25 L 17.875,13 L 24.375,13 L 24.375,16.25 L 17.875,16.25 z\" fill=\"#ED8B00\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">search-model-year-store</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">readonly-contextual-profile</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 2200.513751242386)\"><path d=\"M 317,0 L 317,201.9862487576138 L 88,201.9862487576138 L 88,537.9862487576138 L 0,537.9862487576138 L 0,622.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 617.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 617.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 607.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 607.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 61.86171264214786, 229.87946064953752)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 2200.513751242386)\"><path d=\"M 317,0 L 317,201.9862487576138 L 88,201.9862487576138 L 88,537.9862487576138 L 0,537.9862487576138 L 0,622.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 617.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 617.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 607.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 607.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 61.86171264214786, 229.87946064953752)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1038.4999999999998, 2200.513751242386)\"><path d=\"M 587,0 L 587,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 267.36171264214784, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1012.3617126421476, 2536.513751242386)\"><path d=\"M 0,0 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1042.4999999999998, 2536.513751242386)\"><path d=\"M 0,0 L 0,50 L 280,50 L 280,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 286.12, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 286.12, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 286.12, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 286.12, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 109.86171264214786, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 738.5, 361.61473999746204)\"><path d=\"M 0,0 L 0,420.444921875 L 80,420.444921875 L 80,837.88984375\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 86.12, 832.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 86.12, 832.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 86.12, 822.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 86.12, 822.88984375)\"></path><g transform=\"matrix(1, 0, 0, 1, 9.861712642147857, 408.1936706499603)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 738.5, 361.61473999746204)\"><path d=\"M 0,0 L 0,56.81421000042303 L 800,56.81421000042303 L 800,110.62842000084612\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 806.12, 105.62842000084612)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 806.12, 105.62842000084612)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 806.12, 95.62842000084612)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 806.12, 95.62842000084612)\"></path><g transform=\"matrix(1, 0, 0, 1, 369.86171264214784, 44.56295877538339)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 94.5, 361.61473999746204)\"><path d=\"M 640,0 L 640,56.81421000042303 L 0,56.81421000042303 L 0,110.62842000084606\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 105.62842000084606)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 105.62842000084606)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 95.62842000084606)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 95.62842000084606)\"></path><g transform=\"matrix(1, 0, 0, 1, 293.86171264214784, 44.56295877538339)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 638.5, 361.61473999746204)\"><path d=\"M 96,0 L 96,801.4495056224621 L 0,801.4495056224621 L 0,1599.8990112449242\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1594.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1594.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1584.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1584.8990112449242)\"></path><g transform=\"matrix(1, 0, 0, 1, 21.861712642147857, 789.1982543974225)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 738.5, 361.61473999746204)\"><path d=\"M 0,0 L 0,801.4495056224621 L 224,801.4495056224621 L 224,1599.8990112449242\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 230.12, 1594.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 230.12, 1594.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 230.12, 1584.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 230.12, 1584.8990112449242)\"></path><g transform=\"matrix(1, 0, 0, 1, 81.86171264214786, 789.1982543974225)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 414.5, 361.61473999746204)\"><path d=\"M 320,0 L 320,63.62842000084606 L 0,63.62842000084606 L 0,124.25684000169207\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 119.25684000169207)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 119.25684000169207)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 109.25684000169207)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 109.25684000169207)\"></path><g transform=\"matrix(1, 0, 0, 1, 133.86171264214786, 51.377168775806425)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 487.36171264214784, 2032.5137512423862)\"><path d=\"M 0,0 L 0,705.9862487576138 L 581,705.9862487576138 L 581,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 674.8794606495376)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 487.36171264214784, 2032.5137512423862)\"><path d=\"M 0,0 L 0,705.9862487576138 L 581,705.9862487576138 L 581,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 674.8794606495376)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 767.4999999999998, 2032.5137512423862)\"><path d=\"M 0,0 L 0,701.5 L 155,701.5 L 155,228 L 275,228 L 275,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 281.12, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 281.12, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 281.12, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 281.12, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 13.361712642147857, 689.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 738.5, 361.61473999746204)\"><path d=\"M 0,0 L 0,40.88526000253796 L 72,40.88526000253796 L 72,2040.885260002538 L 304,2040.885260002538 L 304,2103.899011244924\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 310.12, 2098.899011244924)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 310.12, 2098.899011244924)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 310.12, 2088.899011244924)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 310.12, 2088.899011244924)\"></path><g transform=\"matrix(1, 0, 0, 1, 41.86171264214786, 1121.1982543974225)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1012.3617126421476, 2368.513751242386)\"><path d=\"M 0,0 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 788.3617126421478, 1243.2477437457699)\"><path d=\"M 0,0 L 0,1159.2522562542301 L 224,1159.2522562542301 L 224,1222.2660074966163\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1217.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1217.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1207.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1207.2660074966163)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 711.6340087774986)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 838.3617126421478, 2032.5137512423862)\"><path d=\"M 0,0 L 0,705.9862487576138 L 230,705.9862487576138 L 230,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 499.3794606495375)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 838.3617126421478, 2032.5137512423862)\"><path d=\"M 0,0 L 0,705.9862487576138 L 230,705.9862487576138 L 230,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 499.3794606495375)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1026.3617126421477, 2032.5137512423862)\"><path d=\"M 14,0 L 14,701.5 L 0,701.5 L 0,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 17.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 22.258287357852144, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 22.258287357852144, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 22.258287357852144, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 22.258287357852144, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 602.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 2032.5137512423862)\"><path d=\"M 38.5,0 L 38.5,41.986248757613794 L 96,41.986248757613794 L 96,369.9862487576138 L 88,369.9862487576138 L 88,705.9862487576138 L 0,705.9862487576138 L 0,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 61.86171264214786, 395.6294606495375)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 2032.5137512423862)\"><path d=\"M 38.5,0 L 38.5,41.986248757613794 L 96,41.986248757613794 L 96,369.9862487576138 L 88,369.9862487576138 L 88,705.9862487576138 L 0,705.9862487576138 L 0,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 61.86171264214786, 395.6294606495375)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1038.4999999999998, 2032.5137512423862)\"><path d=\"M 305.5,0 L 305.5,701.5 L 160,701.5 L 160,228 L 0,228 L 0,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 220.61171264214786, 689.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1908.361712642148, 39.24315999830794)\"><path d=\"M 0,0 L 0,97.0000000000002\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92.0000000000002)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92.0000000000002)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82.0000000000002)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82.0000000000002)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496046)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 734.5, 207.24315999830813)\"><path d=\"M 1106,0 L 1106,56.814210000423 L 0,56.814210000423 L 0,110.62842000084598\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 105.62842000084598)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 105.62842000084598)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 95.62842000084598)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 95.62842000084598)\"></path><g transform=\"matrix(1, 0, 0, 1, 526.8617126421478, 44.562958775383365)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 2032.5, 207.24315999830813)\"><path d=\"M 0,0 L 0,49.99999999999997 L 66,49.99999999999997 L 66,96.99999999999997\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 72.12, 91.99999999999997)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 72.12, 91.99999999999997)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 72.12, 81.99999999999997)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 72.12, 81.99999999999997)\"></path><g transform=\"matrix(1, 0, 0, 1, 2.8617126421478574, 37.74874877496033)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 375.2431599983081)\"><path d=\"M 1000,0 L 1000,2363.2568400016917 L 0,2363.2568400016917 L 0,2447.532014993232\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 2442.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 2442.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 2432.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 2432.532014993232)\"></path><g transform=\"matrix(1, 0, 0, 1, 973.8617126421478, 1713.0147562715767)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 68.36171264214786, 543.2431599983081)\"><path d=\"M 0,0 L 0,2195.2568400016917 L 1000,2195.2568400016917 L 1000,2279.532014993232\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 1036.258287357852, 2274.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 1036.258287357852, 2274.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 1036.258287357852, 2264.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 1036.258287357852, 2264.532014993232)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 1629.0147562715767)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1672.5, 543.2431599983081)\"><path d=\"M 0,0 L 0,868.4495056224621 L 266,868.4495056224621 L 266,1733.8990112449244\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 272.12, 1728.8990112449244)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 272.12, 1728.8990112449244)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 272.12, 1718.8990112449244)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 272.12, 1718.8990112449244)\"></path><g transform=\"matrix(1, 0, 0, 1, 102.86171264214786, 856.1982543974225)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1538.5, 543.2431599983081)\"><path d=\"M 0,0 L 0,259.2568400016919 L 224,259.2568400016919 L 224,427.2568400016919 L 184,427.2568400016919 L 184,1099.256840001692 L 24,1099.256840001692 L 24,1418.270591244078\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 30.12, 1413.270591244078)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 30.12, 1413.270591244078)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 30.12, 1403.270591244078)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 30.12, 1403.270591244078)\"></path><g transform=\"matrix(1, 0, 0, 1, 153.86171264214786, 646.3840443969996)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1404.5, 543.2431599983081)\"><path d=\"M 0,0 L 0,81.00229187373111 L 334,81.00229187373111 L 334,159.0045837474621\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 340.12, 154.0045837474621)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 340.12, 154.0045837474621)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 340.12, 144.0045837474621)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 340.12, 144.0045837474621)\"></path><g transform=\"matrix(1, 0, 0, 1, 136.86171264214786, 68.75104064869147)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1254.5, 941.2477437457702)\"><path d=\"M 255.99999999999977,0 L 255.99999999999977,50 L 0,50 L 0,96.99999999999989\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 81.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 81.99999999999989)\"></path><g transform=\"matrix(1, 0, 0, 1, 101.86171264214786, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1514.4999999999998, 941.2477437457702)\"><path d=\"M 0,0 L 0,50 L 64,50 L 64,96.99999999999989\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 70.12, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 70.12, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 70.12, 81.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 70.12, 81.99999999999989)\"></path><g transform=\"matrix(1, 0, 0, 1, 1.8617126421478574, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1722.4999999999998, 941.2477437457702)\"><path d=\"M 0,0 L 0,50 L 136,50 L 136,96.99999999999989\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 142.12, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 142.12, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 142.12, 81.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 142.12, 81.99999999999989)\"></path><g transform=\"matrix(1, 0, 0, 1, 37.86171264214786, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1392.5, 1109.2477437457703)\"><path d=\"M 0,0 L 0,40 L 546,40 L 546,1167.8944274974622\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 552.12, 1162.8944274974622)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 552.12, 1162.8944274974622)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 552.12, 1152.8944274974622)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 552.12, 1152.8944274974622)\"></path><g transform=\"matrix(1, 0, 0, 1, 515.8617126421478, 300.19596252369155)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1124.5, 1109.2477437457703)\"><path d=\"M 0,0 L 0,40 L 230,40 L 230,197.25225625422968 L 198,197.25225625422968 L 198,365.2522562542297 L 270,365.2522562542297 L 270,533.2522562542297 L 438,533.2522562542297 L 438,852.2660074966159\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 444.12, 847.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 444.12, 847.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 444.12, 837.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 444.12, 837.2660074966159)\"></path><g transform=\"matrix(1, 0, 0, 1, 219.24246013622601, 353.00100502919)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1186.0283793088145, 1109.24774374577)\"><path d=\"M 0,0 L 0,50 L 4.6666666666667425,50 L 4.6666666666667425,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 29.304954024518885, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 38.591620691185625, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 38.591620691185625, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 38.591620691185625, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 38.591620691185625, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1303.1666666666667, 1109.24774374577)\"><path d=\"M 0,0 L 0,50 L 235.33333333333303,50 L 235.33333333333303,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 241.45333333333303, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 241.45333333333303, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 241.45333333333303, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 241.45333333333303, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 87.52837930881438, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1254.5, 1445.24774374577)\"><path d=\"M 105.99999999999977,0 L 105.99999999999977,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 26.861712642147857, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1515.3617126421477, 1445.24774374577)\"><path d=\"M 14,0 L 14,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 24.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 29.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 29.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 29.258287357852144, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 29.258287357852144, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1228.361712642148, 1613.24774374577)\"><path d=\"M 0,0 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1124.5, 1277.2477437457703)\"><path d=\"M 0,0 L 0,365.2522562542297 L 438,365.2522562542297 L 438,684.2660074966159\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 444.12, 679.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 444.12, 679.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 444.12, 669.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 444.12, 669.2660074966159)\"></path><g transform=\"matrix(1, 0, 0, 1, 164.49471639045592, 353.00100502919)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1268.361712642148, 1277.24774374577)\"><path d=\"M 14,0 L 14,701.5 L 0,701.5 L 0,228 L 239.99999999999977,228 L 239.99999999999977,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 276.25828735785194, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 276.25828735785194, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 276.25828735785194, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 276.25828735785194, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 670.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1512.3617126421477, 2032.5137512423862)\"><path d=\"M 40,0 L 40,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 11.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 16.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 16.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 16.258287357852144, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 16.258287357852144, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1421.3617126421477, 1277.24774374577)\"><path d=\"M 0,0 L 0,50 L 14,50 L 14,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 24.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 43.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 43.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 43.25828735785214, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 43.25828735785214, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1534.4999999999998, 1277.24774374577)\"><path d=\"M 94,0 L 94,701.5 L 80,701.5 L 80,228 L 0,228 L 0,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 67.86171264214786, 642.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 388.36171264214784, 529.614739997462)\"><path d=\"M 0,0 L 1.1368683772161603e-13,669.88984375\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.258287357852254, 664.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.258287357852254, 664.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.258287357852254, 654.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.258287357852254, 654.88984375)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 324.1936706499603)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 418.5, 529.614739997462)\"><path d=\"M 0,0 L 0,336.444921875 L 400,336.444921875 L 400,669.88984375\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 406.12, 664.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 406.12, 664.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 406.12, 654.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 406.12, 654.88984375)\"></path><g transform=\"matrix(1, 0, 0, 1, 169.86171264214786, 324.1936706499603)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 788.3617126421478, 1243.2477437457699)\"><path d=\"M 0,0 L 0,1159.2522562542301 L 224,1159.2522562542301 L 224,1222.2660074966163\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1217.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1217.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1207.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1207.2660074966163)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 711.6340087774986)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 334.5000000000001, 1243.2477437457699)\"><path d=\"M 80,0 L 80,525.2614237491546 L 0,525.2614237491546 L 0,1047.522847498309\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1042.522847498309)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1042.522847498309)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1032.522847498309)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1032.522847498309)\"></path><g transform=\"matrix(1, 0, 0, 1, 13.861712642147971, 513.010172524115)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 418.5000000000001, 1243.2477437457699)\"><path d=\"M 0,0 L 0,567.2522562542301 L 823.9999999999999,567.2522562542301 L 823.9999999999999,718.2660074966163\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 830.1199999999999, 713.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 830.1199999999999, 713.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 830.1199999999999, 703.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 830.1199999999999, 703.2660074966163)\"></path><g transform=\"matrix(1, 0, 0, 1, 174.49471639045592, 555.0010050291905)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1596.3617126421477, 773.2477437457702)\"><path d=\"M 16,0 L 16,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 23.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 28.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 28.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 28.258287357852144, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 28.258287357852144, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1812.3617126421477, 773.2477437457702)\"><path d=\"M 0,0 L 0,701.4999999999999 L 16,701.4999999999999 L 16,264.9999999999999\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 52.25828735785214, 259.9999999999999)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 52.25828735785214, 259.9999999999999)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 52.25828735785214, 249.9999999999999)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 52.25828735785214, 249.9999999999999)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 603.2487487749603)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g></g></g><clipPath id=\"mainClip87108\"><rect x=\"0\" y=\"0\" width=\"2232\" height=\"2901\"></rect></clipPath><clipPath id=\"CLIP87110\"><path d=\"M 0,0 L 2284,0 L 2284,2953 L 0,2953 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87111\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87112\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87113\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87114\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87115\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87116\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87117\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87118\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87119\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87120\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87121\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87122\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87123\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87124\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87125\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87126\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87127\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87128\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87129\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87130\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87131\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87132\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87133\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87134\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87135\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath></svg>","svgPreview":"<svg width=\"100px\" height=\"125px\" viewBox=\"0 0 100 125\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#mainClip87137)\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"125\" fill=\"#D2E9F4\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(0.0380053358342236, 0, 0, 0.0380053358342236, 8, 8)\"><g transform=\"matrix(1, 0, 0, 1, 1870.320607500846, 0)\"><rect x=\"0\" y=\"0\" width=\"139.35878499830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 133.35878499830793,0 C 135.59736124915395,0 138.35878499830793,2.761423749153968 138.35878499830793,5 L 138.35878499830793,34.743159998307945 C 138.35878499830793,36.981736249153975 135.59736124915395,39.743159998307945 133.35878499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 133.35878499830793,0 C 135.59736124915395,0 138.35878499830793,2.761423749153968 138.35878499830793,5 L 138.35878499830793,34.743159998307945 C 138.35878499830793,36.981736249153975 135.59736124915395,39.743159998307945 133.35878499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Ingress Steps</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 491.73857625084594, 1904.0091674949244)\"><rect x=\"0\" y=\"0\" width=\"1216.522847498308\" height=\"866.5172587216555\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 7.261423749153968, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3\" fill=\"black\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path><path d=\"M 0,3 L 6,3\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">DM Domain Calls</text></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 40.743159998307945)\"><path d=\"M 5,0 L 15,0 M 19,0 L 29,0 M 33,0 L 43,0 M 47,0 L 57,0 M 61,0 L 71,0 M 75,0 L 85,0 M 89,0 L 99,0 M 103,0 L 113,0 M 117,0 L 127,0 M 131,0 L 141,0 M 145,0 L 155,0 M 159,0 L 169,0 M 173,0 L 183,0 M 187,0 L 197,0 M 201,0 L 211,0 M 215,0 L 225,0 M 229,0 L 239,0 M 243,0 L 253,0 M 257,0 L 267,0 M 271,0 L 281,0 M 285,0 L 295,0 M 299,0 L 309,0 M 313,0 L 323,0 M 327,0 L 337,0 M 341,0 L 351,0 M 355,0 L 365,0 M 369,0 L 379,0 M 383,0 L 393,0 M 397,0 L 407,0 M 411,0 L 421,0 M 425,0 L 435,0 M 439,0 L 449,0 M 453,0 L 463,0 M 467,0 L 477,0 M 481,0 L 491,0 M 495,0 L 505,0 M 509,0 L 519,0 M 523,0 L 533,0 M 537,0 L 547,0 M 551,0 L 561,0 M 565,0 L 575,0 M 579,0 L 589,0 M 593,0 L 603,0 M 607,0 L 617,0 M 621,0 L 631,0 M 635,0 L 645,0 M 649,0 L 659,0 M 663,0 L 673,0 M 677,0 L 687,0 M 691,0 L 701,0 M 705,0 L 715,0 M 719,0 L 729,0 M 733,0 L 743,0 M 747,0 L 757,0 M 761,0 L 771,0 M 775,0 L 785,0 M 789,0 L 799,0 M 803,0 L 813,0 M 817,0 L 827,0 M 831,0 L 841,0 M 845,0 L 855,0 M 859,0 L 869,0 M 873,0 L 883,0 M 887,0 L 897,0 M 901,0 L 911,0 M 915,0 L 925,0 M 929,0 L 939,0 M 943,0 L 953,0 M 957,0 L 967,0 M 971,0 L 981,0 M 985,0 L 995,0 M 999,0 L 1009,0 M 1013,0 L 1023,0 M 1027,0 L 1037,0 M 1041,0 L 1051,0 M 1055,0 L 1065,0 M 1069,0 L 1079,0 M 1083,0 L 1093,0 M 1097,0 L 1107,0 M 1111,0 L 1121,0 M 1125,0 L 1135,0 M 1139,0 L 1149,0 M 1153,0 L 1163,0 M 1167,0 L 1177,0 M 1181,0 L 1191,0 M 1195,0 L 1205,0 M 1209,0 L 1210.522847498308,0 L 1212.2484968541337,0.46645021472477677 L 1213.8623135923754,1.6605339059327378 L 1215.0563972835832,3.2743506441743295 L 1215.522847498308,4.999999999999999 L 1215.5228485868322,5.886901230452315 M 1215.5228534961684,9.886901230449302 L 1215.522865769509,19.886901230441772 M 1215.5228706788453,23.88690123043876 L 1215.522882952186,33.88690123043123 M 1215.5228878615221,37.886901230428215 L 1215.5229001348628,47.88690123042068 M 1215.522905044199,51.88690123041767 L 1215.5229173175396,61.88690123041014 M 1215.5229222268758,65.88690123040712 L 1215.5229345002165,75.88690123039959 M 1215.5229394095527,79.88690123039657 L 1215.5229516828933,89.88690123038904 M 1215.5229565922295,93.88690123038603 L 1215.5229688655702,103.8869012303785 M 1215.5229737749064,107.88690123037549 L 1215.522986048247,117.88690123036795 M 1215.5229909575833,121.88690123036494 L 1215.523003230924,131.8869012303574 M 1215.5230081402601,135.8869012303544 L 1215.5230204136008,145.88690123034687 M 1215.523025322937,149.88690123034385 L 1215.5230375962776,159.88690123033632 M 1215.5230425056138,163.8869012303333 L 1215.5230547789545,173.88690123032578 M 1215.5230596882907,177.88690123032276 L 1215.5230719616313,187.88690123031523 M 1215.5230768709675,191.88690123031222 L 1215.5230891443082,201.8869012303047 M 1215.5230940536444,205.88690123030167 L 1215.523106326985,215.88690123029414 M 1215.5231112363213,219.88690123029113 L 1215.523123509662,229.8869012302836 M 1215.523128418998,233.88690123028059 L 1215.5231406923388,243.88690123027305 M 1215.523145601675,247.88690123027004 L 1215.5231578750156,257.88690123026254 M 1215.5231627843518,261.8869012302595 L 1215.5231750576925,271.88690123025196 M 1215.5231799670287,275.88690123024895 L 1215.5231922403693,285.8869012302414 M 1215.5231971497055,289.8869012302384 L 1215.5232094230462,299.8869012302308 M 1215.5232143323824,303.8869012302278 L 1215.523226605723,313.88690123022025 M 1215.5232315150593,317.88690123021723 L 1215.5232437884,327.8869012302097 M 1215.523248697736,331.88690123020666 L 1215.5232609710768,341.8869012301991 M 1215.523265880413,345.8869012301961 L 1215.5232781537536,355.8869012301885 M 1215.5232830630898,359.8869012301855 L 1215.5232953364305,369.88690123017795 M 1215.5233002457667,373.88690123017494 L 1215.5233125191073,383.8869012301674 M 1215.5233174284435,387.88690123016437 L 1215.5233297017842,397.8869012301568 M 1215.5233346111204,401.8869012301538 L 1215.523346884461,411.88690123014624 M 1215.5233517937972,415.8869012301432 L 1215.523364067138,425.88690123013566 M 1215.523368976474,429.88690123013265 L 1215.5233812498147,439.8869012301251 M 1215.523386159151,443.8869012301221 L 1215.5233984324916,453.8869012301145 M 1215.5234033418278,457.8869012301115 L 1215.5234156151685,467.88690123010394 M 1215.5234205245047,471.88690123010093 L 1215.5234327978453,481.8869012300934 M 1215.5234377071815,485.88690123009036 L 1215.5234499805222,495.8869012300828 M 1215.5234548898584,499.8869012300798 L 1215.523467163199,509.8869012300722 M 1215.5234720725352,513.8869012300693 L 1215.5234843458759,523.8869012300618 M 1215.523489255212,527.8869012300588 L 1215.5235015285527,537.8869012300513 M 1215.523506437889,541.8869012300484 L 1215.5235187112296,551.8869012300408 M 1215.5235236205658,555.8869012300379 L 1215.5235358939065,565.8869012300304 M 1215.5235408032427,569.8869012300274 L 1215.5235530765833,579.8869012300199 M 1215.5235579859195,583.886901230017 L 1215.5235702592602,593.8869012300095 M 1215.5235751685964,597.8869012300065 L 1215.523587441937,607.886901229999 M 1215.5235923512732,611.886901229996 L 1215.5236046246139,621.8869012299886 M 1215.52360953395,625.8869012299856 L 1215.5236218072907,635.8869012299781 M 1215.523626716627,639.8869012299751 L 1215.5236389899676,649.8869012299676 M 1215.5236438993038,653.8869012299647 L 1215.5236561726445,663.8869012299572 M 1215.5236610819807,667.8869012299542 L 1215.5236733553213,677.8869012299467 M 1215.5236782646575,681.8869012299438 L 1215.5236905379982,691.8869012299363 M 1215.5236954473344,695.8869012299333 L 1215.523707720675,705.8869012299258 M 1215.5237126300112,709.8869012299228 L 1215.5237249033519,719.8869012299153 M 1215.523729812688,723.8869012299124 L 1215.5237420860287,733.8869012299049 M 1215.523746995365,737.8869012299019 L 1215.5237592687056,747.8869012298944 M 1215.5237641780418,751.8869012298915 L 1215.5237764513824,761.886901229884 M 1215.5237813607187,765.886901229881 L 1215.5237936340593,775.8869012298735 M 1215.5237985433955,779.8869012298705 L 1215.5238108167362,789.886901229863 M 1215.5238157260724,793.8869012298601 L 1215.523827999413,803.8869012298526 M 1215.5238329087492,807.8869012298496 L 1215.5238451820899,817.8869012298421 M 1215.5238474983116,819.7740987233489 M 1215.0573972835869,821.4997480791744 M 1214.863955552923,821.7611866241594 L 1213.863313592379,823.1135648174161 L 1212.2494968541373,824.3076485086242 L 1210.5238474983116,824.7740987233489 L 1206.0012962630587,824.7740987233489 M 1202.0012962630587,824.7740987233489 L 1192.0012962630587,824.7740987233489 M 1188.0012962630587,824.7740987233489 L 1178.0012962630587,824.7740987233489 M 1174.0012962630587,824.7740987233489 L 1164.0012962630587,824.7740987233489 M 1160.0012962630587,824.7740987233489 L 1150.0012962630587,824.7740987233489 M 1146.0012962630587,824.7740987233489 L 1136.0012962630587,824.7740987233489 M 1132.0012962630587,824.7740987233489 L 1122.0012962630587,824.7740987233489 M 1118.0012962630587,824.7740987233489 L 1108.0012962630587,824.7740987233489 M 1104.0012962630587,824.7740987233489 L 1094.0012962630587,824.7740987233489 M 1090.0012962630587,824.7740987233489 L 1080.0012962630587,824.7740987233489 M 1076.0012962630587,824.7740987233489 L 1066.0012962630587,824.7740987233489 M 1062.0012962630587,824.7740987233489 L 1052.0012962630587,824.7740987233489 M 1048.0012962630587,824.7740987233489 L 1038.0012962630587,824.7740987233489 M 1034.0012962630587,824.7740987233489 L 1024.0012962630587,824.7740987233489 M 1020.0012962630587,824.7740987233489 L 1010.0012962630587,824.7740987233489 M 1006.0012962630587,824.7740987233489 L 996.0012962630587,824.7740987233489 M 992.0012962630587,824.7740987233489 L 982.0012962630587,824.7740987233489 M 978.0012962630587,824.7740987233489 L 968.0012962630587,824.7740987233489 M 964.0012962630587,824.7740987233489 L 954.0012962630587,824.7740987233489 M 950.0012962630587,824.7740987233489 L 940.0012962630587,824.7740987233489 M 936.0012962630587,824.7740987233489 L 926.0012962630587,824.7740987233489 M 922.0012962630587,824.7740987233489 L 912.0012962630587,824.7740987233489 M 908.0012962630587,824.7740987233489 L 898.0012962630587,824.7740987233489 M 894.0012962630587,824.7740987233489 L 884.0012962630587,824.7740987233489 M 880.0012962630587,824.7740987233489 L 870.0012962630587,824.7740987233489 M 866.0012962630587,824.7740987233489 L 856.0012962630587,824.7740987233489 M 852.0012962630587,824.7740987233489 L 842.0012962630587,824.7740987233489 M 838.0012962630587,824.7740987233489 L 828.0012962630587,824.7740987233489 M 824.0012962630587,824.7740987233489 L 814.0012962630587,824.7740987233489 M 810.0012962630587,824.7740987233489 L 800.0012962630587,824.7740987233489 M 796.0012962630587,824.7740987233489 L 786.0012962630587,824.7740987233489 M 782.0012962630587,824.7740987233489 L 772.0012962630587,824.7740987233489 M 768.0012962630587,824.7740987233489 L 758.0012962630587,824.7740987233489 M 754.0012962630587,824.7740987233489 L 744.0012962630587,824.7740987233489 M 740.0012962630587,824.7740987233489 L 730.0012962630587,824.7740987233489 M 726.0012962630587,824.7740987233489 L 716.0012962630587,824.7740987233489 M 712.0012962630587,824.7740987233489 L 702.0012962630587,824.7740987233489 M 698.0012962630587,824.7740987233489 L 688.0012962630587,824.7740987233489 M 684.0012962630587,824.7740987233489 L 674.0012962630587,824.7740987233489 M 670.0012962630587,824.7740987233489 L 660.0012962630587,824.7740987233489 M 656.0012962630587,824.7740987233489 L 646.0012962630587,824.7740987233489 M 642.0012962630587,824.7740987233489 L 632.0012962630587,824.7740987233489 M 628.0012962630587,824.7740987233489 L 618.0012962630587,824.7740987233489 M 614.0012962630587,824.7740987233489 L 604.0012962630587,824.7740987233489 M 600.0012962630587,824.7740987233489 L 590.0012962630587,824.7740987233489 M 586.0012962630587,824.7740987233489 L 576.0012962630587,824.7740987233489 M 572.0012962630587,824.7740987233489 L 562.0012962630587,824.7740987233489 M 558.0012962630587,824.7740987233489 L 548.0012962630587,824.7740987233489 M 544.0012962630587,824.7740987233489 L 534.0012962630587,824.7740987233489 M 530.0012962630587,824.7740987233489 L 520.0012962630587,824.7740987233489 M 516.0012962630587,824.7740987233489 L 506.00129626305875,824.7740987233489 M 502.00129626305875,824.7740987233489 L 492.00129626305875,824.7740987233489 M 488.00129626305875,824.7740987233489 L 478.00129626305875,824.7740987233489 M 474.00129626305875,824.7740987233489 L 464.00129626305875,824.7740987233489 M 460.00129626305875,824.7740987233489 L 450.00129626305875,824.7740987233489 M 446.00129626305875,824.7740987233489 L 436.00129626305875,824.7740987233489 M 432.00129626305875,824.7740987233489 L 422.00129626305875,824.7740987233489 M 418.00129626305875,824.7740987233489 L 408.00129626305875,824.7740987233489 M 404.00129626305875,824.7740987233489 L 394.00129626305875,824.7740987233489 M 390.00129626305875,824.7740987233489 L 380.00129626305875,824.7740987233489 M 376.00129626305875,824.7740987233489 L 366.00129626305875,824.7740987233489 M 362.00129626305875,824.7740987233489 L 352.00129626305875,824.7740987233489 M 348.00129626305875,824.7740987233489 L 338.00129626305875,824.7740987233489 M 334.00129626305875,824.7740987233489 L 324.00129626305875,824.7740987233489 M 320.00129626305875,824.7740987233489 L 310.00129626305875,824.7740987233489 M 306.00129626305875,824.7740987233489 L 296.00129626305875,824.7740987233489 M 292.00129626305875,824.7740987233489 L 282.00129626305875,824.7740987233489 M 278.00129626305875,824.7740987233489 L 268.00129626305875,824.7740987233489 M 264.00129626305875,824.7740987233489 L 254.00129626305875,824.7740987233489 M 250.00129626305875,824.7740987233489 L 240.00129626305875,824.7740987233489 M 236.00129626305875,824.7740987233489 L 226.00129626305875,824.7740987233489 M 222.00129626305875,824.7740987233489 L 212.00129626305875,824.7740987233489 M 208.00129626305875,824.7740987233489 L 198.00129626305875,824.7740987233489 M 194.00129626305875,824.7740987233489 L 184.00129626305875,824.7740987233489 M 180.00129626305875,824.7740987233489 L 170.00129626305875,824.7740987233489 M 166.00129626305875,824.7740987233489 L 156.00129626305875,824.7740987233489 M 152.00129626305875,824.7740987233489 L 142.00129626305875,824.7740987233489 M 138.00129626305875,824.7740987233489 L 128.00129626305875,824.7740987233489 M 124.00129626305875,824.7740987233489 L 114.00129626305875,824.7740987233489 M 110.00129626305875,824.7740987233489 L 100.00129626305875,824.7740987233489 M 96.00129626305875,824.7740987233489 L 86.00129626305875,824.7740987233489 M 82.00129626305875,824.7740987233489 L 72.00129626305875,824.7740987233489 M 68.00129626305875,824.7740987233489 L 58.00129626305875,824.7740987233489 M 54.00129626305875,824.7740987233489 L 44.00129626305875,824.7740987233489 M 40.00129626305875,824.7740987233489 L 30.001296263058748,824.7740987233489 M 26.001296263058748,824.7740987233489 L 16.001296263058748,824.7740987233489 M 12.001296263058748,824.7740987233489 L 5.001000000003614,824.7740987233489 L 3.2753506441779443,824.3076485086242 L 2.300954009947051,823.58667994873 M 1.6615339059363525,823.1135648174161 M 0.46745021472839166,821.4997480791744 M 0.15509719100464003,820.3441868270543 L 0.001000000003614887,819.7740987233489 L 0.0010115485450823223,810.3646462576501 M 0.0010164578813097068,806.364646257653 L 0.0010287312218781677,796.3646462576605 M 0.0010336405581055522,792.3646462576635 L 0.0010459138986740131,782.364646257671 M 0.0010508232349013976,778.3646462576739 L 0.0010630965754698585,768.3646462576814 M 0.001068005911697243,764.3646462576844 L 0.001080279252265704,754.3646462576919 M 0.0010851885884930884,750.3646462576949 L 0.0010974619290615494,740.3646462577024 M 0.0011023712652889338,736.3646462577053 L 0.0011146446058573948,726.3646462577128 M 0.0011195539420847792,722.3646462577158 L 0.0011318272826532402,712.3646462577233 M 0.0011367366188806247,708.3646462577262 L 0.0011490099594490856,698.3646462577337 M 0.00115391929567647,694.3646462577367 L 0.001166192636244931,684.3646462577442 M 0.0011711019724723155,680.3646462577472 L 0.0011833753130407764,670.3646462577547 M 0.0011882846492681609,666.3646462577576 L 0.0012005579898366218,656.3646462577651 M 0.0012054673260640063,652.3646462577681 L 0.0012177406666324673,642.3646462577756 M 0.0012226500028598517,638.3646462577785 L 0.0012349233434283127,628.364646257786 M 0.0012398326796556971,624.364646257789 L 0.001252106020224158,614.3646462577965 M 0.0012570153564515425,610.3646462577994 L 0.0012692886970200035,600.364646257807 M 0.001274198033247388,596.3646462578099 L 0.001286471373815849,586.3646462578174 M 0.0012913807100432334,582.3646462578204 L 0.0013036540506116943,572.3646462578279 M 0.0013085633868390788,568.3646462578308 L 0.0013208367274075397,558.3646462578383 M 0.0013257460636349242,554.3646462578413 L 0.0013380194042033851,544.3646462578488 M 0.0013429287404307696,540.3646462578517 L 0.0013552020809992306,530.3646462578592 M 0.001360111417226615,526.3646462578622 L 0.001372384757795076,516.3646462578697 M 0.0013772940940224604,512.3646462578727 L 0.0013895674345909214,502.36464625788017 M 0.0013944767708183058,498.3646462578832 L 0.0014067501113867668,488.36464625789074 M 0.0014116594476141513,484.36464625789375 L 0.0014239327881826122,474.3646462579013 M 0.0014288421244099967,470.3646462579043 L 0.0014411154649784576,460.3646462579119 M 0.001446024801205842,456.3646462579149 L 0.001458298141774303,446.36464625792246 M 0.0014632074780016875,442.3646462579255 L 0.0014754808185701484,432.36464625793303 M 0.001480390154797533,428.36464625793604 L 0.0014926634953659939,418.3646462579436 M 0.0014975728315933783,414.3646462579466 L 0.0015098461721618393,404.3646462579542 M 0.0015147555083892237,400.3646462579572 L 0.0015270288489576847,390.36464625796475 M 0.0015319381851850692,386.36464625796776 L 0.00154421152575353,376.3646462579753 M 0.0015491208619809146,372.36464625797834 L 0.0015613942025493755,362.3646462579859 M 0.00156630353877676,358.3646462579889 L 0.001578576879345221,348.36464625799647 M 0.0015834862155726054,344.3646462579995 L 0.0015957595561410663,334.36464625800704 M 0.0016006688923684508,330.36464625801005 L 0.0016129422329369118,320.3646462580176 M 0.0016178515691642962,316.3646462580206 L 0.0016301249097327572,306.3646462580282 M 0.0016350342459601416,302.3646462580312 L 0.0016473075865286026,292.36464625803876 M 0.001652216922755987,288.3646462580418 L 0.001664490263324448,278.36464625804933 M 0.0016693995995518325,274.36464625805235 L 0.0016816729401202934,264.3646462580599 M 0.0016865822763476779,260.3646462580629 L 0.0016988556169161388,250.36464625807045 M 0.0017037649531435233,246.36464625807346 L 0.0017160382937119842,236.364646258081 M 0.0017209476299393687,232.364646258084 L 0.0017332209705078296,222.36464625809154 M 0.001738130306735214,218.36464625809455 L 0.001750403647303675,208.36464625810208 M 0.0017553129835310595,204.3646462581051 L 0.0017675863240995205,194.36464625811263 M 0.001772495660326905,190.36464625811564 L 0.0017847690008953659,180.36464625812317 M 0.0017896783371227503,176.36464625812619 L 0.0018019516776912113,166.36464625813372 M 0.0018068610139185958,162.36464625813673 L 0.0018191343544870567,152.36464625814426 M 0.0018240436907144412,148.36464625814727 L 0.0018363170312829021,138.3646462581548 M 0.0018412263675102866,134.36464625815782 L 0.0018534997080787475,124.36464625816535 M 0.001858409044306132,120.36464625816836 L 0.001870682384874593,110.3646462581759 M 0.0018755917211019774,106.36464625817891 L 0.0018878650616704384,96.36464625818644 M 0.0018927743978978228,92.36464625818945 L 0.0019050477384662838,82.36464625819698 M 0.0019099570746936682,78.3646462582 L 0.0019222304152621292,68.36464625820753 M 0.0019271397514895137,64.36464625821054 L 0.0019394130920579746,54.36464625821807 M 0.001944322428285359,50.364646258221086 L 0.0019565957688538202,40.36464625822862 M 0.0019615051050812047,36.36464625823163 L 0.001973778445649666,26.364646258239162 M 0.0019786877818770503,22.364646258242175 L 0.0019909611224455115,12.364646258249707 M 0.001995870458672896,8.36464625825272 L 0.0020000000036148927,4.999999999999919 L 0.46845021472839166,3.274350644174249 L 1.6625339059363529,1.6605339059326572 L 3.2763506441779446,0.46645021472469606 L 4.080184751933677,0.24917050439422783 M 5.002000000003615,-8.071321389024888e-14 M 5,0 L 15,0 M 19,0 L 29,0 M 33,0 L 43,0 M 47,0 L 57,0 M 61,0 L 71,0 M 75,0 L 85,0 M 89,0 L 99,0 M 103,0 L 113,0 M 117,0 L 127,0 M 131,0 L 141,0 M 145,0 L 155,0 M 159,0 L 169,0 M 173,0 L 183,0 M 187,0 L 197,0 M 201,0 L 211,0 M 215,0 L 225,0 M 229,0 L 239,0 M 243,0 L 253,0 M 257,0 L 267,0 M 271,0 L 281,0 M 285,0 L 295,0 M 299,0 L 309,0 M 313,0 L 323,0 M 327,0 L 337,0 M 341,0 L 351,0 M 355,0 L 365,0 M 369,0 L 379,0 M 383,0 L 393,0 M 397,0 L 407,0 M 411,0 L 421,0 M 425,0 L 435,0 M 439,0 L 449,0 M 453,0 L 463,0 M 467,0 L 477,0 M 481,0 L 491,0 M 495,0 L 505,0 M 509,0 L 519,0 M 523,0 L 533,0 M 537,0 L 547,0 M 551,0 L 561,0 M 565,0 L 575,0 M 579,0 L 589,0 M 593,0 L 603,0 M 607,0 L 617,0 M 621,0 L 631,0 M 635,0 L 645,0 M 649,0 L 659,0 M 663,0 L 673,0 M 677,0 L 687,0 M 691,0 L 701,0 M 705,0 L 715,0 M 719,0 L 729,0 M 733,0 L 743,0 M 747,0 L 757,0 M 761,0 L 771,0 M 775,0 L 785,0 M 789,0 L 799,0 M 803,0 L 813,0 M 817,0 L 827,0 M 831,0 L 841,0 M 845,0 L 855,0 M 859,0 L 869,0 M 873,0 L 883,0 M 887,0 L 897,0 M 901,0 L 911,0 M 915,0 L 925,0 M 929,0 L 939,0 M 943,0 L 953,0 M 957,0 L 967,0 M 971,0 L 981,0 M 985,0 L 995,0 M 999,0 L 1009,0 M 1013,0 L 1023,0 M 1027,0 L 1037,0 M 1041,0 L 1051,0 M 1055,0 L 1065,0 M 1069,0 L 1079,0 M 1083,0 L 1093,0 M 1097,0 L 1107,0 M 1111,0 L 1121,0 M 1125,0 L 1135,0 M 1139,0 L 1149,0 M 1153,0 L 1163,0 M 1167,0 L 1177,0 M 1181,0 L 1191,0 M 1195,0 L 1205,0 M 1209,0 L 1210.522847498308,0 L 1212.2484968541337,0.46645021472477677 L 1213.8623135923754,1.6605339059327378 L 1215.0563972835832,3.2743506441743295 L 1215.522847498308,4.999999999999999 L 1215.5228485868322,5.886901230452315 M 1215.5228534961684,9.886901230449302 L 1215.522865769509,19.886901230441772 M 1215.5228706788453,23.88690123043876 L 1215.522882952186,33.88690123043123 M 1215.5228878615221,37.886901230428215 L 1215.5229001348628,47.88690123042068 M 1215.522905044199,51.88690123041767 L 1215.5229173175396,61.88690123041014 M 1215.5229222268758,65.88690123040712 L 1215.5229345002165,75.88690123039959 M 1215.5229394095527,79.88690123039657 L 1215.5229516828933,89.88690123038904 M 1215.5229565922295,93.88690123038603 L 1215.5229688655702,103.8869012303785 M 1215.5229737749064,107.88690123037549 L 1215.522986048247,117.88690123036795 M 1215.5229909575833,121.88690123036494 L 1215.523003230924,131.8869012303574 M 1215.5230081402601,135.8869012303544 L 1215.5230204136008,145.88690123034687 M 1215.523025322937,149.88690123034385 L 1215.5230375962776,159.88690123033632 M 1215.5230425056138,163.8869012303333 L 1215.5230547789545,173.88690123032578 M 1215.5230596882907,177.88690123032276 L 1215.5230719616313,187.88690123031523 M 1215.5230768709675,191.88690123031222 L 1215.5230891443082,201.8869012303047 M 1215.5230940536444,205.88690123030167 L 1215.523106326985,215.88690123029414 M 1215.5231112363213,219.88690123029113 L 1215.523123509662,229.8869012302836 M 1215.523128418998,233.88690123028059 L 1215.5231406923388,243.88690123027305 M 1215.523145601675,247.88690123027004 L 1215.5231578750156,257.88690123026254 M 1215.5231627843518,261.8869012302595 L 1215.5231750576925,271.88690123025196 M 1215.5231799670287,275.88690123024895 L 1215.5231922403693,285.8869012302414 M 1215.5231971497055,289.8869012302384 L 1215.5232094230462,299.8869012302308 M 1215.5232143323824,303.8869012302278 L 1215.523226605723,313.88690123022025 M 1215.5232315150593,317.88690123021723 L 1215.5232437884,327.8869012302097 M 1215.523248697736,331.88690123020666 L 1215.5232609710768,341.8869012301991 M 1215.523265880413,345.8869012301961 L 1215.5232781537536,355.8869012301885 M 1215.5232830630898,359.8869012301855 L 1215.5232953364305,369.88690123017795 M 1215.5233002457667,373.88690123017494 L 1215.5233125191073,383.8869012301674 M 1215.5233174284435,387.88690123016437 L 1215.5233297017842,397.8869012301568 M 1215.5233346111204,401.8869012301538 L 1215.523346884461,411.88690123014624 M 1215.5233517937972,415.8869012301432 L 1215.523364067138,425.88690123013566 M 1215.523368976474,429.88690123013265 L 1215.5233812498147,439.8869012301251 M 1215.523386159151,443.8869012301221 L 1215.5233984324916,453.8869012301145 M 1215.5234033418278,457.8869012301115 L 1215.5234156151685,467.88690123010394 M 1215.5234205245047,471.88690123010093 L 1215.5234327978453,481.8869012300934 M 1215.5234377071815,485.88690123009036 L 1215.5234499805222,495.8869012300828 M 1215.5234548898584,499.8869012300798 L 1215.523467163199,509.8869012300722 M 1215.5234720725352,513.8869012300693 L 1215.5234843458759,523.8869012300618 M 1215.523489255212,527.8869012300588 L 1215.5235015285527,537.8869012300513 M 1215.523506437889,541.8869012300484 L 1215.5235187112296,551.8869012300408 M 1215.5235236205658,555.8869012300379 L 1215.5235358939065,565.8869012300304 M 1215.5235408032427,569.8869012300274 L 1215.5235530765833,579.8869012300199 M 1215.5235579859195,583.886901230017 L 1215.5235702592602,593.8869012300095 M 1215.5235751685964,597.8869012300065 L 1215.523587441937,607.886901229999 M 1215.5235923512732,611.886901229996 L 1215.5236046246139,621.8869012299886 M 1215.52360953395,625.8869012299856 L 1215.5236218072907,635.8869012299781 M 1215.523626716627,639.8869012299751 L 1215.5236389899676,649.8869012299676 M 1215.5236438993038,653.8869012299647 L 1215.5236561726445,663.8869012299572 M 1215.5236610819807,667.8869012299542 L 1215.5236733553213,677.8869012299467 M 1215.5236782646575,681.8869012299438 L 1215.5236905379982,691.8869012299363 M 1215.5236954473344,695.8869012299333 L 1215.523707720675,705.8869012299258 M 1215.5237126300112,709.8869012299228 L 1215.5237249033519,719.8869012299153 M 1215.523729812688,723.8869012299124 L 1215.5237420860287,733.8869012299049 M 1215.523746995365,737.8869012299019 L 1215.5237592687056,747.8869012298944 M 1215.5237641780418,751.8869012298915 L 1215.5237764513824,761.886901229884 M 1215.5237813607187,765.886901229881 L 1215.5237936340593,775.8869012298735 M 1215.5237985433955,779.8869012298705 L 1215.5238108167362,789.886901229863 M 1215.5238157260724,793.8869012298601 L 1215.523827999413,803.8869012298526 M 1215.5238329087492,807.8869012298496 L 1215.5238451820899,817.8869012298421 M 1215.5238474983116,819.7740987233489 M 1215.0573972835869,821.4997480791744 M 1214.863955552923,821.7611866241594 L 1213.863313592379,823.1135648174161 L 1212.2494968541373,824.3076485086242 L 1210.5238474983116,824.7740987233489 L 1206.0012962630587,824.7740987233489 M 1202.0012962630587,824.7740987233489 L 1192.0012962630587,824.7740987233489 M 1188.0012962630587,824.7740987233489 L 1178.0012962630587,824.7740987233489 M 1174.0012962630587,824.7740987233489 L 1164.0012962630587,824.7740987233489 M 1160.0012962630587,824.7740987233489 L 1150.0012962630587,824.7740987233489 M 1146.0012962630587,824.7740987233489 L 1136.0012962630587,824.7740987233489 M 1132.0012962630587,824.7740987233489 L 1122.0012962630587,824.7740987233489 M 1118.0012962630587,824.7740987233489 L 1108.0012962630587,824.7740987233489 M 1104.0012962630587,824.7740987233489 L 1094.0012962630587,824.7740987233489 M 1090.0012962630587,824.7740987233489 L 1080.0012962630587,824.7740987233489 M 1076.0012962630587,824.7740987233489 L 1066.0012962630587,824.7740987233489 M 1062.0012962630587,824.7740987233489 L 1052.0012962630587,824.7740987233489 M 1048.0012962630587,824.7740987233489 L 1038.0012962630587,824.7740987233489 M 1034.0012962630587,824.7740987233489 L 1024.0012962630587,824.7740987233489 M 1020.0012962630587,824.7740987233489 L 1010.0012962630587,824.7740987233489 M 1006.0012962630587,824.7740987233489 L 996.0012962630587,824.7740987233489 M 992.0012962630587,824.7740987233489 L 982.0012962630587,824.7740987233489 M 978.0012962630587,824.7740987233489 L 968.0012962630587,824.7740987233489 M 964.0012962630587,824.7740987233489 L 954.0012962630587,824.7740987233489 M 950.0012962630587,824.7740987233489 L 940.0012962630587,824.7740987233489 M 936.0012962630587,824.7740987233489 L 926.0012962630587,824.7740987233489 M 922.0012962630587,824.7740987233489 L 912.0012962630587,824.7740987233489 M 908.0012962630587,824.7740987233489 L 898.0012962630587,824.7740987233489 M 894.0012962630587,824.7740987233489 L 884.0012962630587,824.7740987233489 M 880.0012962630587,824.7740987233489 L 870.0012962630587,824.7740987233489 M 866.0012962630587,824.7740987233489 L 856.0012962630587,824.7740987233489 M 852.0012962630587,824.7740987233489 L 842.0012962630587,824.7740987233489 M 838.0012962630587,824.7740987233489 L 828.0012962630587,824.7740987233489 M 824.0012962630587,824.7740987233489 L 814.0012962630587,824.7740987233489 M 810.0012962630587,824.7740987233489 L 800.0012962630587,824.7740987233489 M 796.0012962630587,824.7740987233489 L 786.0012962630587,824.7740987233489 M 782.0012962630587,824.7740987233489 L 772.0012962630587,824.7740987233489 M 768.0012962630587,824.7740987233489 L 758.0012962630587,824.7740987233489 M 754.0012962630587,824.7740987233489 L 744.0012962630587,824.7740987233489 M 740.0012962630587,824.7740987233489 L 730.0012962630587,824.7740987233489 M 726.0012962630587,824.7740987233489 L 716.0012962630587,824.7740987233489 M 712.0012962630587,824.7740987233489 L 702.0012962630587,824.7740987233489 M 698.0012962630587,824.7740987233489 L 688.0012962630587,824.7740987233489 M 684.0012962630587,824.7740987233489 L 674.0012962630587,824.7740987233489 M 670.0012962630587,824.7740987233489 L 660.0012962630587,824.7740987233489 M 656.0012962630587,824.7740987233489 L 646.0012962630587,824.7740987233489 M 642.0012962630587,824.7740987233489 L 632.0012962630587,824.7740987233489 M 628.0012962630587,824.7740987233489 L 618.0012962630587,824.7740987233489 M 614.0012962630587,824.7740987233489 L 604.0012962630587,824.7740987233489 M 600.0012962630587,824.7740987233489 L 590.0012962630587,824.7740987233489 M 586.0012962630587,824.7740987233489 L 576.0012962630587,824.7740987233489 M 572.0012962630587,824.7740987233489 L 562.0012962630587,824.7740987233489 M 558.0012962630587,824.7740987233489 L 548.0012962630587,824.7740987233489 M 544.0012962630587,824.7740987233489 L 534.0012962630587,824.7740987233489 M 530.0012962630587,824.7740987233489 L 520.0012962630587,824.7740987233489 M 516.0012962630587,824.7740987233489 L 506.00129626305875,824.7740987233489 M 502.00129626305875,824.7740987233489 L 492.00129626305875,824.7740987233489 M 488.00129626305875,824.7740987233489 L 478.00129626305875,824.7740987233489 M 474.00129626305875,824.7740987233489 L 464.00129626305875,824.7740987233489 M 460.00129626305875,824.7740987233489 L 450.00129626305875,824.7740987233489 M 446.00129626305875,824.7740987233489 L 436.00129626305875,824.7740987233489 M 432.00129626305875,824.7740987233489 L 422.00129626305875,824.7740987233489 M 418.00129626305875,824.7740987233489 L 408.00129626305875,824.7740987233489 M 404.00129626305875,824.7740987233489 L 394.00129626305875,824.7740987233489 M 390.00129626305875,824.7740987233489 L 380.00129626305875,824.7740987233489 M 376.00129626305875,824.7740987233489 L 366.00129626305875,824.7740987233489 M 362.00129626305875,824.7740987233489 L 352.00129626305875,824.7740987233489 M 348.00129626305875,824.7740987233489 L 338.00129626305875,824.7740987233489 M 334.00129626305875,824.7740987233489 L 324.00129626305875,824.7740987233489 M 320.00129626305875,824.7740987233489 L 310.00129626305875,824.7740987233489 M 306.00129626305875,824.7740987233489 L 296.00129626305875,824.7740987233489 M 292.00129626305875,824.7740987233489 L 282.00129626305875,824.7740987233489 M 278.00129626305875,824.7740987233489 L 268.00129626305875,824.7740987233489 M 264.00129626305875,824.7740987233489 L 254.00129626305875,824.7740987233489 M 250.00129626305875,824.7740987233489 L 240.00129626305875,824.7740987233489 M 236.00129626305875,824.7740987233489 L 226.00129626305875,824.7740987233489 M 222.00129626305875,824.7740987233489 L 212.00129626305875,824.7740987233489 M 208.00129626305875,824.7740987233489 L 198.00129626305875,824.7740987233489 M 194.00129626305875,824.7740987233489 L 184.00129626305875,824.7740987233489 M 180.00129626305875,824.7740987233489 L 170.00129626305875,824.7740987233489 M 166.00129626305875,824.7740987233489 L 156.00129626305875,824.7740987233489 M 152.00129626305875,824.7740987233489 L 142.00129626305875,824.7740987233489 M 138.00129626305875,824.7740987233489 L 128.00129626305875,824.7740987233489 M 124.00129626305875,824.7740987233489 L 114.00129626305875,824.7740987233489 M 110.00129626305875,824.7740987233489 L 100.00129626305875,824.7740987233489 M 96.00129626305875,824.7740987233489 L 86.00129626305875,824.7740987233489 M 82.00129626305875,824.7740987233489 L 72.00129626305875,824.7740987233489 M 68.00129626305875,824.7740987233489 L 58.00129626305875,824.7740987233489 M 54.00129626305875,824.7740987233489 L 44.00129626305875,824.7740987233489 M 40.00129626305875,824.7740987233489 L 30.001296263058748,824.7740987233489 M 26.001296263058748,824.7740987233489 L 16.001296263058748,824.7740987233489 M 12.001296263058748,824.7740987233489 L 5.001000000003614,824.7740987233489 L 3.2753506441779443,824.3076485086242 L 2.300954009947051,823.58667994873 M 1.6615339059363525,823.1135648174161 M 0.46745021472839166,821.4997480791744 M 0.15509719100464003,820.3441868270543 L 0.001000000003614887,819.7740987233489 L 0.0010115485450823223,810.3646462576501 M 0.0010164578813097068,806.364646257653 L 0.0010287312218781677,796.3646462576605 M 0.0010336405581055522,792.3646462576635 L 0.0010459138986740131,782.364646257671 M 0.0010508232349013976,778.3646462576739 L 0.0010630965754698585,768.3646462576814 M 0.001068005911697243,764.3646462576844 L 0.001080279252265704,754.3646462576919 M 0.0010851885884930884,750.3646462576949 L 0.0010974619290615494,740.3646462577024 M 0.0011023712652889338,736.3646462577053 L 0.0011146446058573948,726.3646462577128 M 0.0011195539420847792,722.3646462577158 L 0.0011318272826532402,712.3646462577233 M 0.0011367366188806247,708.3646462577262 L 0.0011490099594490856,698.3646462577337 M 0.00115391929567647,694.3646462577367 L 0.001166192636244931,684.3646462577442 M 0.0011711019724723155,680.3646462577472 L 0.0011833753130407764,670.3646462577547 M 0.0011882846492681609,666.3646462577576 L 0.0012005579898366218,656.3646462577651 M 0.0012054673260640063,652.3646462577681 L 0.0012177406666324673,642.3646462577756 M 0.0012226500028598517,638.3646462577785 L 0.0012349233434283127,628.364646257786 M 0.0012398326796556971,624.364646257789 L 0.001252106020224158,614.3646462577965 M 0.0012570153564515425,610.3646462577994 L 0.0012692886970200035,600.364646257807 M 0.001274198033247388,596.3646462578099 L 0.001286471373815849,586.3646462578174 M 0.0012913807100432334,582.3646462578204 L 0.0013036540506116943,572.3646462578279 M 0.0013085633868390788,568.3646462578308 L 0.0013208367274075397,558.3646462578383 M 0.0013257460636349242,554.3646462578413 L 0.0013380194042033851,544.3646462578488 M 0.0013429287404307696,540.3646462578517 L 0.0013552020809992306,530.3646462578592 M 0.001360111417226615,526.3646462578622 L 0.001372384757795076,516.3646462578697 M 0.0013772940940224604,512.3646462578727 L 0.0013895674345909214,502.36464625788017 M 0.0013944767708183058,498.3646462578832 L 0.0014067501113867668,488.36464625789074 M 0.0014116594476141513,484.36464625789375 L 0.0014239327881826122,474.3646462579013 M 0.0014288421244099967,470.3646462579043 L 0.0014411154649784576,460.3646462579119 M 0.001446024801205842,456.3646462579149 L 0.001458298141774303,446.36464625792246 M 0.0014632074780016875,442.3646462579255 L 0.0014754808185701484,432.36464625793303 M 0.001480390154797533,428.36464625793604 L 0.0014926634953659939,418.3646462579436 M 0.0014975728315933783,414.3646462579466 L 0.0015098461721618393,404.3646462579542 M 0.0015147555083892237,400.3646462579572 L 0.0015270288489576847,390.36464625796475 M 0.0015319381851850692,386.36464625796776 L 0.00154421152575353,376.3646462579753 M 0.0015491208619809146,372.36464625797834 L 0.0015613942025493755,362.3646462579859 M 0.00156630353877676,358.3646462579889 L 0.001578576879345221,348.36464625799647 M 0.0015834862155726054,344.3646462579995 L 0.0015957595561410663,334.36464625800704 M 0.0016006688923684508,330.36464625801005 L 0.0016129422329369118,320.3646462580176 M 0.0016178515691642962,316.3646462580206 L 0.0016301249097327572,306.3646462580282 M 0.0016350342459601416,302.3646462580312 L 0.0016473075865286026,292.36464625803876 M 0.001652216922755987,288.3646462580418 L 0.001664490263324448,278.36464625804933 M 0.0016693995995518325,274.36464625805235 L 0.0016816729401202934,264.3646462580599 M 0.0016865822763476779,260.3646462580629 L 0.0016988556169161388,250.36464625807045 M 0.0017037649531435233,246.36464625807346 L 0.0017160382937119842,236.364646258081 M 0.0017209476299393687,232.364646258084 L 0.0017332209705078296,222.36464625809154 M 0.001738130306735214,218.36464625809455 L 0.001750403647303675,208.36464625810208 M 0.0017553129835310595,204.3646462581051 L 0.0017675863240995205,194.36464625811263 M 0.001772495660326905,190.36464625811564 L 0.0017847690008953659,180.36464625812317 M 0.0017896783371227503,176.36464625812619 L 0.0018019516776912113,166.36464625813372 M 0.0018068610139185958,162.36464625813673 L 0.0018191343544870567,152.36464625814426 M 0.0018240436907144412,148.36464625814727 L 0.0018363170312829021,138.3646462581548 M 0.0018412263675102866,134.36464625815782 L 0.0018534997080787475,124.36464625816535 M 0.001858409044306132,120.36464625816836 L 0.001870682384874593,110.3646462581759 M 0.0018755917211019774,106.36464625817891 L 0.0018878650616704384,96.36464625818644 M 0.0018927743978978228,92.36464625818945 L 0.0019050477384662838,82.36464625819698 M 0.0019099570746936682,78.3646462582 L 0.0019222304152621292,68.36464625820753 M 0.0019271397514895137,64.36464625821054 L 0.0019394130920579746,54.36464625821807 M 0.001944322428285359,50.364646258221086 L 0.0019565957688538202,40.36464625822862 M 0.0019615051050812047,36.36464625823163 L 0.001973778445649666,26.364646258239162 M 0.0019786877818770503,22.364646258242175 L 0.0019909611224455115,12.364646258249707 M 0.001995870458672896,8.36464625825272 L 0.0020000000036148927,4.999999999999919 L 0.46845021472839166,3.274350644174249 L 1.6625339059363529,1.6605339059326572 L 3.2763506441779446,0.46645021472469606 L 4.080184751933677,0.24917050439422783 M 5.002000000003615,-8.071321389024888e-14\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g></g><g transform=\"matrix(1, 0, 0, 1, 1411, 2134.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 225,0 L 225,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 225,0 L 225,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 211, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87139)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.37548828125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invokeDM-CanadianRetail</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1017.039357500846, 2827.2751749915406)\"><rect x=\"0\" y=\"0\" width=\"165.92128499830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 159.92128499830793,0 C 162.15986124915395,0 164.92128499830793,2.761423749153968 164.92128499830793,5 L 164.92128499830793,34.743159998307945 C 164.92128499830793,36.981736249153975 162.15986124915395,39.743159998307945 159.92128499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 159.92128499830793,0 C 162.15986124915395,0 164.92128499830793,2.761423749153968 164.92128499830793,5 L 164.92128499830793,34.743159998307945 C 164.92128499830793,36.981736249153975 162.15986124915395,39.743159998307945 159.92128499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Egress Job Steps</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 944, 2638.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87140)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 16.396484375, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 24.375,22.75 C 25.268176470588234,22.75 26,22.018176470588234 26,21.125 L 26,1.625 C 26,0.7318235294117652 25.268176470588234,0 24.375,0 L 1.625,0 C 0.7318235294117648,0 0,0.7318235294117652 0,1.625 L 0,21.125 C 0,22.018176470588234 0.7318235294117647,22.75 1.625,22.75 z M 22.75,3.25 L 22.75,19.5 L 19.5,19.5 L 19.5,3.25 L 22.75,3.25 z M 17.875,3.25 L 17.875,19.5 L 14.624999999999998,19.5 L 14.624999999999998,3.25 L 17.875,3.25 z M 13,3.25 L 13,19.5 L 9.75,19.5 L 9.75,3.25 L 13,3.25 z M 8.125,6.5 L 3.25,10.562882352941175 L 3.25,2.4371176470588214 L 8.125,6.4999999999999964 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">egressERROR-5292</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">topic-outbound</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 938, 2470.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 211,0 L 211,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 211,0 L 211,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 197, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87141)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.138916015625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">createOtherFields-5292</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 656.785451250846, 322.37157999915416)\"><rect x=\"0\" y=\"0\" width=\"166.42909749830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 160.42909749830793,0 C 162.66767374915395,0 165.42909749830793,2.761423749153968 165.42909749830793,5 L 165.42909749830793,34.743159998307945 C 165.42909749830793,36.981736249153975 162.66767374915395,39.743159998307945 160.42909749830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 160.42909749830793,0 C 162.66767374915395,0 165.42909749830793,2.761423749153968 165.42909749830793,5 L 165.42909749830793,34.743159998307945 C 165.42909749830793,36.981736249153975 162.66767374915395,39.743159998307945 160.42909749830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Call Type Routing</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 513, 1966.0137512423862)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 261,0 L 261,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 261,0 L 261,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 247, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87142)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.138671875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invokeDM-CanadianCommercial</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 922.5, 2302.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 242,0 L 242,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 242,0 L 242,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 228, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87143)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.245849609375, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">E0003-REST-Invocation-Error</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 709.222951250846, 1204.004583747462)\"><rect x=\"0\" y=\"0\" width=\"221.55409749830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 215.55409749830793,0 C 217.79267374915395,0 220.55409749830793,2.761423749153968 220.55409749830793,5 L 220.55409749830793,34.743159998307945 C 220.55409749830793,36.981736249153975 217.79267374915395,39.743159998307945 215.55409749830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 215.55409749830793,0 C 217.79267374915395,0 220.55409749830793,2.761423749153968 220.55409749830793,5 L 220.55409749830793,34.743159998307945 C 220.55409749830793,36.981736249153975 217.79267374915395,39.743159998307945 215.55409749830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">US Data Error Formatters</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 864, 1966.0137512423862)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87144)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 18.1357421875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invokeDM-UsRetail</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1132.5, 1966.0137512423862)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 222,0 L 222,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 222,0 L 222,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 208, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87145)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.39892578125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invokeDM-UsCommercial</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1224, 2638.013751242386)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87146)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.9384765625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">esERRORS</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1840, 140.7431599983081)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87147)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 33.978515625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 4.875,3.25 Q 4.875,3.927083333333333 4.401041666666666,4.401041666666666 Q 3.927083333333333,4.875 3.25,4.875 Q 2.5729166666666665,4.875 2.098958333333333,4.401041666666666 Q 1.625,3.927083333333333 1.625,3.25 Q 1.625,2.5729166666666665 2.098958333333333,2.098958333333333 Q 2.5729166666666665,1.625 3.25,1.625 Q 3.927083333333333,1.625 4.401041666666666,2.098958333333333 Q 4.875,2.5729166666666665 4.875,3.25 z M 4.875,22.75 Q 4.875,23.427083333333332 4.401041666666666,23.901041666666664 Q 3.927083333333333,24.375 3.25,24.375 Q 2.5729166666666665,24.375 2.098958333333333,23.901041666666664 Q 1.625,23.427083333333332 1.625,22.75 Q 1.625,22.072916666666664 2.098958333333333,21.598958333333332 Q 2.5729166666666665,21.125 3.25,21.125 Q 3.927083333333333,21.125 4.401041666666666,21.598958333333332 Q 4.875,22.072916666666664 4.875,22.75 z M 15.708333333333332,20.583333333333332 Q 15.708333333333332,21.260416666666664 15.234374999999998,21.734375 Q 14.760416666666666,22.208333333333332 14.083333333333332,22.208333333333332 Q 13.406249999999998,22.208333333333332 12.932291666666666,21.734375 Q 12.458333333333332,21.260416666666664 12.458333333333332,20.583333333333332 Q 12.458333333333332,19.90625 12.932291666666666,19.432291666666664 Q 13.406249999999998,18.958333333333332 14.083333333333332,18.958333333333332 Q 14.760416666666666,18.958333333333332 15.234374999999998,19.432291666666664 Q 15.708333333333332,19.90625 15.708333333333332,20.583333333333332 z M 17.333333333333332,20.583333333333332 Q 17.333333333333332,19.703125 16.893229166666664,18.949869791666664 Q 16.453125,18.196614583333332 15.708333333333332,17.7734375 Q 15.674479166666666,12.915364583333332 11.8828125,10.765625 Q 10.748697916666666,10.122395833333332 8.446614583333332,9.39453125 Q 6.279947916666666,8.717447916666666 5.577473958333333,8.192708333333332 Q 4.875,7.667968749999999 4.875,6.5 L 4.875,6.059895833333333 Q 5.619791666666666,5.63671875 6.059895833333333,4.883463541666666 Q 6.5,4.130208333333333 6.5,3.25 Q 6.5,1.8958333333333333 5.552083333333333,0.9479166666666666 Q 4.604166666666666,0 3.25,0 Q 1.8958333333333333,0 0.9479166666666666,0.9479166666666666 Q 0,1.8958333333333333 0,3.25 Q 0,4.130208333333333 0.44010416666666663,4.883463541666666 Q 0.8802083333333333,5.63671875 1.625,6.059895833333333 L 1.625,19.940104166666664 Q 0.8802083333333333,20.36328125 0.44010416666666663,21.116536458333332 Q 0,21.869791666666664 0,22.75 Q 0,24.104166666666664 0.9479166666666666,25.052083333333332 Q 1.8958333333333333,26 3.25,26 Q 4.604166666666666,26 5.552083333333333,25.052083333333332 Q 6.5,24.104166666666664 6.5,22.75 Q 6.5,21.869791666666664 6.059895833333333,21.116536458333332 Q 5.619791666666666,20.36328125 4.875,19.940104166666664 L 4.875,11.52734375 Q 5.7890625,11.967447916666666 7.481770833333333,12.4921875 Q 8.412760416666666,12.779947916666666 8.962890625,12.991536458333332 Q 9.513020833333332,13.203124999999998 10.15625,13.516276041666666 Q 10.799479166666666,13.829427083333332 11.154947916666666,14.184895833333332 Q 11.510416666666666,14.540364583333332 11.840494791666666,15.048177083333332 Q 12.170572916666666,15.555989583333332 12.314453125,16.224609375 Q 12.458333333333332,16.893229166666664 12.458333333333332,17.7734375 Q 11.713541666666666,18.196614583333332 11.2734375,18.949869791666664 Q 10.833333333333332,19.703125 10.833333333333332,20.583333333333332 Q 10.833333333333332,21.9375 11.78125,22.885416666666664 Q 12.729166666666666,23.833333333333332 14.083333333333332,23.833333333333332 Q 15.437499999999998,23.833333333333332 16.385416666666664,22.885416666666664 Q 17.333333333333332,21.9375 17.333333333333332,20.583333333333332 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">split</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">stream-splitter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 2000, 308.7431599983081)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87148)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 21.014404296875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">logStartFormatter</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 476.7431599983081)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87149)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 19.167236328125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">format-request-log</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1400, 476.7431599983081)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 279,0 L 279,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 279,0 L 279,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 265, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87150)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 78.451416015625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.666666666666666,17.333333333333332 Q 8.666666666666666,16.550925925925924 8.094907407407407,15.979166666666666 Q 7.523148148148148,15.407407407407407 6.7407407407407405,15.407407407407407 Q 5.958333333333333,15.407407407407407 5.3865740740740735,15.979166666666666 Q 4.814814814814815,16.550925925925924 4.814814814814815,17.333333333333332 Q 4.814814814814815,18.11574074074074 5.3865740740740735,18.6875 Q 5.958333333333333,19.25925925925926 6.7407407407407405,19.25925925925926 Q 7.523148148148148,19.25925925925926 8.094907407407407,18.6875 Q 8.666666666666666,18.11574074074074 8.666666666666666,17.333333333333332 z M 2.888888888888889,9.62962962962963 L 8.666666666666666,9.62962962962963 L 8.666666666666666,5.777777777777778 L 6.289351851851851,5.777777777777778 Q 6.09375,5.777777777777778 5.958333333333333,5.913194444444444 L 3.0243055555555554,8.847222222222221 Q 2.888888888888889,8.982638888888888 2.888888888888889,9.17824074074074 L 2.888888888888889,9.62962962962963 z M 22.148148148148145,17.333333333333332 Q 22.148148148148145,16.550925925925924 21.57638888888889,15.979166666666666 Q 21.00462962962963,15.407407407407407 20.22222222222222,15.407407407407407 Q 19.439814814814813,15.407407407407407 18.868055555555554,15.979166666666666 Q 18.296296296296294,16.550925925925924 18.296296296296294,17.333333333333332 Q 18.296296296296294,18.11574074074074 18.868055555555554,18.6875 Q 19.439814814814813,19.25925925925926 20.22222222222222,19.25925925925926 Q 21.00462962962963,19.25925925925926 21.57638888888889,18.6875 Q 22.148148148148145,18.11574074074074 22.148148148148145,17.333333333333332 z M 26,0.9629629629629629 L 26,16.37037037037037 Q 26,16.596064814814813 25.939814814814813,16.76909722222222 Q 25.87962962962963,16.94212962962963 25.736689814814813,17.047453703703702 Q 25.59375,17.15277777777778 25.488425925925924,17.22048611111111 Q 25.38310185185185,17.288194444444443 25.134837962962962,17.31076388888889 Q 24.886574074074073,17.333333333333332 24.796296296296294,17.34085648148148 Q 24.706018518518515,17.34837962962963 24.41261574074074,17.34085648148148 Q 24.119212962962962,17.333333333333332 24.074074074074073,17.333333333333332 Q 24.074074074074073,18.92824074074074 22.94560185185185,20.056712962962962 Q 21.81712962962963,21.185185185185183 20.22222222222222,21.185185185185183 Q 18.627314814814813,21.185185185185183 17.49884259259259,20.056712962962962 Q 16.37037037037037,18.92824074074074 16.37037037037037,17.333333333333332 L 10.592592592592592,17.333333333333332 Q 10.592592592592592,18.92824074074074 9.46412037037037,20.056712962962962 Q 8.335648148148147,21.185185185185183 6.7407407407407405,21.185185185185183 Q 5.145833333333333,21.185185185185183 4.017361111111111,20.056712962962962 Q 2.888888888888889,18.92824074074074 2.888888888888889,17.333333333333332 L 1.9259259259259258,17.333333333333332 Q 1.880787037037037,17.333333333333332 1.587384259259259,17.34085648148148 Q 1.2939814814814814,17.34837962962963 1.2037037037037037,17.34085648148148 Q 1.1134259259259258,17.333333333333332 0.865162037037037,17.31076388888889 Q 0.6168981481481481,17.288194444444443 0.5115740740740741,17.22048611111111 Q 0.40625,17.15277777777778 0.2633101851851852,17.047453703703702 Q 0.12037037037037036,16.94212962962963 0.06018518518518518,16.76909722222222 Q 0,16.596064814814813 0,16.37037037037037 Q 0,15.979166666666666 0.2858796296296296,15.693287037037036 Q 0.5717592592592592,15.407407407407407 0.9629629629629629,15.407407407407407 L 0.9629629629629629,10.592592592592592 Q 0.9629629629629629,10.472222222222221 0.9554398148148148,10.065972222222221 Q 0.9479166666666666,9.659722222222221 0.9554398148148148,9.494212962962962 Q 0.9629629629629629,9.328703703703702 0.9930555555555555,8.97511574074074 Q 1.0231481481481481,8.621527777777777 1.0908564814814814,8.418402777777777 Q 1.1585648148148147,8.215277777777777 1.3015046296296295,7.9594907407407405 Q 1.4444444444444444,7.703703703703703 1.6400462962962963,7.508101851851851 L 4.619212962962963,4.528935185185185 Q 4.905092592592593,4.243055555555555 5.379050925925926,4.047453703703703 Q 5.853009259259259,3.8518518518518516 6.259259259259259,3.8518518518518516 L 8.666666666666666,3.8518518518518516 L 8.666666666666666,0.9629629629629629 Q 8.666666666666666,0.5717592592592592 8.952546296296296,0.2858796296296296 Q 9.238425925925926,0 9.62962962962963,0 L 25.037037037037035,0 Q 25.42824074074074,0 25.71412037037037,0.2858796296296296 Q 26,0.5717592592592592 26,0.9629629629629629 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">csc-Routing</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">routing</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1840, 2281.6421712432325)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87151)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.9384765625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">ads-routing-err</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1098.738576250846, 644.7431599983081)\"><rect x=\"0\" y=\"0\" width=\"882.5228474983079\" height=\"1358.2660074966159\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><g transform=\"matrix(1, 0, 0, 1, 7.261423749153968, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3\" fill=\"black\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path><path d=\"M 0,3 L 6,3\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">CSC Contextual Profiles</text></g></g><g transform=\"matrix(1, 0, 0, 1, 0, 40.743159998307945)\"><path d=\"M 5,0 L 15,0 M 19,0 L 29,0 M 33,0 L 43,0 M 47,0 L 57,0 M 61,0 L 71,0 M 75,0 L 85,0 M 89,0 L 99,0 M 103,0 L 113,0 M 117,0 L 127,0 M 131,0 L 141,0 M 145,0 L 155,0 M 159,0 L 169,0 M 173,0 L 183,0 M 187,0 L 197,0 M 201,0 L 211,0 M 215,0 L 225,0 M 229,0 L 239,0 M 243,0 L 253,0 M 257,0 L 267,0 M 271,0 L 281,0 M 285,0 L 295,0 M 299,0 L 309,0 M 313,0 L 323,0 M 327,0 L 337,0 M 341,0 L 351,0 M 355,0 L 365,0 M 369,0 L 379,0 M 383,0 L 393,0 M 397,0 L 407,0 M 411,0 L 421,0 M 425,0 L 435,0 M 439,0 L 449,0 M 453,0 L 463,0 M 467,0 L 477,0 M 481,0 L 491,0 M 495,0 L 505,0 M 509,0 L 519,0 M 523,0 L 533,0 M 537,0 L 547,0 M 551,0 L 561,0 M 565,0 L 575,0 M 579,0 L 589,0 M 593,0 L 603,0 M 607,0 L 617,0 M 621,0 L 631,0 M 635,0 L 645,0 M 649,0 L 659,0 M 663,0 L 673,0 M 677,0 L 687,0 M 691,0 L 701,0 M 705,0 L 715,0 M 719,0 L 729,0 M 733,0 L 743,0 M 747,0 L 757,0 M 761,0 L 771,0 M 775,0 L 785,0 M 789,0 L 799,0 M 803,0 L 813,0 M 817,0 L 827,0 M 831,0 L 841,0 M 845,0 L 855,0 M 859,0 L 869,0 M 873,0 L 876.5228474983079,0 L 878.2484968541335,0.46645021472477677 L 879.8623135923751,1.6605339059327378 L 881.0563972835832,3.27435064417433 L 881.2323960380392,3.925464370067429 M 881.5228474983079,5 M 881.5228497079142,7.886901230452255 L 881.522857361818,17.886901230449325 M 881.5228604233794,21.886901230448153 L 881.5228680772831,31.886901230445226 M 881.5228711388445,35.88690123044405 L 881.5228787927482,45.886901230441126 M 881.5228818543096,49.88690123043995 L 881.5228895082133,59.886901230437026 M 881.5228925697747,63.88690123043585 L 881.5229002236784,73.88690123043293 M 881.5229032852399,77.88690123043176 L 881.5229109391436,87.88690123042883 M 881.522914000705,91.88690123042767 L 881.5229216546087,101.88690123042474 M 881.5229247161701,105.88690123042358 L 881.5229323700738,115.88690123042065 M 881.5229354316352,119.88690123041948 L 881.5229430855389,129.88690123041656 M 881.5229461471004,133.8869012304154 L 881.5229538010041,143.88690123041246 M 881.5229568625655,147.8869012304113 L 881.5229645164692,157.88690123040837 M 881.5229675780306,161.8869012304072 L 881.5229752319343,171.88690123040428 M 881.5229782934957,175.8869012304031 L 881.5229859473994,185.88690123040018 M 881.5229890089608,189.88690123039902 L 881.5229966628646,199.8869012303961 M 881.522999724426,203.88690123039493 L 881.5230073783297,213.886901230392 M 881.5230104398911,217.88690123039083 L 881.5230180937948,227.8869012303879 M 881.5230211553562,231.88690123038674 L 881.5230288092599,241.8869012303838 M 881.5230318708213,245.88690123038265 L 881.523039524725,255.88690123037972 M 881.5230425862865,259.88690123037856 L 881.5230502401902,269.8869012303756 M 881.5230533017516,273.8869012303744 L 881.5230609556553,283.88690123037145 M 881.5230640172167,287.88690123037026 L 881.5230716711204,297.8869012303673 M 881.5230747326818,301.8869012303661 L 881.5230823865855,311.88690123036315 M 881.523085448147,315.88690123036196 L 881.5230931020507,325.886901230359 M 881.5230961636121,329.8869012303578 L 881.5231038175158,339.88690123035485 M 881.5231068790772,343.88690123035366 L 881.5231145329809,353.8869012303507 M 881.5231175945423,357.8869012303495 L 881.523125248446,367.88690123034655 M 881.5231283100075,371.88690123034536 L 881.5231359639112,381.8869012303424 M 881.5231390254726,385.8869012303412 L 881.5231466793763,395.88690123033825 M 881.5231497409377,399.88690123033706 L 881.5231573948414,409.8869012303341 M 881.5231604564028,413.8869012303329 L 881.5231681103065,423.88690123032995 M 881.523171171868,427.88690123032876 L 881.5231788257717,437.8869012303258 M 881.5231818873331,441.8869012303246 L 881.5231895412368,451.88690123032166 M 881.5231926027982,455.88690123032046 L 881.5232002567019,465.8869012303175 M 881.5232033182633,469.8869012303163 L 881.523210972167,479.88690123031336 M 881.5232140337284,483.88690123031216 L 881.5232216876321,493.8869012303092 M 881.5232247491936,497.886901230308 L 881.5232324030973,507.88690123030506 M 881.5232354646587,511.88690123030386 L 881.5232431185624,521.886901230301 M 881.5232461801238,525.8869012302998 L 881.5232538340275,535.8869012302969 M 881.5232568955889,539.8869012302957 L 881.5232645494926,549.8869012302928 M 881.523267611054,553.8869012302916 L 881.5232752649578,563.8869012302887 M 881.5232783265192,567.8869012302875 L 881.5232859804229,577.8869012302846 M 881.5232890419843,581.8869012302835 L 881.523296695888,591.8869012302805 M 881.5232997574494,595.8869012302794 L 881.5233074113531,605.8869012302764 M 881.5233104729145,609.8869012302753 L 881.5233181268183,619.8869012302723 M 881.5233211883797,623.8869012302712 L 881.5233288422834,633.8869012302682 M 881.5233319038448,637.8869012302671 L 881.5233395577485,647.8869012302641 M 881.5233426193099,651.886901230263 L 881.5233502732136,661.88690123026 M 881.523353334775,665.8869012302589 L 881.5233609886787,675.886901230256 M 881.5233640502402,679.8869012302548 L 881.5233717041439,689.8869012302519 M 881.5233747657053,693.8869012302507 L 881.523382419609,703.8869012302478 M 881.5233854811704,707.8869012302466 L 881.5233931350741,717.8869012302437 M 881.5233961966355,721.8869012302425 L 881.5234038505392,731.8869012302396 M 881.5234069121007,735.8869012302384 L 881.5234145660044,745.8869012302355 M 881.5234176275658,749.8869012302343 L 881.5234252814695,759.8869012302314 M 881.5234283430309,763.8869012302303 L 881.5234359969346,773.8869012302273 M 881.523439058496,777.8869012302262 L 881.5234467123997,787.8869012302232 M 881.5234497739611,791.8869012302221 L 881.5234574278649,801.8869012302191 M 881.5234604894263,805.886901230218 L 881.52346814333,815.886901230215 M 881.5234712048914,819.8869012302139 L 881.5234788587951,829.8869012302109 M 881.5234819203565,833.8869012302098 L 881.5234895742602,843.8869012302068 M 881.5234926358216,847.8869012302057 L 881.5235002897253,857.8869012302027 M 881.5235033512868,861.8869012302016 L 881.5235110051905,871.8869012301986 M 881.5235140667519,875.8869012301975 L 881.5235217206556,885.8869012301946 M 881.523524782217,889.8869012301934 L 881.5235324361207,899.8869012301905 M 881.5235354976821,903.8869012301893 L 881.5235431515858,913.8869012301864 M 881.5235462131473,917.8869012301852 L 881.523553867051,927.8869012301823 M 881.5235569286124,931.8869012301811 L 881.5235645825161,941.8869012301782 M 881.5235676440775,945.886901230177 L 881.5235752979812,955.8869012301741 M 881.5235783595426,959.886901230173 L 881.5235860134463,969.88690123017 M 881.5235890750077,973.8869012301689 L 881.5235967289115,983.8869012301659 M 881.5235997904729,987.8869012301648 L 881.5236074443766,997.8869012301618 M 881.523610505938,1001.8869012301607 L 881.5236181598417,1011.8869012301577 M 881.5236212214031,1015.8869012301566 L 881.5236288753068,1025.8869012301536 M 881.5236319368682,1029.8869012301525 L 881.523639590772,1039.8869012301495 M 881.5236426523334,1043.8869012301484 L 881.5236503062371,1053.8869012301454 M 881.5236533677985,1057.8869012301443 L 881.5236610217022,1067.8869012301413 M 881.5236640832636,1071.8869012301402 L 881.5236717371673,1081.8869012301373 M 881.5236747987287,1085.8869012301361 L 881.5236824526324,1095.8869012301332 M 881.5236855141939,1099.886901230132 L 881.5236931680976,1109.886901230129 M 881.523696229659,1113.886901230128 L 881.5237038835627,1123.886901230125 M 881.5237069451241,1127.8869012301238 L 881.5237145990278,1137.8869012301209 M 881.5237176605892,1141.8869012301197 L 881.5237253144929,1151.8869012301168 M 881.5237283760544,1155.8869012301157 L 881.5237360299581,1165.8869012301127 M 881.5237390915195,1169.8869012301116 L 881.5237467454232,1179.8869012301086 M 881.5237498069846,1183.8869012301075 L 881.5237574608883,1193.8869012301045 M 881.5237605224497,1197.8869012301034 L 881.5237681763534,1207.8869012301004 M 881.5237712379148,1211.8869012300993 L 881.5237788918186,1221.8869012300963 M 881.52378195338,1225.8869012300952 L 881.5237896072837,1235.8869012300922 M 881.5237926688451,1239.886901230091 L 881.5238003227488,1249.8869012300881 M 881.5238033843102,1253.886901230087 L 881.5238110382139,1263.886901230084 M 881.5238140997753,1267.886901230083 L 881.523821753679,1277.88690123008 M 881.5238248152405,1281.8869012300788 L 881.5238324691442,1291.8869012300759 M 881.5238355307056,1295.8869012300747 L 881.5238431846093,1305.8869012300718 M 881.5238462461707,1309.8869012300706 L 881.5238474983082,1311.5228474983078 L 881.0573972835836,1313.2484968541335 L 879.8633135923754,1314.8623135923751 L 878.2494968541338,1316.056397283583 L 876.5238474983082,1316.5228474983078 L 875.7500450377848,1316.5228474983078 M 871.7500450377848,1316.5228474983078 L 861.7500450377848,1316.5228474983078 M 857.7500450377848,1316.5228474983078 L 847.7500450377848,1316.5228474983078 M 843.7500450377848,1316.5228474983078 L 833.7500450377848,1316.5228474983078 M 829.7500450377848,1316.5228474983078 L 819.7500450377848,1316.5228474983078 M 815.7500450377848,1316.5228474983078 L 805.7500450377848,1316.5228474983078 M 801.7500450377848,1316.5228474983078 L 791.7500450377848,1316.5228474983078 M 787.7500450377848,1316.5228474983078 L 777.7500450377848,1316.5228474983078 M 773.7500450377848,1316.5228474983078 L 763.7500450377848,1316.5228474983078 M 759.7500450377848,1316.5228474983078 L 749.7500450377848,1316.5228474983078 M 745.7500450377848,1316.5228474983078 L 735.7500450377848,1316.5228474983078 M 731.7500450377848,1316.5228474983078 L 721.7500450377848,1316.5228474983078 M 717.7500450377848,1316.5228474983078 L 707.7500450377848,1316.5228474983078 M 703.7500450377848,1316.5228474983078 L 693.7500450377848,1316.5228474983078 M 689.7500450377848,1316.5228474983078 L 679.7500450377848,1316.5228474983078 M 675.7500450377848,1316.5228474983078 L 665.7500450377848,1316.5228474983078 M 661.7500450377848,1316.5228474983078 L 651.7500450377848,1316.5228474983078 M 647.7500450377848,1316.5228474983078 L 637.7500450377848,1316.5228474983078 M 633.7500450377848,1316.5228474983078 L 623.7500450377848,1316.5228474983078 M 619.7500450377848,1316.5228474983078 L 609.7500450377848,1316.5228474983078 M 605.7500450377848,1316.5228474983078 L 595.7500450377848,1316.5228474983078 M 591.7500450377848,1316.5228474983078 L 581.7500450377848,1316.5228474983078 M 577.7500450377848,1316.5228474983078 L 567.7500450377848,1316.5228474983078 M 563.7500450377848,1316.5228474983078 L 553.7500450377848,1316.5228474983078 M 549.7500450377848,1316.5228474983078 L 539.7500450377848,1316.5228474983078 M 535.7500450377848,1316.5228474983078 L 525.7500450377848,1316.5228474983078 M 521.7500450377848,1316.5228474983078 L 511.75004503778484,1316.5228474983078 M 507.75004503778484,1316.5228474983078 L 497.75004503778484,1316.5228474983078 M 493.75004503778484,1316.5228474983078 L 483.75004503778484,1316.5228474983078 M 479.75004503778484,1316.5228474983078 L 469.75004503778484,1316.5228474983078 M 465.75004503778484,1316.5228474983078 L 455.75004503778484,1316.5228474983078 M 451.75004503778484,1316.5228474983078 L 441.75004503778484,1316.5228474983078 M 437.75004503778484,1316.5228474983078 L 427.75004503778484,1316.5228474983078 M 423.75004503778484,1316.5228474983078 L 413.75004503778484,1316.5228474983078 M 409.75004503778484,1316.5228474983078 L 399.75004503778484,1316.5228474983078 M 395.75004503778484,1316.5228474983078 L 385.75004503778484,1316.5228474983078 M 381.75004503778484,1316.5228474983078 L 371.75004503778484,1316.5228474983078 M 367.75004503778484,1316.5228474983078 L 357.75004503778484,1316.5228474983078 M 353.75004503778484,1316.5228474983078 L 343.75004503778484,1316.5228474983078 M 339.75004503778484,1316.5228474983078 L 329.75004503778484,1316.5228474983078 M 325.75004503778484,1316.5228474983078 L 315.75004503778484,1316.5228474983078 M 311.75004503778484,1316.5228474983078 L 301.75004503778484,1316.5228474983078 M 297.75004503778484,1316.5228474983078 L 287.75004503778484,1316.5228474983078 M 283.75004503778484,1316.5228474983078 L 273.75004503778484,1316.5228474983078 M 269.75004503778484,1316.5228474983078 L 259.75004503778484,1316.5228474983078 M 255.75004503778484,1316.5228474983078 L 245.75004503778484,1316.5228474983078 M 241.75004503778484,1316.5228474983078 L 231.75004503778484,1316.5228474983078 M 227.75004503778484,1316.5228474983078 L 217.75004503778484,1316.5228474983078 M 213.75004503778484,1316.5228474983078 L 203.75004503778484,1316.5228474983078 M 199.75004503778484,1316.5228474983078 L 189.75004503778484,1316.5228474983078 M 185.75004503778484,1316.5228474983078 L 175.75004503778484,1316.5228474983078 M 171.75004503778484,1316.5228474983078 L 161.75004503778484,1316.5228474983078 M 157.75004503778484,1316.5228474983078 L 147.75004503778484,1316.5228474983078 M 143.75004503778484,1316.5228474983078 L 133.75004503778484,1316.5228474983078 M 129.75004503778484,1316.5228474983078 L 119.75004503778484,1316.5228474983078 M 115.75004503778484,1316.5228474983078 L 105.75004503778484,1316.5228474983078 M 101.75004503778484,1316.5228474983078 L 91.75004503778484,1316.5228474983078 M 87.75004503778484,1316.5228474983078 L 77.75004503778484,1316.5228474983078 M 73.75004503778484,1316.5228474983078 L 63.750045037784844,1316.5228474983078 M 59.750045037784844,1316.5228474983078 L 49.750045037784844,1316.5228474983078 M 45.750045037784844,1316.5228474983078 L 35.750045037784844,1316.5228474983078 M 31.750045037784844,1316.5228474983078 L 21.750045037784844,1316.5228474983078 M 17.750045037784844,1316.5228474983078 L 7.750045037784844,1316.5228474983078 M 5.001000000000317,1316.5228474983078 M 3.793384184479625,1316.196423909093 L 3.2753506441746474,1316.056397283583 L 1.6615339059330556,1314.8623135923751 L 0.46745021472509474,1313.2484968541335 L 0.0010000000003179688,1311.5228474983078 L 0.0010028018676546057,1307.8621438073324 M 0.0010058634291172759,1303.8621438073335 L 0.0010135173327739512,1293.8621438073365 M 0.0010165788942366214,1289.8621438073376 L 0.0010242327978932967,1279.8621438073405 M 0.0010272943593559669,1275.8621438073417 L 0.0010349482630126422,1265.8621438073446 M 0.0010380098244753124,1261.8621438073458 L 0.0010456637281319877,1251.8621438073487 M 0.0010487252895946579,1247.8621438073499 L 0.0010563791932513332,1237.8621438073528 M 0.0010594407547140033,1233.862143807354 L 0.0010670946583706787,1223.862143807357 M 0.0010701562198333488,1219.862143807358 L 0.0010778101234900242,1209.862143807361 M 0.0010808716849526943,1205.8621438073621 L 0.0010885255886093697,1195.862143807365 M 0.0010915871500720398,1191.8621438073662 L 0.0010992410537287152,1181.8621438073692 M 0.0011023026151913853,1177.8621438073703 L 0.0011099565188480607,1167.8621438073733 M 0.0011130180803107308,1163.8621438073744 L 0.0011206719839674062,1153.8621438073774 M 0.0011237335454300763,1149.8621438073785 L 0.0011313874490867517,1139.8621438073815 M 0.0011344490105494218,1135.8621438073826 L 0.0011421029142060972,1125.8621438073856 M 0.0011451644756687673,1121.8621438073867 L 0.0011528183793254427,1111.8621438073897 M 0.0011558799407881128,1107.8621438073908 L 0.0011635338444447882,1097.8621438073937 M 0.0011665954059074583,1093.862143807395 L 0.0011742493095641337,1083.8621438073978 M 0.0011773108710268038,1079.862143807399 L 0.0011849647746834792,1069.862143807402 M 0.0011880263361461493,1065.862143807403 L 0.0011956802398028247,1055.862143807406 M 0.0011987418012654948,1051.8621438074072 L 0.0012063957049221702,1041.8621438074101 M 0.0012094572663848403,1037.8621438074113 L 0.0012171111700415157,1027.8621438074142 M 0.0012201727315041858,1023.8621438074154 L 0.0012278266351608612,1013.8621438074183 M 0.0012308881966235313,1009.8621438074194 L 0.0012385421002802067,999.8621438074224 M 0.0012416036617428768,995.8621438074235 L 0.0012492575653995522,985.8621438074265 M 0.0012523191268622223,981.8621438074276 L 0.0012599730305188977,971.8621438074306 M 0.0012630345919815678,967.8621438074317 L 0.0012706884956382432,957.8621438074347 M 0.0012737500571009133,953.8621438074358 L 0.0012814039607575887,943.8621438074388 M 0.0012844655222202588,939.8621438074399 L 0.0012921194258769342,929.8621438074429 M 0.0012951809873396043,925.862143807444 L 0.0013028348909962797,915.862143807447 M 0.0013058964524589498,911.8621438074481 L 0.0013135503561156252,901.862143807451 M 0.0013166119175782953,897.8621438074522 L 0.0013242658212349707,887.8621438074551 M 0.0013273273826976408,883.8621438074563 L 0.0013349812863543162,873.8621438074592 M 0.0013380428478169863,869.8621438074604 L 0.0013456967514736617,859.8621438074633 M 0.0013487583129363318,855.8621438074645 L 0.0013564122165930072,845.8621438074674 M 0.0013594737780556773,841.8621438074686 L 0.0013671276817123527,831.8621438074715 M 0.0013701892431750228,827.8621438074726 L 0.0013778431468316982,817.8621438074756 M 0.0013809047082943683,813.8621438074767 L 0.0013885586119510437,803.8621438074797 M 0.0013916201734137138,799.8621438074808 L 0.0013992740770703892,789.8621438074838 M 0.0014023356385330593,785.8621438074849 L 0.0014099895421897347,775.8621438074879 M 0.0014130511036524048,771.862143807489 L 0.0014207050073090802,761.862143807492 M 0.0014237665687717503,757.8621438074931 L 0.0014314204724284257,747.8621438074961 M 0.0014344820338910958,743.8621438074972 L 0.0014421359375477712,733.8621438075002 M 0.0014451974990104413,729.8621438075013 L 0.0014528514026671167,719.8621438075043 M 0.0014559129641297868,715.8621438075054 L 0.0014635668677864622,705.8621438075083 M 0.0014666284292491323,701.8621438075095 L 0.0014742823329058077,691.8621438075124 M 0.0014773438943684778,687.8621438075136 L 0.0014849977980251532,677.8621438075165 M 0.0014880593594878233,673.8621438075177 L 0.0014957132631444987,663.8621438075206 M 0.0014987748246071688,659.8621438075218 L 0.0015064287282638442,649.8621438075247 M 0.0015094902897265143,645.8621438075259 L 0.0015171441933831897,635.8621438075288 M 0.0015202057548458598,631.86214380753 L 0.0015278596585025352,621.8621438075329 M 0.0015309212199652053,617.862143807534 L 0.0015385751236218807,607.862143807537 M 0.0015416366850845508,603.8621438075381 L 0.0015492905887412262,593.8621438075411 M 0.0015523521502038963,589.8621438075422 L 0.0015600060538605717,579.8621438075452 M 0.0015630676153232418,575.8621438075463 L 0.0015707215189799172,565.8621438075493 M 0.0015737830804425873,561.8621438075504 L 0.0015814369840992627,551.8621438075534 M 0.0015844985455619328,547.8621438075545 L 0.0015921524492186082,537.8621438075575 M 0.0015952140106812783,533.8621438075586 L 0.0016028679143379537,523.8621438075616 M 0.0016059294758006238,519.8621438075627 L 0.0016135833794572992,509.86214380756564 M 0.0016166449409199693,505.86214380756684 L 0.0016242988445766447,495.8621438075698 M 0.0016273604060393148,491.862143807571 L 0.0016350143096959902,481.86214380757394 M 0.0016380758711586603,477.86214380757514 L 0.0016457297748153357,467.8621438075781 M 0.0016487913362780058,463.8621438075793 L 0.0016564452399346812,453.86214380758224 M 0.0016595068013973513,449.86214380758344 L 0.0016671607050540267,439.8621438075864 M 0.0016702222665166968,435.8621438075876 L 0.0016778761701733722,425.86214380759054 M 0.0016809377316360423,421.86214380759174 L 0.0016885916352927177,411.8621438075947 M 0.0016916531967553878,407.8621438075959 L 0.0016993071004120632,397.86214380759884 M 0.0017023686618747333,393.86214380760003 L 0.0017100225655314087,383.862143807603 M 0.0017130841269940788,379.8621438076042 L 0.0017207380306507542,369.86214380760714 M 0.0017237995921134243,365.86214380760833 L 0.0017314534957700997,355.8621438076113 M 0.0017345150572327698,351.8621438076125 L 0.0017421689608894452,341.86214380761544 M 0.0017452305223521153,337.86214380761663 L 0.0017528844260087907,327.8621438076196 M 0.0017559459874714608,323.8621438076208 L 0.0017635998911281362,313.86214380762374 M 0.0017666614525908063,309.86214380762493 L 0.0017743153562474817,299.8621438076279 M 0.0017773769177101518,295.8621438076291 L 0.0017850308213668272,285.86214380763204 M 0.0017880923828294973,281.86214380763323 L 0.0017957462864861726,271.8621438076362 M 0.0017988078479488428,267.8621438076374 L 0.0018064617516055181,257.86214380764034 M 0.0018095233130681883,253.8621438076415 L 0.0018171772167248636,243.86214380764443 M 0.0018202387781875338,239.8621438076456 L 0.0018278926818442091,229.86214380764852 M 0.0018309542433068793,225.8621438076497 L 0.0018386081469635546,215.86214380765261 M 0.0018416697084262248,211.86214380765378 L 0.0018493236120829001,201.8621438076567 M 0.0018523851735455703,197.86214380765787 L 0.0018600390772022456,187.8621438076608 M 0.0018631006386649158,183.86214380766197 L 0.0018707545423215911,173.8621438076649 M 0.0018738161037842613,169.86214380766606 L 0.0018814700074409366,159.86214380766899 M 0.0018845315689036068,155.86214380767015 L 0.0018921854725602821,145.86214380767308 M 0.0018952470340229523,141.86214380767424 L 0.0019029009376796276,131.86214380767717 M 0.0019059624991422978,127.86214380767834 L 0.0019136164027989731,117.86214380768126 M 0.0019166779642616433,113.86214380768243 L 0.0019243318679183186,103.86214380768536 M 0.0019273934293809888,99.86214380768652 L 0.0019350473330376641,89.86214380768945 M 0.0019381088945003343,85.86214380769061 L 0.0019457627981570096,75.86214380769354 M 0.0019488243596196798,71.86214380769471 L 0.001956478263276355,61.862143807697635 M 0.001959539824739025,57.86214380769881 L 0.0019671937283957004,47.862143807701734 M 0.0019702552898583706,43.86214380770291 L 0.001977909193515046,33.862143807705834 M 0.001980970754977716,29.862143807707007 L 0.0019886246586343914,19.862143807709934 M 0.0019916862200970616,15.862143807711107 L 0.001999340123753737,5.862143807714036 M 0.0020000000003179814,5.000000000000169 M 0.46845021472509474,3.2743506441744987 M 1.2715915399892659,2.188896648421766 L 1.662533905933056,1.660533905932907 L 3.2763506441746477,0.46645021472494586 L 5.002000000000318,1.6908696665041134e-13 M 5,0 L 15,0 M 19,0 L 29,0 M 33,0 L 43,0 M 47,0 L 57,0 M 61,0 L 71,0 M 75,0 L 85,0 M 89,0 L 99,0 M 103,0 L 113,0 M 117,0 L 127,0 M 131,0 L 141,0 M 145,0 L 155,0 M 159,0 L 169,0 M 173,0 L 183,0 M 187,0 L 197,0 M 201,0 L 211,0 M 215,0 L 225,0 M 229,0 L 239,0 M 243,0 L 253,0 M 257,0 L 267,0 M 271,0 L 281,0 M 285,0 L 295,0 M 299,0 L 309,0 M 313,0 L 323,0 M 327,0 L 337,0 M 341,0 L 351,0 M 355,0 L 365,0 M 369,0 L 379,0 M 383,0 L 393,0 M 397,0 L 407,0 M 411,0 L 421,0 M 425,0 L 435,0 M 439,0 L 449,0 M 453,0 L 463,0 M 467,0 L 477,0 M 481,0 L 491,0 M 495,0 L 505,0 M 509,0 L 519,0 M 523,0 L 533,0 M 537,0 L 547,0 M 551,0 L 561,0 M 565,0 L 575,0 M 579,0 L 589,0 M 593,0 L 603,0 M 607,0 L 617,0 M 621,0 L 631,0 M 635,0 L 645,0 M 649,0 L 659,0 M 663,0 L 673,0 M 677,0 L 687,0 M 691,0 L 701,0 M 705,0 L 715,0 M 719,0 L 729,0 M 733,0 L 743,0 M 747,0 L 757,0 M 761,0 L 771,0 M 775,0 L 785,0 M 789,0 L 799,0 M 803,0 L 813,0 M 817,0 L 827,0 M 831,0 L 841,0 M 845,0 L 855,0 M 859,0 L 869,0 M 873,0 L 876.5228474983079,0 L 878.2484968541335,0.46645021472477677 L 879.8623135923751,1.6605339059327378 L 881.0563972835832,3.27435064417433 L 881.2323960380392,3.925464370067429 M 881.5228474983079,5 M 881.5228497079142,7.886901230452255 L 881.522857361818,17.886901230449325 M 881.5228604233794,21.886901230448153 L 881.5228680772831,31.886901230445226 M 881.5228711388445,35.88690123044405 L 881.5228787927482,45.886901230441126 M 881.5228818543096,49.88690123043995 L 881.5228895082133,59.886901230437026 M 881.5228925697747,63.88690123043585 L 881.5229002236784,73.88690123043293 M 881.5229032852399,77.88690123043176 L 881.5229109391436,87.88690123042883 M 881.522914000705,91.88690123042767 L 881.5229216546087,101.88690123042474 M 881.5229247161701,105.88690123042358 L 881.5229323700738,115.88690123042065 M 881.5229354316352,119.88690123041948 L 881.5229430855389,129.88690123041656 M 881.5229461471004,133.8869012304154 L 881.5229538010041,143.88690123041246 M 881.5229568625655,147.8869012304113 L 881.5229645164692,157.88690123040837 M 881.5229675780306,161.8869012304072 L 881.5229752319343,171.88690123040428 M 881.5229782934957,175.8869012304031 L 881.5229859473994,185.88690123040018 M 881.5229890089608,189.88690123039902 L 881.5229966628646,199.8869012303961 M 881.522999724426,203.88690123039493 L 881.5230073783297,213.886901230392 M 881.5230104398911,217.88690123039083 L 881.5230180937948,227.8869012303879 M 881.5230211553562,231.88690123038674 L 881.5230288092599,241.8869012303838 M 881.5230318708213,245.88690123038265 L 881.523039524725,255.88690123037972 M 881.5230425862865,259.88690123037856 L 881.5230502401902,269.8869012303756 M 881.5230533017516,273.8869012303744 L 881.5230609556553,283.88690123037145 M 881.5230640172167,287.88690123037026 L 881.5230716711204,297.8869012303673 M 881.5230747326818,301.8869012303661 L 881.5230823865855,311.88690123036315 M 881.523085448147,315.88690123036196 L 881.5230931020507,325.886901230359 M 881.5230961636121,329.8869012303578 L 881.5231038175158,339.88690123035485 M 881.5231068790772,343.88690123035366 L 881.5231145329809,353.8869012303507 M 881.5231175945423,357.8869012303495 L 881.523125248446,367.88690123034655 M 881.5231283100075,371.88690123034536 L 881.5231359639112,381.8869012303424 M 881.5231390254726,385.8869012303412 L 881.5231466793763,395.88690123033825 M 881.5231497409377,399.88690123033706 L 881.5231573948414,409.8869012303341 M 881.5231604564028,413.8869012303329 L 881.5231681103065,423.88690123032995 M 881.523171171868,427.88690123032876 L 881.5231788257717,437.8869012303258 M 881.5231818873331,441.8869012303246 L 881.5231895412368,451.88690123032166 M 881.5231926027982,455.88690123032046 L 881.5232002567019,465.8869012303175 M 881.5232033182633,469.8869012303163 L 881.523210972167,479.88690123031336 M 881.5232140337284,483.88690123031216 L 881.5232216876321,493.8869012303092 M 881.5232247491936,497.886901230308 L 881.5232324030973,507.88690123030506 M 881.5232354646587,511.88690123030386 L 881.5232431185624,521.886901230301 M 881.5232461801238,525.8869012302998 L 881.5232538340275,535.8869012302969 M 881.5232568955889,539.8869012302957 L 881.5232645494926,549.8869012302928 M 881.523267611054,553.8869012302916 L 881.5232752649578,563.8869012302887 M 881.5232783265192,567.8869012302875 L 881.5232859804229,577.8869012302846 M 881.5232890419843,581.8869012302835 L 881.523296695888,591.8869012302805 M 881.5232997574494,595.8869012302794 L 881.5233074113531,605.8869012302764 M 881.5233104729145,609.8869012302753 L 881.5233181268183,619.8869012302723 M 881.5233211883797,623.8869012302712 L 881.5233288422834,633.8869012302682 M 881.5233319038448,637.8869012302671 L 881.5233395577485,647.8869012302641 M 881.5233426193099,651.886901230263 L 881.5233502732136,661.88690123026 M 881.523353334775,665.8869012302589 L 881.5233609886787,675.886901230256 M 881.5233640502402,679.8869012302548 L 881.5233717041439,689.8869012302519 M 881.5233747657053,693.8869012302507 L 881.523382419609,703.8869012302478 M 881.5233854811704,707.8869012302466 L 881.5233931350741,717.8869012302437 M 881.5233961966355,721.8869012302425 L 881.5234038505392,731.8869012302396 M 881.5234069121007,735.8869012302384 L 881.5234145660044,745.8869012302355 M 881.5234176275658,749.8869012302343 L 881.5234252814695,759.8869012302314 M 881.5234283430309,763.8869012302303 L 881.5234359969346,773.8869012302273 M 881.523439058496,777.8869012302262 L 881.5234467123997,787.8869012302232 M 881.5234497739611,791.8869012302221 L 881.5234574278649,801.8869012302191 M 881.5234604894263,805.886901230218 L 881.52346814333,815.886901230215 M 881.5234712048914,819.8869012302139 L 881.5234788587951,829.8869012302109 M 881.5234819203565,833.8869012302098 L 881.5234895742602,843.8869012302068 M 881.5234926358216,847.8869012302057 L 881.5235002897253,857.8869012302027 M 881.5235033512868,861.8869012302016 L 881.5235110051905,871.8869012301986 M 881.5235140667519,875.8869012301975 L 881.5235217206556,885.8869012301946 M 881.523524782217,889.8869012301934 L 881.5235324361207,899.8869012301905 M 881.5235354976821,903.8869012301893 L 881.5235431515858,913.8869012301864 M 881.5235462131473,917.8869012301852 L 881.523553867051,927.8869012301823 M 881.5235569286124,931.8869012301811 L 881.5235645825161,941.8869012301782 M 881.5235676440775,945.886901230177 L 881.5235752979812,955.8869012301741 M 881.5235783595426,959.886901230173 L 881.5235860134463,969.88690123017 M 881.5235890750077,973.8869012301689 L 881.5235967289115,983.8869012301659 M 881.5235997904729,987.8869012301648 L 881.5236074443766,997.8869012301618 M 881.523610505938,1001.8869012301607 L 881.5236181598417,1011.8869012301577 M 881.5236212214031,1015.8869012301566 L 881.5236288753068,1025.8869012301536 M 881.5236319368682,1029.8869012301525 L 881.523639590772,1039.8869012301495 M 881.5236426523334,1043.8869012301484 L 881.5236503062371,1053.8869012301454 M 881.5236533677985,1057.8869012301443 L 881.5236610217022,1067.8869012301413 M 881.5236640832636,1071.8869012301402 L 881.5236717371673,1081.8869012301373 M 881.5236747987287,1085.8869012301361 L 881.5236824526324,1095.8869012301332 M 881.5236855141939,1099.886901230132 L 881.5236931680976,1109.886901230129 M 881.523696229659,1113.886901230128 L 881.5237038835627,1123.886901230125 M 881.5237069451241,1127.8869012301238 L 881.5237145990278,1137.8869012301209 M 881.5237176605892,1141.8869012301197 L 881.5237253144929,1151.8869012301168 M 881.5237283760544,1155.8869012301157 L 881.5237360299581,1165.8869012301127 M 881.5237390915195,1169.8869012301116 L 881.5237467454232,1179.8869012301086 M 881.5237498069846,1183.8869012301075 L 881.5237574608883,1193.8869012301045 M 881.5237605224497,1197.8869012301034 L 881.5237681763534,1207.8869012301004 M 881.5237712379148,1211.8869012300993 L 881.5237788918186,1221.8869012300963 M 881.52378195338,1225.8869012300952 L 881.5237896072837,1235.8869012300922 M 881.5237926688451,1239.886901230091 L 881.5238003227488,1249.8869012300881 M 881.5238033843102,1253.886901230087 L 881.5238110382139,1263.886901230084 M 881.5238140997753,1267.886901230083 L 881.523821753679,1277.88690123008 M 881.5238248152405,1281.8869012300788 L 881.5238324691442,1291.8869012300759 M 881.5238355307056,1295.8869012300747 L 881.5238431846093,1305.8869012300718 M 881.5238462461707,1309.8869012300706 L 881.5238474983082,1311.5228474983078 L 881.0573972835836,1313.2484968541335 L 879.8633135923754,1314.8623135923751 L 878.2494968541338,1316.056397283583 L 876.5238474983082,1316.5228474983078 L 875.7500450377848,1316.5228474983078 M 871.7500450377848,1316.5228474983078 L 861.7500450377848,1316.5228474983078 M 857.7500450377848,1316.5228474983078 L 847.7500450377848,1316.5228474983078 M 843.7500450377848,1316.5228474983078 L 833.7500450377848,1316.5228474983078 M 829.7500450377848,1316.5228474983078 L 819.7500450377848,1316.5228474983078 M 815.7500450377848,1316.5228474983078 L 805.7500450377848,1316.5228474983078 M 801.7500450377848,1316.5228474983078 L 791.7500450377848,1316.5228474983078 M 787.7500450377848,1316.5228474983078 L 777.7500450377848,1316.5228474983078 M 773.7500450377848,1316.5228474983078 L 763.7500450377848,1316.5228474983078 M 759.7500450377848,1316.5228474983078 L 749.7500450377848,1316.5228474983078 M 745.7500450377848,1316.5228474983078 L 735.7500450377848,1316.5228474983078 M 731.7500450377848,1316.5228474983078 L 721.7500450377848,1316.5228474983078 M 717.7500450377848,1316.5228474983078 L 707.7500450377848,1316.5228474983078 M 703.7500450377848,1316.5228474983078 L 693.7500450377848,1316.5228474983078 M 689.7500450377848,1316.5228474983078 L 679.7500450377848,1316.5228474983078 M 675.7500450377848,1316.5228474983078 L 665.7500450377848,1316.5228474983078 M 661.7500450377848,1316.5228474983078 L 651.7500450377848,1316.5228474983078 M 647.7500450377848,1316.5228474983078 L 637.7500450377848,1316.5228474983078 M 633.7500450377848,1316.5228474983078 L 623.7500450377848,1316.5228474983078 M 619.7500450377848,1316.5228474983078 L 609.7500450377848,1316.5228474983078 M 605.7500450377848,1316.5228474983078 L 595.7500450377848,1316.5228474983078 M 591.7500450377848,1316.5228474983078 L 581.7500450377848,1316.5228474983078 M 577.7500450377848,1316.5228474983078 L 567.7500450377848,1316.5228474983078 M 563.7500450377848,1316.5228474983078 L 553.7500450377848,1316.5228474983078 M 549.7500450377848,1316.5228474983078 L 539.7500450377848,1316.5228474983078 M 535.7500450377848,1316.5228474983078 L 525.7500450377848,1316.5228474983078 M 521.7500450377848,1316.5228474983078 L 511.75004503778484,1316.5228474983078 M 507.75004503778484,1316.5228474983078 L 497.75004503778484,1316.5228474983078 M 493.75004503778484,1316.5228474983078 L 483.75004503778484,1316.5228474983078 M 479.75004503778484,1316.5228474983078 L 469.75004503778484,1316.5228474983078 M 465.75004503778484,1316.5228474983078 L 455.75004503778484,1316.5228474983078 M 451.75004503778484,1316.5228474983078 L 441.75004503778484,1316.5228474983078 M 437.75004503778484,1316.5228474983078 L 427.75004503778484,1316.5228474983078 M 423.75004503778484,1316.5228474983078 L 413.75004503778484,1316.5228474983078 M 409.75004503778484,1316.5228474983078 L 399.75004503778484,1316.5228474983078 M 395.75004503778484,1316.5228474983078 L 385.75004503778484,1316.5228474983078 M 381.75004503778484,1316.5228474983078 L 371.75004503778484,1316.5228474983078 M 367.75004503778484,1316.5228474983078 L 357.75004503778484,1316.5228474983078 M 353.75004503778484,1316.5228474983078 L 343.75004503778484,1316.5228474983078 M 339.75004503778484,1316.5228474983078 L 329.75004503778484,1316.5228474983078 M 325.75004503778484,1316.5228474983078 L 315.75004503778484,1316.5228474983078 M 311.75004503778484,1316.5228474983078 L 301.75004503778484,1316.5228474983078 M 297.75004503778484,1316.5228474983078 L 287.75004503778484,1316.5228474983078 M 283.75004503778484,1316.5228474983078 L 273.75004503778484,1316.5228474983078 M 269.75004503778484,1316.5228474983078 L 259.75004503778484,1316.5228474983078 M 255.75004503778484,1316.5228474983078 L 245.75004503778484,1316.5228474983078 M 241.75004503778484,1316.5228474983078 L 231.75004503778484,1316.5228474983078 M 227.75004503778484,1316.5228474983078 L 217.75004503778484,1316.5228474983078 M 213.75004503778484,1316.5228474983078 L 203.75004503778484,1316.5228474983078 M 199.75004503778484,1316.5228474983078 L 189.75004503778484,1316.5228474983078 M 185.75004503778484,1316.5228474983078 L 175.75004503778484,1316.5228474983078 M 171.75004503778484,1316.5228474983078 L 161.75004503778484,1316.5228474983078 M 157.75004503778484,1316.5228474983078 L 147.75004503778484,1316.5228474983078 M 143.75004503778484,1316.5228474983078 L 133.75004503778484,1316.5228474983078 M 129.75004503778484,1316.5228474983078 L 119.75004503778484,1316.5228474983078 M 115.75004503778484,1316.5228474983078 L 105.75004503778484,1316.5228474983078 M 101.75004503778484,1316.5228474983078 L 91.75004503778484,1316.5228474983078 M 87.75004503778484,1316.5228474983078 L 77.75004503778484,1316.5228474983078 M 73.75004503778484,1316.5228474983078 L 63.750045037784844,1316.5228474983078 M 59.750045037784844,1316.5228474983078 L 49.750045037784844,1316.5228474983078 M 45.750045037784844,1316.5228474983078 L 35.750045037784844,1316.5228474983078 M 31.750045037784844,1316.5228474983078 L 21.750045037784844,1316.5228474983078 M 17.750045037784844,1316.5228474983078 L 7.750045037784844,1316.5228474983078 M 5.001000000000317,1316.5228474983078 M 3.793384184479625,1316.196423909093 L 3.2753506441746474,1316.056397283583 L 1.6615339059330556,1314.8623135923751 L 0.46745021472509474,1313.2484968541335 L 0.0010000000003179688,1311.5228474983078 L 0.0010028018676546057,1307.8621438073324 M 0.0010058634291172759,1303.8621438073335 L 0.0010135173327739512,1293.8621438073365 M 0.0010165788942366214,1289.8621438073376 L 0.0010242327978932967,1279.8621438073405 M 0.0010272943593559669,1275.8621438073417 L 0.0010349482630126422,1265.8621438073446 M 0.0010380098244753124,1261.8621438073458 L 0.0010456637281319877,1251.8621438073487 M 0.0010487252895946579,1247.8621438073499 L 0.0010563791932513332,1237.8621438073528 M 0.0010594407547140033,1233.862143807354 L 0.0010670946583706787,1223.862143807357 M 0.0010701562198333488,1219.862143807358 L 0.0010778101234900242,1209.862143807361 M 0.0010808716849526943,1205.8621438073621 L 0.0010885255886093697,1195.862143807365 M 0.0010915871500720398,1191.8621438073662 L 0.0010992410537287152,1181.8621438073692 M 0.0011023026151913853,1177.8621438073703 L 0.0011099565188480607,1167.8621438073733 M 0.0011130180803107308,1163.8621438073744 L 0.0011206719839674062,1153.8621438073774 M 0.0011237335454300763,1149.8621438073785 L 0.0011313874490867517,1139.8621438073815 M 0.0011344490105494218,1135.8621438073826 L 0.0011421029142060972,1125.8621438073856 M 0.0011451644756687673,1121.8621438073867 L 0.0011528183793254427,1111.8621438073897 M 0.0011558799407881128,1107.8621438073908 L 0.0011635338444447882,1097.8621438073937 M 0.0011665954059074583,1093.862143807395 L 0.0011742493095641337,1083.8621438073978 M 0.0011773108710268038,1079.862143807399 L 0.0011849647746834792,1069.862143807402 M 0.0011880263361461493,1065.862143807403 L 0.0011956802398028247,1055.862143807406 M 0.0011987418012654948,1051.8621438074072 L 0.0012063957049221702,1041.8621438074101 M 0.0012094572663848403,1037.8621438074113 L 0.0012171111700415157,1027.8621438074142 M 0.0012201727315041858,1023.8621438074154 L 0.0012278266351608612,1013.8621438074183 M 0.0012308881966235313,1009.8621438074194 L 0.0012385421002802067,999.8621438074224 M 0.0012416036617428768,995.8621438074235 L 0.0012492575653995522,985.8621438074265 M 0.0012523191268622223,981.8621438074276 L 0.0012599730305188977,971.8621438074306 M 0.0012630345919815678,967.8621438074317 L 0.0012706884956382432,957.8621438074347 M 0.0012737500571009133,953.8621438074358 L 0.0012814039607575887,943.8621438074388 M 0.0012844655222202588,939.8621438074399 L 0.0012921194258769342,929.8621438074429 M 0.0012951809873396043,925.862143807444 L 0.0013028348909962797,915.862143807447 M 0.0013058964524589498,911.8621438074481 L 0.0013135503561156252,901.862143807451 M 0.0013166119175782953,897.8621438074522 L 0.0013242658212349707,887.8621438074551 M 0.0013273273826976408,883.8621438074563 L 0.0013349812863543162,873.8621438074592 M 0.0013380428478169863,869.8621438074604 L 0.0013456967514736617,859.8621438074633 M 0.0013487583129363318,855.8621438074645 L 0.0013564122165930072,845.8621438074674 M 0.0013594737780556773,841.8621438074686 L 0.0013671276817123527,831.8621438074715 M 0.0013701892431750228,827.8621438074726 L 0.0013778431468316982,817.8621438074756 M 0.0013809047082943683,813.8621438074767 L 0.0013885586119510437,803.8621438074797 M 0.0013916201734137138,799.8621438074808 L 0.0013992740770703892,789.8621438074838 M 0.0014023356385330593,785.8621438074849 L 0.0014099895421897347,775.8621438074879 M 0.0014130511036524048,771.862143807489 L 0.0014207050073090802,761.862143807492 M 0.0014237665687717503,757.8621438074931 L 0.0014314204724284257,747.8621438074961 M 0.0014344820338910958,743.8621438074972 L 0.0014421359375477712,733.8621438075002 M 0.0014451974990104413,729.8621438075013 L 0.0014528514026671167,719.8621438075043 M 0.0014559129641297868,715.8621438075054 L 0.0014635668677864622,705.8621438075083 M 0.0014666284292491323,701.8621438075095 L 0.0014742823329058077,691.8621438075124 M 0.0014773438943684778,687.8621438075136 L 0.0014849977980251532,677.8621438075165 M 0.0014880593594878233,673.8621438075177 L 0.0014957132631444987,663.8621438075206 M 0.0014987748246071688,659.8621438075218 L 0.0015064287282638442,649.8621438075247 M 0.0015094902897265143,645.8621438075259 L 0.0015171441933831897,635.8621438075288 M 0.0015202057548458598,631.86214380753 L 0.0015278596585025352,621.8621438075329 M 0.0015309212199652053,617.862143807534 L 0.0015385751236218807,607.862143807537 M 0.0015416366850845508,603.8621438075381 L 0.0015492905887412262,593.8621438075411 M 0.0015523521502038963,589.8621438075422 L 0.0015600060538605717,579.8621438075452 M 0.0015630676153232418,575.8621438075463 L 0.0015707215189799172,565.8621438075493 M 0.0015737830804425873,561.8621438075504 L 0.0015814369840992627,551.8621438075534 M 0.0015844985455619328,547.8621438075545 L 0.0015921524492186082,537.8621438075575 M 0.0015952140106812783,533.8621438075586 L 0.0016028679143379537,523.8621438075616 M 0.0016059294758006238,519.8621438075627 L 0.0016135833794572992,509.86214380756564 M 0.0016166449409199693,505.86214380756684 L 0.0016242988445766447,495.8621438075698 M 0.0016273604060393148,491.862143807571 L 0.0016350143096959902,481.86214380757394 M 0.0016380758711586603,477.86214380757514 L 0.0016457297748153357,467.8621438075781 M 0.0016487913362780058,463.8621438075793 L 0.0016564452399346812,453.86214380758224 M 0.0016595068013973513,449.86214380758344 L 0.0016671607050540267,439.8621438075864 M 0.0016702222665166968,435.8621438075876 L 0.0016778761701733722,425.86214380759054 M 0.0016809377316360423,421.86214380759174 L 0.0016885916352927177,411.8621438075947 M 0.0016916531967553878,407.8621438075959 L 0.0016993071004120632,397.86214380759884 M 0.0017023686618747333,393.86214380760003 L 0.0017100225655314087,383.862143807603 M 0.0017130841269940788,379.8621438076042 L 0.0017207380306507542,369.86214380760714 M 0.0017237995921134243,365.86214380760833 L 0.0017314534957700997,355.8621438076113 M 0.0017345150572327698,351.8621438076125 L 0.0017421689608894452,341.86214380761544 M 0.0017452305223521153,337.86214380761663 L 0.0017528844260087907,327.8621438076196 M 0.0017559459874714608,323.8621438076208 L 0.0017635998911281362,313.86214380762374 M 0.0017666614525908063,309.86214380762493 L 0.0017743153562474817,299.8621438076279 M 0.0017773769177101518,295.8621438076291 L 0.0017850308213668272,285.86214380763204 M 0.0017880923828294973,281.86214380763323 L 0.0017957462864861726,271.8621438076362 M 0.0017988078479488428,267.8621438076374 L 0.0018064617516055181,257.86214380764034 M 0.0018095233130681883,253.8621438076415 L 0.0018171772167248636,243.86214380764443 M 0.0018202387781875338,239.8621438076456 L 0.0018278926818442091,229.86214380764852 M 0.0018309542433068793,225.8621438076497 L 0.0018386081469635546,215.86214380765261 M 0.0018416697084262248,211.86214380765378 L 0.0018493236120829001,201.8621438076567 M 0.0018523851735455703,197.86214380765787 L 0.0018600390772022456,187.8621438076608 M 0.0018631006386649158,183.86214380766197 L 0.0018707545423215911,173.8621438076649 M 0.0018738161037842613,169.86214380766606 L 0.0018814700074409366,159.86214380766899 M 0.0018845315689036068,155.86214380767015 L 0.0018921854725602821,145.86214380767308 M 0.0018952470340229523,141.86214380767424 L 0.0019029009376796276,131.86214380767717 M 0.0019059624991422978,127.86214380767834 L 0.0019136164027989731,117.86214380768126 M 0.0019166779642616433,113.86214380768243 L 0.0019243318679183186,103.86214380768536 M 0.0019273934293809888,99.86214380768652 L 0.0019350473330376641,89.86214380768945 M 0.0019381088945003343,85.86214380769061 L 0.0019457627981570096,75.86214380769354 M 0.0019488243596196798,71.86214380769471 L 0.001956478263276355,61.862143807697635 M 0.001959539824739025,57.86214380769881 L 0.0019671937283957004,47.862143807701734 M 0.0019702552898583706,43.86214380770291 L 0.001977909193515046,33.862143807705834 M 0.001980970754977716,29.862143807707007 L 0.0019886246586343914,19.862143807709934 M 0.0019916862200970616,15.862143807711107 L 0.001999340123753737,5.862143807714036 M 0.0020000000003179814,5.000000000000169 M 0.46845021472509474,3.2743506441744987 M 1.2715915399892659,2.188896648421766 L 1.662533905933056,1.660533905932907 L 3.2763506441746477,0.46645021472494586 L 5.002000000000318,1.6908696665041134e-13\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g></g><g transform=\"matrix(1, 0, 0, 1, 1510, 874.7477437457701)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 219,0 L 219,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 219,0 L 219,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 205, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87152)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.330078125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 0,0 L 0,17.875 L 26,17.875 L 26,0 L 0,0 z M 9.75,11.375 L 9.75,8.125 L 16.25,8.125 L 16.25,11.375 L 9.75,11.375 z M 16.25,13 L 16.25,16.25 L 9.75,16.25 L 9.75,13 L 16.25,13 z M 16.25,3.25 L 16.25,6.5 L 9.75,6.5 L 9.75,3.25 L 16.25,3.25 z M 8.125,3.25 L 8.125,6.5 L 1.625,6.5 L 1.625,3.25 L 8.125,3.25 z M 1.625,8.125 L 8.125,8.125 L 8.125,11.375 L 1.625,11.375 L 1.625,8.125 z M 17.875,8.125 L 24.375,8.125 L 24.375,11.375 L 17.875,11.375 L 17.875,8.125 z M 17.875,6.5 L 17.875,3.25 L 24.375,3.25 L 24.375,6.5 L 17.875,6.5 z M 1.625,13 L 8.125,13 L 8.125,16.25 L 1.625,16.25 L 1.625,13 z M 17.875,16.25 L 17.875,13 L 24.375,13 L 24.375,16.25 L 17.875,16.25 z\" fill=\"#ED8B00\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">search-ads-store</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">readonly-contextual-profile</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1120, 1042.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 279,0 L 279,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 279,0 L 279,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 265, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87153)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 65.356201171875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.666666666666666,17.333333333333332 Q 8.666666666666666,16.550925925925924 8.094907407407407,15.979166666666666 Q 7.523148148148148,15.407407407407407 6.7407407407407405,15.407407407407407 Q 5.958333333333333,15.407407407407407 5.3865740740740735,15.979166666666666 Q 4.814814814814815,16.550925925925924 4.814814814814815,17.333333333333332 Q 4.814814814814815,18.11574074074074 5.3865740740740735,18.6875 Q 5.958333333333333,19.25925925925926 6.7407407407407405,19.25925925925926 Q 7.523148148148148,19.25925925925926 8.094907407407407,18.6875 Q 8.666666666666666,18.11574074074074 8.666666666666666,17.333333333333332 z M 2.888888888888889,9.62962962962963 L 8.666666666666666,9.62962962962963 L 8.666666666666666,5.777777777777778 L 6.289351851851851,5.777777777777778 Q 6.09375,5.777777777777778 5.958333333333333,5.913194444444444 L 3.0243055555555554,8.847222222222221 Q 2.888888888888889,8.982638888888888 2.888888888888889,9.17824074074074 L 2.888888888888889,9.62962962962963 z M 22.148148148148145,17.333333333333332 Q 22.148148148148145,16.550925925925924 21.57638888888889,15.979166666666666 Q 21.00462962962963,15.407407407407407 20.22222222222222,15.407407407407407 Q 19.439814814814813,15.407407407407407 18.868055555555554,15.979166666666666 Q 18.296296296296294,16.550925925925924 18.296296296296294,17.333333333333332 Q 18.296296296296294,18.11574074074074 18.868055555555554,18.6875 Q 19.439814814814813,19.25925925925926 20.22222222222222,19.25925925925926 Q 21.00462962962963,19.25925925925926 21.57638888888889,18.6875 Q 22.148148148148145,18.11574074074074 22.148148148148145,17.333333333333332 z M 26,0.9629629629629629 L 26,16.37037037037037 Q 26,16.596064814814813 25.939814814814813,16.76909722222222 Q 25.87962962962963,16.94212962962963 25.736689814814813,17.047453703703702 Q 25.59375,17.15277777777778 25.488425925925924,17.22048611111111 Q 25.38310185185185,17.288194444444443 25.134837962962962,17.31076388888889 Q 24.886574074074073,17.333333333333332 24.796296296296294,17.34085648148148 Q 24.706018518518515,17.34837962962963 24.41261574074074,17.34085648148148 Q 24.119212962962962,17.333333333333332 24.074074074074073,17.333333333333332 Q 24.074074074074073,18.92824074074074 22.94560185185185,20.056712962962962 Q 21.81712962962963,21.185185185185183 20.22222222222222,21.185185185185183 Q 18.627314814814813,21.185185185185183 17.49884259259259,20.056712962962962 Q 16.37037037037037,18.92824074074074 16.37037037037037,17.333333333333332 L 10.592592592592592,17.333333333333332 Q 10.592592592592592,18.92824074074074 9.46412037037037,20.056712962962962 Q 8.335648148148147,21.185185185185183 6.7407407407407405,21.185185185185183 Q 5.145833333333333,21.185185185185183 4.017361111111111,20.056712962962962 Q 2.888888888888889,18.92824074074074 2.888888888888889,17.333333333333332 L 1.9259259259259258,17.333333333333332 Q 1.880787037037037,17.333333333333332 1.587384259259259,17.34085648148148 Q 1.2939814814814814,17.34837962962963 1.2037037037037037,17.34085648148148 Q 1.1134259259259258,17.333333333333332 0.865162037037037,17.31076388888889 Q 0.6168981481481481,17.288194444444443 0.5115740740740741,17.22048611111111 Q 0.40625,17.15277777777778 0.2633101851851852,17.047453703703702 Q 0.12037037037037036,16.94212962962963 0.06018518518518518,16.76909722222222 Q 0,16.596064814814813 0,16.37037037037037 Q 0,15.979166666666666 0.2858796296296296,15.693287037037036 Q 0.5717592592592592,15.407407407407407 0.9629629629629629,15.407407407407407 L 0.9629629629629629,10.592592592592592 Q 0.9629629629629629,10.472222222222221 0.9554398148148148,10.065972222222221 Q 0.9479166666666666,9.659722222222221 0.9554398148148148,9.494212962962962 Q 0.9629629629629629,9.328703703703702 0.9930555555555555,8.97511574074074 Q 1.0231481481481481,8.621527777777777 1.0908564814814814,8.418402777777777 Q 1.1585648148148147,8.215277777777777 1.3015046296296295,7.9594907407407405 Q 1.4444444444444444,7.703703703703703 1.6400462962962963,7.508101851851851 L 4.619212962962963,4.528935185185185 Q 4.905092592592593,4.243055555555555 5.379050925925926,4.047453703703703 Q 5.853009259259259,3.8518518518518516 6.259259259259259,3.8518518518518516 L 8.666666666666666,3.8518518518518516 L 8.666666666666666,0.9629629629629629 Q 8.666666666666666,0.5717592592592592 8.952546296296296,0.2858796296296296 Q 9.238425925925926,0 9.62962962962963,0 L 25.037037037037035,0 Q 25.42824074074074,0 25.71412037037037,0.2858796296296296 Q 26,0.5717592592592592 26,0.9629629629629629 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">adsOfferRouting</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">routing</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1360, 1378.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87154)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 22.017333984375, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 9.007874015748031,8.220472440944881 L 1.669291338582677,15.559055118110235 Q 1.5118110236220472,15.716535433070867 1.3070866141732282,15.716535433070867 Q 1.1023622047244095,15.716535433070867 0.9448818897637795,15.559055118110235 L 0.15748031496062992,14.771653543307087 Q 0,14.614173228346456 0,14.409448818897637 Q 0,14.204724409448819 0.15748031496062992,14.047244094488189 L 6.346456692913386,7.858267716535433 L 0.15748031496062992,1.669291338582677 Q 0,1.5118110236220472 0,1.3070866141732282 Q 0,1.1023622047244095 0.15748031496062992,0.9448818897637795 L 0.9448818897637795,0.15748031496062992 Q 1.1023622047244095,0 1.3070866141732282,0 Q 1.5118110236220472,0 1.669291338582677,0.15748031496062992 L 9.007874015748031,7.496062992125984 Q 9.165354330708661,7.653543307086614 9.165354330708661,7.858267716535433 Q 9.165354330708661,8.062992125984252 9.007874015748031,8.220472440944881 z M 26,15.417322834645669 L 26,16.4251968503937 Q 26,16.64566929133858 25.858267716535433,16.787401574803148 Q 25.716535433070867,16.929133858267715 25.496062992125985,16.929133858267715 L 10.377952755905511,16.929133858267715 Q 10.15748031496063,16.929133858267715 10.015748031496063,16.787401574803148 Q 9.874015748031496,16.64566929133858 9.874015748031496,16.4251968503937 L 9.874015748031496,15.417322834645669 Q 9.874015748031496,15.196850393700787 10.015748031496063,15.05511811023622 Q 10.15748031496063,14.913385826771654 10.377952755905511,14.913385826771654 L 25.496062992125985,14.913385826771654 Q 25.716535433070867,14.913385826771654 25.858267716535433,15.05511811023622 Q 26,15.196850393700787 26,15.417322834645669 z\" fill=\"#ED8B00\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">populateAdsOffer</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">script</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1160, 1546.74774374577)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87155)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 13.467041015625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatAdsResponse</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1160, 1714.74774374577)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87156)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 32.3203125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 24.375,22.75 C 25.268176470588234,22.75 26,22.018176470588234 26,21.125 L 26,1.625 C 26,0.7318235294117652 25.268176470588234,0 24.375,0 L 1.625,0 C 0.7318235294117648,0 0,0.7318235294117652 0,1.625 L 0,21.125 C 0,22.018176470588234 0.7318235294117647,22.75 1.625,22.75 z M 22.75,3.25 L 22.75,19.5 L 19.5,19.5 L 19.5,3.25 L 22.75,3.25 z M 17.875,3.25 L 17.875,19.5 L 14.624999999999998,19.5 L 14.624999999999998,3.25 L 17.875,3.25 z M 13,3.25 L 13,19.5 L 9.75,19.5 L 9.75,3.25 L 13,3.25 z M 8.125,6.5 L 3.25,10.562882352941175 L 3.25,2.4371176470588214 L 8.125,6.4999999999999964 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">adsOutbound</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">topic-outbound</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1120, 1210.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87157)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 15.64111328125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 9.007874015748031,8.220472440944881 L 1.669291338582677,15.559055118110235 Q 1.5118110236220472,15.716535433070867 1.3070866141732282,15.716535433070867 Q 1.1023622047244095,15.716535433070867 0.9448818897637795,15.559055118110235 L 0.15748031496062992,14.771653543307087 Q 0,14.614173228346456 0,14.409448818897637 Q 0,14.204724409448819 0.15748031496062992,14.047244094488189 L 6.346456692913386,7.858267716535433 L 0.15748031496062992,1.669291338582677 Q 0,1.5118110236220472 0,1.3070866141732282 Q 0,1.1023622047244095 0.15748031496062992,0.9448818897637795 L 0.9448818897637795,0.15748031496062992 Q 1.1023622047244095,0 1.3070866141732282,0 Q 1.5118110236220472,0 1.669291338582677,0.15748031496062992 L 9.007874015748031,7.496062992125984 Q 9.165354330708661,7.653543307086614 9.165354330708661,7.858267716535433 Q 9.165354330708661,8.062992125984252 9.007874015748031,8.220472440944881 z M 26,15.417322834645669 L 26,16.4251968503937 Q 26,16.64566929133858 25.858267716535433,16.787401574803148 Q 25.716535433070867,16.929133858267715 25.496062992125985,16.929133858267715 L 10.377952755905511,16.929133858267715 Q 10.15748031496063,16.929133858267715 10.015748031496063,16.787401574803148 Q 9.874015748031496,16.64566929133858 9.874015748031496,16.4251968503937 L 9.874015748031496,15.417322834645669 Q 9.874015748031496,15.196850393700787 10.015748031496063,15.05511811023622 Q 10.15748031496063,14.913385826771654 10.377952755905511,14.913385826771654 L 25.496062992125985,14.913385826771654 Q 25.716535433070867,14.913385826771654 25.858267716535433,15.05511811023622 Q 26,15.196850393700787 26,15.417322834645669 z\" fill=\"#ED8B00\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">invaildatedAdsOffer</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">script</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1440, 1546.74774374577)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87158)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.35986328125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">adsJavaScriptErr</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1760, 1042.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87159)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 18.21826171875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">ads-ProfileStoreErr</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1441, 1966.0137512423862)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 245,0 L 245,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 245,0 L 245,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 231, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87160)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.406494140625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">format-request-single-stream</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1480, 1042.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87161)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.9384765625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">profileRetrived</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1440, 1210.7477437457703)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87162)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 25.730712890625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 26,10.232421875 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.482421875,0 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.25,0.482421875 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 8.658203125,2.4375 7.3125,2.4375 Q 5.966796875,2.4375 5.0146484375,3.3896484375 Q 4.0625,4.341796875 4.0625,5.6875 Q 4.0625,7.033203125 5.0146484375,7.9853515625 Q 5.966796875,8.9375 7.3125,8.9375 Q 8.658203125,8.9375 9.6103515625,7.9853515625 Q 10.5625,7.033203125 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 23.1435546875,3.25 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.375,3.732421875 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">csc-calculations</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 287.2463887508461, 490.37157999915416)\"><rect x=\"0\" y=\"0\" width=\"265.50722249830795\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 259.50722249830795,0 C 261.745798749154,0 264.50722249830795,2.761423749153968 264.50722249830795,5 L 264.50722249830795,34.743159998307945 C 264.50722249830795,36.981736249153975 261.745798749154,39.743159998307945 259.50722249830795,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 259.50722249830795,0 C 261.745798749154,0 264.50722249830795,2.761423749153968 264.50722249830795,5 L 264.50722249830795,34.743159998307945 C 264.50722249830795,36.981736249153975 261.745798749154,39.743159998307945 259.50722249830795,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153996, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Request US Data Enhancement</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 296.3752950008461, 1204.004583747462)\"><rect x=\"0\" y=\"0\" width=\"247.24940999830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 241.24940999830793,0 C 243.48798624915395,0 246.24940999830793,2.761423749153968 246.24940999830793,5 L 246.24940999830793,34.743159998307945 C 246.24940999830793,36.981736249153975 243.48798624915395,39.743159998307945 241.24940999830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 241.24940999830793,0 C 243.48798624915395,0 246.24940999830793,2.761423749153968 246.24940999830793,5 L 246.24940999830793,34.743159998307945 C 246.24940999830793,36.981736249153975 243.48798624915395,39.743159998307945 241.24940999830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Parse US Data Enhancement</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 267.3987325008461, 2295.270591244079)\"><rect x=\"0\" y=\"0\" width=\"145.20253499830793\" height=\"40.743159998307945\" fill=\"transparent\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 5,0 L 139.20253499830793,0 C 141.44111124915395,0 144.20253499830793,2.761423749153968 144.20253499830793,5 L 144.20253499830793,34.743159998307945 C 144.20253499830793,36.981736249153975 141.44111124915395,39.743159998307945 139.20253499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"#E6F4FB\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 5,0 L 139.20253499830793,0 C 141.44111124915395,0 144.20253499830793,2.761423749153968 144.20253499830793,5 L 144.20253499830793,34.743159998307945 C 144.20253499830793,36.981736249153975 141.44111124915395,39.743159998307945 139.20253499830793,39.743159998307945 L 5,39.743159998307945 C 2.761423749153968,39.743159998307945 0,36.981736249153975 0,34.743159998307945 L 0,5 C 0,2.761423749153968 2.761423749153968,0 5,0 z\" fill=\"none\" stroke=\"#95C4EA\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.261423749153954, 11.261423749153968)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 17,0 L 17,17 L 0,17 z\" fill=\"none\" stroke=\"#CCCCCC\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,3 L 6,3 M 3,0 L 3,6\" fill=\"none\" stroke=\"black\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 6, 6)\"></path></g><text x=\"0\" y=\"13.665234375\" style=\"font: 500 16px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 26, 0)\">Send via SFTP</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1630, 706.7477437457701)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 219,0 L 219,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 219,0 L 219,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 205, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP87163)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.330078125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 0,0 L 0,17.875 L 26,17.875 L 26,0 L 0,0 z M 9.75,11.375 L 9.75,8.125 L 16.25,8.125 L 16.25,11.375 L 9.75,11.375 z M 16.25,13 L 16.25,16.25 L 9.75,16.25 L 9.75,13 L 16.25,13 z M 16.25,3.25 L 16.25,6.5 L 9.75,6.5 L 9.75,3.25 L 16.25,3.25 z M 8.125,3.25 L 8.125,6.5 L 1.625,6.5 L 1.625,3.25 L 8.125,3.25 z M 1.625,8.125 L 8.125,8.125 L 8.125,11.375 L 1.625,11.375 L 1.625,8.125 z M 17.875,8.125 L 24.375,8.125 L 24.375,11.375 L 17.875,11.375 L 17.875,8.125 z M 17.875,6.5 L 17.875,3.25 L 24.375,3.25 L 24.375,6.5 L 17.875,6.5 z M 1.625,13 L 8.125,13 L 8.125,16.25 L 1.625,16.25 L 1.625,13 z M 17.875,16.25 L 17.875,13 L 24.375,13 L 24.375,16.25 L 17.875,16.25 z\" fill=\"#ED8B00\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">search-model-year-store</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">readonly-contextual-profile</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 2200.513751242386)\"><path d=\"M 317,0 L 317,201.9862487576138 L 88,201.9862487576138 L 88,537.9862487576138 L 0,537.9862487576138 L 0,622.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 617.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 617.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 607.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 607.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 61.86171264214786, 229.87946064953752)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 2200.513751242386)\"><path d=\"M 317,0 L 317,201.9862487576138 L 88,201.9862487576138 L 88,537.9862487576138 L 0,537.9862487576138 L 0,622.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 617.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 617.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 607.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 607.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 61.86171264214786, 229.87946064953752)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1038.4999999999998, 2200.513751242386)\"><path d=\"M 587,0 L 587,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 267.36171264214784, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1012.3617126421476, 2536.513751242386)\"><path d=\"M 0,0 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1042.4999999999998, 2536.513751242386)\"><path d=\"M 0,0 L 0,50 L 280,50 L 280,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 286.12, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 286.12, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 286.12, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 286.12, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 109.86171264214786, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 738.5, 361.61473999746204)\"><path d=\"M 0,0 L 0,420.444921875 L 80,420.444921875 L 80,837.88984375\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 86.12, 832.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 86.12, 832.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 86.12, 822.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 86.12, 822.88984375)\"></path><g transform=\"matrix(1, 0, 0, 1, 9.861712642147857, 408.1936706499603)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 738.5, 361.61473999746204)\"><path d=\"M 0,0 L 0,56.81421000042303 L 800,56.81421000042303 L 800,110.62842000084612\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 806.12, 105.62842000084612)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 806.12, 105.62842000084612)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 806.12, 95.62842000084612)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 806.12, 95.62842000084612)\"></path><g transform=\"matrix(1, 0, 0, 1, 369.86171264214784, 44.56295877538339)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 94.5, 361.61473999746204)\"><path d=\"M 640,0 L 640,56.81421000042303 L 0,56.81421000042303 L 0,110.62842000084606\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 105.62842000084606)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 105.62842000084606)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 95.62842000084606)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 95.62842000084606)\"></path><g transform=\"matrix(1, 0, 0, 1, 293.86171264214784, 44.56295877538339)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 638.5, 361.61473999746204)\"><path d=\"M 96,0 L 96,801.4495056224621 L 0,801.4495056224621 L 0,1599.8990112449242\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1594.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1594.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1584.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1584.8990112449242)\"></path><g transform=\"matrix(1, 0, 0, 1, 21.861712642147857, 789.1982543974225)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 738.5, 361.61473999746204)\"><path d=\"M 0,0 L 0,801.4495056224621 L 224,801.4495056224621 L 224,1599.8990112449242\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 230.12, 1594.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 230.12, 1594.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 230.12, 1584.8990112449242)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 230.12, 1584.8990112449242)\"></path><g transform=\"matrix(1, 0, 0, 1, 81.86171264214786, 789.1982543974225)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 414.5, 361.61473999746204)\"><path d=\"M 320,0 L 320,63.62842000084606 L 0,63.62842000084606 L 0,124.25684000169207\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 119.25684000169207)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 119.25684000169207)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 109.25684000169207)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 109.25684000169207)\"></path><g transform=\"matrix(1, 0, 0, 1, 133.86171264214786, 51.377168775806425)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 487.36171264214784, 2032.5137512423862)\"><path d=\"M 0,0 L 0,705.9862487576138 L 581,705.9862487576138 L 581,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 674.8794606495376)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 487.36171264214784, 2032.5137512423862)\"><path d=\"M 0,0 L 0,705.9862487576138 L 581,705.9862487576138 L 581,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 617.2582873578522, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 674.8794606495376)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 767.4999999999998, 2032.5137512423862)\"><path d=\"M 0,0 L 0,701.5 L 155,701.5 L 155,228 L 275,228 L 275,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 281.12, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 281.12, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 281.12, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 281.12, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 13.361712642147857, 689.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 738.5, 361.61473999746204)\"><path d=\"M 0,0 L 0,40.88526000253796 L 72,40.88526000253796 L 72,2040.885260002538 L 304,2040.885260002538 L 304,2103.899011244924\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 310.12, 2098.899011244924)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 310.12, 2098.899011244924)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 310.12, 2088.899011244924)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 310.12, 2088.899011244924)\"></path><g transform=\"matrix(1, 0, 0, 1, 41.86171264214786, 1121.1982543974225)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1012.3617126421476, 2368.513751242386)\"><path d=\"M 0,0 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 788.3617126421478, 1243.2477437457699)\"><path d=\"M 0,0 L 0,1159.2522562542301 L 224,1159.2522562542301 L 224,1222.2660074966163\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1217.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1217.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1207.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1207.2660074966163)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 711.6340087774986)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 838.3617126421478, 2032.5137512423862)\"><path d=\"M 0,0 L 0,705.9862487576138 L 230,705.9862487576138 L 230,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 499.3794606495375)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 838.3617126421478, 2032.5137512423862)\"><path d=\"M 0,0 L 0,705.9862487576138 L 230,705.9862487576138 L 230,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 266.25828735785217, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 499.3794606495375)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1026.3617126421477, 2032.5137512423862)\"><path d=\"M 14,0 L 14,701.5 L 0,701.5 L 0,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 17.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 22.258287357852144, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 22.258287357852144, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 22.258287357852144, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 22.258287357852144, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 602.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 2032.5137512423862)\"><path d=\"M 38.5,0 L 38.5,41.986248757613794 L 96,41.986248757613794 L 96,369.9862487576138 L 88,369.9862487576138 L 88,705.9862487576138 L 0,705.9862487576138 L 0,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 61.86171264214786, 395.6294606495375)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 2032.5137512423862)\"><path d=\"M 38.5,0 L 38.5,41.986248757613794 L 96,41.986248757613794 L 96,369.9862487576138 L 88,369.9862487576138 L 88,705.9862487576138 L 0,705.9862487576138 L 0,790.2614237491543\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 785.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 775.2614237491543)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 775.2614237491543)\"></path><g transform=\"matrix(1, 0, 0, 1, 61.86171264214786, 395.6294606495375)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1038.4999999999998, 2032.5137512423862)\"><path d=\"M 305.5,0 L 305.5,701.5 L 160,701.5 L 160,228 L 0,228 L 0,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 220.61171264214786, 689.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1908.361712642148, 39.24315999830794)\"><path d=\"M 0,0 L 0,97.0000000000002\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92.0000000000002)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92.0000000000002)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82.0000000000002)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82.0000000000002)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496046)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 734.5, 207.24315999830813)\"><path d=\"M 1106,0 L 1106,56.814210000423 L 0,56.814210000423 L 0,110.62842000084598\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 105.62842000084598)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 105.62842000084598)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 95.62842000084598)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 95.62842000084598)\"></path><g transform=\"matrix(1, 0, 0, 1, 526.8617126421478, 44.562958775383365)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 2032.5, 207.24315999830813)\"><path d=\"M 0,0 L 0,49.99999999999997 L 66,49.99999999999997 L 66,96.99999999999997\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 72.12, 91.99999999999997)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 72.12, 91.99999999999997)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 72.12, 81.99999999999997)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 72.12, 81.99999999999997)\"></path><g transform=\"matrix(1, 0, 0, 1, 2.8617126421478574, 37.74874877496033)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1094.5, 375.2431599983081)\"><path d=\"M 1000,0 L 1000,2363.2568400016917 L 0,2363.2568400016917 L 0,2447.532014993232\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 2442.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 2442.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 2432.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 2432.532014993232)\"></path><g transform=\"matrix(1, 0, 0, 1, 973.8617126421478, 1713.0147562715767)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 68.36171264214786, 543.2431599983081)\"><path d=\"M 0,0 L 0,2195.2568400016917 L 1000,2195.2568400016917 L 1000,2279.532014993232\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 1036.258287357852, 2274.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 1036.258287357852, 2274.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 1036.258287357852, 2264.532014993232)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 1036.258287357852, 2264.532014993232)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 1629.0147562715767)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1672.5, 543.2431599983081)\"><path d=\"M 0,0 L 0,868.4495056224621 L 266,868.4495056224621 L 266,1733.8990112449244\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 272.12, 1728.8990112449244)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 272.12, 1728.8990112449244)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 272.12, 1718.8990112449244)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 272.12, 1718.8990112449244)\"></path><g transform=\"matrix(1, 0, 0, 1, 102.86171264214786, 856.1982543974225)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1538.5, 543.2431599983081)\"><path d=\"M 0,0 L 0,259.2568400016919 L 224,259.2568400016919 L 224,427.2568400016919 L 184,427.2568400016919 L 184,1099.256840001692 L 24,1099.256840001692 L 24,1418.270591244078\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 30.12, 1413.270591244078)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 30.12, 1413.270591244078)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 30.12, 1403.270591244078)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 30.12, 1403.270591244078)\"></path><g transform=\"matrix(1, 0, 0, 1, 153.86171264214786, 646.3840443969996)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1404.5, 543.2431599983081)\"><path d=\"M 0,0 L 0,81.00229187373111 L 334,81.00229187373111 L 334,159.0045837474621\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 340.12, 154.0045837474621)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 340.12, 154.0045837474621)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 340.12, 144.0045837474621)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 340.12, 144.0045837474621)\"></path><g transform=\"matrix(1, 0, 0, 1, 136.86171264214786, 68.75104064869147)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1254.5, 941.2477437457702)\"><path d=\"M 255.99999999999977,0 L 255.99999999999977,50 L 0,50 L 0,96.99999999999989\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 81.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 81.99999999999989)\"></path><g transform=\"matrix(1, 0, 0, 1, 101.86171264214786, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1514.4999999999998, 941.2477437457702)\"><path d=\"M 0,0 L 0,50 L 64,50 L 64,96.99999999999989\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 70.12, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 70.12, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 70.12, 81.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 70.12, 81.99999999999989)\"></path><g transform=\"matrix(1, 0, 0, 1, 1.8617126421478574, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1722.4999999999998, 941.2477437457702)\"><path d=\"M 0,0 L 0,50 L 136,50 L 136,96.99999999999989\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 142.12, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 142.12, 91.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 142.12, 81.99999999999989)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 142.12, 81.99999999999989)\"></path><g transform=\"matrix(1, 0, 0, 1, 37.86171264214786, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1392.5, 1109.2477437457703)\"><path d=\"M 0,0 L 0,40 L 546,40 L 546,1167.8944274974622\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 552.12, 1162.8944274974622)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 552.12, 1162.8944274974622)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 552.12, 1152.8944274974622)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 552.12, 1152.8944274974622)\"></path><g transform=\"matrix(1, 0, 0, 1, 515.8617126421478, 300.19596252369155)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1124.5, 1109.2477437457703)\"><path d=\"M 0,0 L 0,40 L 230,40 L 230,197.25225625422968 L 198,197.25225625422968 L 198,365.2522562542297 L 270,365.2522562542297 L 270,533.2522562542297 L 438,533.2522562542297 L 438,852.2660074966159\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 444.12, 847.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 444.12, 847.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 444.12, 837.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 444.12, 837.2660074966159)\"></path><g transform=\"matrix(1, 0, 0, 1, 219.24246013622601, 353.00100502919)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1186.0283793088145, 1109.24774374577)\"><path d=\"M 0,0 L 0,50 L 4.6666666666667425,50 L 4.6666666666667425,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 29.304954024518885, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 38.591620691185625, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 38.591620691185625, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 38.591620691185625, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 38.591620691185625, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1303.1666666666667, 1109.24774374577)\"><path d=\"M 0,0 L 0,50 L 235.33333333333303,50 L 235.33333333333303,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 241.45333333333303, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 241.45333333333303, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 241.45333333333303, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 241.45333333333303, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 87.52837930881438, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1254.5, 1445.24774374577)\"><path d=\"M 105.99999999999977,0 L 105.99999999999977,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 26.861712642147857, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1515.3617126421477, 1445.24774374577)\"><path d=\"M 14,0 L 14,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 24.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 29.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 29.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 29.258287357852144, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 29.258287357852144, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1228.361712642148, 1613.24774374577)\"><path d=\"M 0,0 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.25828735785214, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1124.5, 1277.2477437457703)\"><path d=\"M 0,0 L 0,365.2522562542297 L 438,365.2522562542297 L 438,684.2660074966159\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 444.12, 679.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 444.12, 679.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 444.12, 669.2660074966159)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 444.12, 669.2660074966159)\"></path><g transform=\"matrix(1, 0, 0, 1, 164.49471639045592, 353.00100502919)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1268.361712642148, 1277.24774374577)\"><path d=\"M 14,0 L 14,701.5 L 0,701.5 L 0,228 L 239.99999999999977,228 L 239.99999999999977,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 276.25828735785194, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 276.25828735785194, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 276.25828735785194, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 276.25828735785194, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 670.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1512.3617126421477, 2032.5137512423862)\"><path d=\"M 40,0 L 40,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 11.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 16.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 16.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 16.258287357852144, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 16.258287357852144, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1421.3617126421477, 1277.24774374577)\"><path d=\"M 0,0 L 0,50 L 14,50 L 14,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 24.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 43.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 43.25828735785214, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 43.25828735785214, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 43.25828735785214, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1534.4999999999998, 1277.24774374577)\"><path d=\"M 94,0 L 94,701.5 L 80,701.5 L 80,228 L 0,228 L 0,265\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 260)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 250)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 250)\"></path><g transform=\"matrix(1, 0, 0, 1, 67.86171264214786, 642.2487487749604)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 388.36171264214784, 529.614739997462)\"><path d=\"M 0,0 L 1.1368683772161603e-13,669.88984375\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.258287357852254, 664.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.258287357852254, 664.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.258287357852254, 654.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.258287357852254, 654.88984375)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 324.1936706499603)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 418.5, 529.614739997462)\"><path d=\"M 0,0 L 0,336.444921875 L 400,336.444921875 L 400,669.88984375\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 406.12, 664.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 406.12, 664.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 406.12, 654.88984375)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 406.12, 654.88984375)\"></path><g transform=\"matrix(1, 0, 0, 1, 169.86171264214786, 324.1936706499603)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 788.3617126421478, 1243.2477437457699)\"><path d=\"M 0,0 L 0,1159.2522562542301 L 224,1159.2522562542301 L 224,1222.2660074966163\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1217.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1217.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1207.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 260.2582873578521, 1207.2660074966163)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 711.6340087774986)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 334.5000000000001, 1243.2477437457699)\"><path d=\"M 80,0 L 80,525.2614237491546 L 0,525.2614237491546 L 0,1047.522847498309\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 5.500000000000001, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1042.522847498309)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1042.522847498309)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1032.522847498309)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 10.120000000000001, 1032.522847498309)\"></path><g transform=\"matrix(1, 0, 0, 1, 13.861712642147971, 513.010172524115)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 418.5000000000001, 1243.2477437457699)\"><path d=\"M 0,0 L 0,567.2522562542301 L 823.9999999999999,567.2522562542301 L 823.9999999999999,718.2660074966163\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 830.1199999999999, 713.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 830.1199999999999, 713.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 830.1199999999999, 703.2660074966163)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 830.1199999999999, 703.2660074966163)\"></path><g transform=\"matrix(1, 0, 0, 1, 174.49471639045592, 555.0010050291905)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1596.3617126421477, 773.2477437457702)\"><path d=\"M 16,0 L 16,50 L 0,50 L 0,97\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 23.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 28.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 28.258287357852144, 92)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 28.258287357852144, 82)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 28.258287357852144, 82)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496036)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1812.3617126421477, 773.2477437457702)\"><path d=\"M 0,0 L 0,701.4999999999999 L 16,701.4999999999999 L 16,264.9999999999999\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357852143, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 52.25828735785214, 259.9999999999999)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 52.25828735785214, 259.9999999999999)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 52.25828735785214, 249.9999999999999)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 52.25828735785214, 249.9999999999999)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 603.2487487749603)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g></g></g><clipPath id=\"mainClip87137\"><rect x=\"0\" y=\"0\" width=\"100\" height=\"125\"></rect></clipPath><clipPath id=\"CLIP87139\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87140\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87141\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87142\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87143\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87144\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87145\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87146\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87147\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87148\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87149\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87150\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87151\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87152\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87153\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87154\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87155\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87156\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87157\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87158\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87159\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87160\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87161\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87162\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP87163\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath></svg>"}]]>
    </diagram-state>
    <job-specification-version>
        <version>1.0</version>
        <dmip-version-since>1.0</dmip-version-since>
        <organization>FICO</organization>
    </job-specification-version>
    <name>BmoCreditRiskRouting</name>
    <description>Credit Risk routing logic with FDO Data services.</description>
    <job-params>
        <parameter>
            <name>dmip.non.tx.job.acker.enforced</name>
            <value>false</value>
        </parameter>
        <parameter>
            <name>dmip.state.qos.consistency</name>
            <value>true</value>
        </parameter>
        <parameter>
            <name>dmip.state.qos.persistence</name>
            <value>Immediate</value>
        </parameter>
        <parameter>
            <name>dmip.visualization.store.rolling.unit</name>
            <value>Day</value>
        </parameter>
        <parameter>
            <name>topology.worker.childopts</name>
            <value>-Dmonitored=true -DmetricsToMonitor=J:BmoCreditRiskRouting:CL,S:s-2-B-5292:E,S:s-3-B-5292:E</value>
        </parameter>
        <parameter>
            <name>dmip.cache.group.name</name>
            <value>CreditRiskRetail</value>
        </parameter>
        <parameter>
            <name>topology.stats.sample.rate</name>
            <value>1</value>
        </parameter>
    </job-params>
    <job-steps>
        <job-step parallelism-hint="1" processing-iteration-count="1" xsi:type="topic-inbound-job-step">
            <description>The topic inbound job step consumes DMP Streaming tuples from the specified DPC topic and emits them to be processed by the subsequent downstream job steps.</description>
            <job-step-id>ingress</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="topic-inbound-job-step-params">
                    <topic-name>creditRiskIN</topic-name>
                    <time-unit>HOURS</time-unit>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <generated-fields>
                            <generated-field xsi:type="topic-inbound-js-generated-field">
                                <output-stream-id>s-6-B</output-stream-id>
                                <name>field-data</name>
                                <output-field>
                                    <name>field-data</name>
                                    <data-type>any</data-type>
                                </output-field>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-6-B</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>createIsRef</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>INBOUND</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.injobstep.topic.TopicInboundStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="1" xsi:type="rest-job-step">
            <description>Sends a REST request to a specified endpoint. The response from the REST endpoint and the HTTP response code are both returned as generated fields.</description>
            <job-step-id>invokeDM-CanadianRetail</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="rest-job-step-params">
                    <rest-auth-type>dmp</rest-auth-type>
                    <client-id secure="true">1u5S4KDyW5qaZkH7G5YMMQ==</client-id>
                    <secret secure="true">iilyabbcFOvYLRzpSBygyywbkXnHZ8EuaPLIsESnu/u9u9TUHL8CpTf0/Jh6AiG0</secret>
                    <bearer-token-url>https://iam-svc.dms.cact1.ficoanalyticcloud.com/registration/rest/client/token</bearer-token-url>
                    <endpoint-uri-template>https://dm-40pmzarfufx.dms.cact1.ficoanalyticcloud.com/Bvtnuaf4nH0onLFkDfiGxdsJHNc/rest/service/processWithDecisionFlow?solutionID=3x75pu9w5s2&amp;corrId={corrId}</endpoint-uri-template>
                    <header-template>
                        <![CDATA[Content-Type: application/json]]>
                    </header-template>
                    <timeout>7450</timeout>
                    <method>POST</method>
                    <error-stream-name>s-3-E</error-stream-name>
                    <connection-attempts>5</connection-attempts>
                    <sleep-multiplier>500</sleep-multiplier>
                    <max-sleep-interval>500</max-sleep-interval>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="rest-msg-or-path-js-required-field">
                                <name>msg-or-path</name>
                                <input-field>field-data</input-field>
                            </required-field>
                            <required-field xsi:type="rest-is-ref-js-required-field">
                                <name>is-ref</name>
                                <input-field>is-ref</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="rest-response-code-js-generated-field">
                                <output-stream-id>s-1-B</output-stream-id>
                                <name>rest-response-code</name>
                                <output-field>rest-response-code</output-field>
                                <data-type>integer</data-type>
                            </generated-field>
                            <generated-field xsi:type="rest-response-js-generated-field">
                                <output-stream-id>s-1-B</output-stream-id>
                                <name>rest-response</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-1-B</stream-id>
                    <output-fields>
                        <field data-type="any" keep="false">field-data</field>
                        <field data-type="boolean" keep="false">is-ref</field>
                        <field data-type="string" keep="false">corrId</field>
                        <field data-type="string" keep="false">call-type</field>
                        <field data-type="date" keep="false">steamProcessingDT</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>createErrorField-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                        <stream-consumer>
                            <consuming-job-step-id>esDEBUG</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-3-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>E0003-REST-Invocation-Error</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.rest.RestStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>createIsRef</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>field-data</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-4-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>is-ref</output-field>
                                <data-type>boolean</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[false]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-4-B</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>corrId</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="topic-outbound-job-step">
            <description>The topic outbound job step generates DMP Streaming tuples which are sent to the specified topic.</description>
            <job-step-id>egress-5292</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="topic-outbound-job-step-params">
                    <topic-name>creditRiskOUT</topic-name>
                    <time-unit>HOURS</time-unit>
                    <replication-factor>0</replication-factor>
                    <acknowledgement-level>Platform Default</acknowledgement-level>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.topicoutbound.TopicOutboundStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="topic-outbound-job-step">
            <description>The topic outbound job step generates DMP Streaming tuples which are sent to the specified topic.</description>
            <job-step-id>egressERROR-5292</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="topic-outbound-job-step-params">
                    <topic-name>creditRiskOUT</topic-name>
                    <time-unit>HOURS</time-unit>
                    <replication-factor>0</replication-factor>
                    <acknowledgement-level>Platform Default</acknowledgement-level>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.topicoutbound.TopicOutboundStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>createOtherFields-5292</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>error-messageMOD</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-2-B-5292</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${error\-messageMOD!"NULL-DMPS-ERROR-MESSAGE"}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>error-messageMOD</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-2-B-5292</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>rest-response-code</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${"500"}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>error-messageMOD</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-2-B-5292</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>error-message</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${error\-messageMOD!"DMPS-ERROR-STREAM-ERROR-MESSAGE-WAS-NULL"}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-2-B-5292</stream-id>
                    <output-fields>
                        <field data-type="string" keep="false">error-messageMOD</field>
                        <field data-type="string" keep="true">rest-response</field>
                        <field data-type="string" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>egressERROR-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                        <stream-consumer>
                            <consuming-job-step-id>esERRORS</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>createErrorField-5292</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-3-B-5292</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${rest\-response!"NULL-REST-RESPONSE-TO-DMPS"}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>rest-response-code</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-3-B-5292</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>rest-response-code</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${rest\-response\-code!}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-3-B-5292</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>error-message</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${""}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-3-B-5292</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">rest-response</field>
                        <field data-type="string" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>egress-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                        <stream-consumer>
                            <consuming-job-step-id>js-2</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="0" xsi:type="routing-job-step">
            <description>The routing job step takes the incoming tuples and route them on separate output streams by writing expressions that control which tuples go on which output streams.</description>
            <job-step-id>callTypeRouting</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="routing-job-step-params">
                    <functionScript>
                        <![CDATA[function filter(fields) {
	
	/////////////////////////////////////////////////
	// route payload according to call type
	/////////////////////////////////////////////////
	
	var isOutlierCase = true;
	
	var isCanadianRetail = fields.get('call-type').toLowerCase() == "canadianretail";
	var isCanadianCommercial = fields.get('call-type').toLowerCase() == "canadiancommercial";
	
	var isUsRetail = fields.get('call-type').toLowerCase() == "usretail";
	var isUsCommercial = fields.get('call-type').toLowerCase() == "uscommercial";
	
	if (!isCanadianRetail & !isCanadianCommercial & !isUsRetail & !isUsCommercial)
		throw ("routing outlier case");
	
	var map = {};
	
    map['strCanadianRetail'] = isCanadianRetail;
	map['strCanadianCommercial'] = isCanadianCommercial;
	
	map['strUsRetail'] = isUsRetail;
	
	map['strUsCommercial'] = isUsCommercial;
	
	return map;
}]]>
                    </functionScript>
                    <functionLanguage>JAVASCRIPT</functionLanguage>
                    <error-stream-name>s-1-E</error-stream-name>
                </job-step-params>
            </configuration>
            <job-step-links>
                <out-stream stream-type="error">
                    <stream-id>s-1-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>E0002-Payload-Routing-Error</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>strCanadianRetail</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>csc-Routing</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                        <stream-consumer>
                            <consuming-job-step-id>format-request-log</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>strCanadianCommercial</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>invokeDM-CanadianCommercial</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>strUsRetail</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>invokeDM-UsRetail</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>strUsCommercial</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>GenerateRequest-1791</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.routing.RoutingStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" xsi:type="script-job-step">
            <description>The script job step uses JSR223 specification implemented in JDK to execute different languages script and get result added to the output stream.</description>
            <job-step-id>determine-call-type</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="script-job-step-params">
                    <functionScript>
                        <![CDATA[function initializeTuple() {
	// empty.
}

function executeIteration(fieldData) {

	/////////////////////////////////////////////////
	// determine call type.
	/////////////////////////////////////////////////
	var jsonObj = JSON.parse(fieldData);
	
	var isCanadianRetail =  (jsonObj.rfs_INTERFACE.CAN != null && jsonObj.rfs_INTERFACE.CAN.RETAIL_CAN != null) ? true : false;
	
	var isCanadianCommercial =  (jsonObj.rfs_INTERFACE.CAN != null && jsonObj.rfs_INTERFACE.CAN.COMMERCIAL_CAN != null) ? true : false;
	
	var isUsRetail =  (jsonObj.rfs_INTERFACE.US != null &&  jsonObj.rfs_INTERFACE.US.RETAIL_US != null) ? true : false;
	
	var isUsCommercial =  (jsonObj.rfs_INTERFACE.US != null &&  jsonObj.rfs_INTERFACE.US.COMMERCIAL_US != null) ? true : false;
	
	var result = "UNKNOWN DMPS CALL-TYPE!";
	
	if (isCanadianRetail)
		result = "CanadianRetail";
	else if (isCanadianCommercial)
		result = "CanadianCommercial";
	else if (isUsRetail)
		result = "UsRetail";
	else if (isUsCommercial)
		result = "UsCommercial";
	else
		throw result;
	
	return result;
}]]>
                    </functionScript>
                    <functionLanguage>JAVASCRIPT</functionLanguage>
                    <error-stream-name>s-2-E</error-stream-name>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="script-input-js-required-field">
                                <name>script-input-field</name>
                                <input-field>field-data</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="script-js-generated-field">
                                <output-stream-id>s-2-B</output-stream-id>
                                <name>script-output-field</name>
                                <output-field>call-type</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-2-B</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>callTypeRouting</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-2-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>E0001-Call-Type-Identification-Error</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.script.ScriptStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="1" xsi:type="rest-job-step">
            <description>Sends a REST request to a specified endpoint. The response from the REST endpoint and the HTTP response code are both returned as generated fields.</description>
            <job-step-id>invokeDM-CanadianCommercial</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="rest-job-step-params">
                    <rest-auth-type>dmp</rest-auth-type>
                    <client-id secure="true">1u5S4KDyW5qaZkH7G5YMMQ==</client-id>
                    <secret secure="true">iilyabbcFOvYLRzpSBygyywbkXnHZ8EuaPLIsESnu/u9u9TUHL8CpTf0/Jh6AiG0</secret>
                    <bearer-token-url>https://iam-svc.dms.cact1.ficoanalyticcloud.com/registration/rest/client/token</bearer-token-url>
                    <endpoint-uri-template>https://dm-40qb3lh8fis.dms.cact1.ficoanalyticcloud.com/Bvtnuaf4nH0onLFkDfiGxdsJHNc/rest/service/processWithDecisionFlow?solutionID=3x75pu9w5s2&amp;corrId={corrId}</endpoint-uri-template>
                    <header-template>
                        <![CDATA[Content-Type: application/json]]>
                    </header-template>
                    <timeout>7450</timeout>
                    <method>POST</method>
                    <error-stream-name>s-4-E</error-stream-name>
                    <connection-attempts>5</connection-attempts>
                    <sleep-multiplier>500</sleep-multiplier>
                    <max-sleep-interval>500</max-sleep-interval>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="rest-msg-or-path-js-required-field">
                                <name>msg-or-path</name>
                                <input-field>field-data</input-field>
                            </required-field>
                            <required-field xsi:type="rest-is-ref-js-required-field">
                                <name>is-ref</name>
                                <input-field>is-ref</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="rest-response-code-js-generated-field">
                                <output-stream-id>s-5-B</output-stream-id>
                                <name>rest-response-code</name>
                                <output-field>rest-response-code</output-field>
                                <data-type>integer</data-type>
                            </generated-field>
                            <generated-field xsi:type="rest-response-js-generated-field">
                                <output-stream-id>s-5-B</output-stream-id>
                                <name>rest-response</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-5-B</stream-id>
                    <output-fields>
                        <field data-type="any" keep="false">field-data</field>
                        <field data-type="boolean" keep="false">is-ref</field>
                        <field data-type="string" keep="false">corrId</field>
                        <field data-type="date" keep="false">streamProcessingDT</field>
                        <field data-type="string" keep="false">call-type</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>createErrorField-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                        <stream-consumer>
                            <consuming-job-step-id>esDEBUG</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-4-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>E0003-REST-Invocation-Error</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.rest.RestStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>E0001-Call-Type-Identification-Error</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>error-message</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-7-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>error-messageMOD</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${"E0001 - Call Type Identification Error "}${error\-message!}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-7-B</stream-id>
                    <output-fields>
                        <field data-type="string" keep="false">error-message</field>
                        <field data-type="string" keep="true">error-messageMOD</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>createOtherFields-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>E0003-REST-Invocation-Error</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>error-message</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-8-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>error-messageMOD</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${"E0003 - REST Invocation Error "}${error\-message!}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-8-B</stream-id>
                    <output-fields>
                        <field data-type="string" keep="false">error-message</field>
                        <field data-type="string" keep="true">error-messageMOD</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>createOtherFields-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>E0002-Payload-Routing-Error</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>error-message</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-9-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>error-messageMOD</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[E0002 - Payload Routing Error

${error\-message!}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-9-B</stream-id>
                    <output-fields>
                        <field data-type="string" keep="false">error-message</field>
                        <field data-type="string" keep="true">error-messageMOD</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>createOtherFields-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="1" xsi:type="rest-job-step">
            <description>Sends a REST request to a specified endpoint. The response from the REST endpoint and the HTTP response code are both returned as generated fields.</description>
            <job-step-id>invokeDM-UsRetail</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="rest-job-step-params">
                    <rest-auth-type>dmp</rest-auth-type>
                    <client-id secure="true">1u5S4KDyW5qaZkH7G5YMMQ==</client-id>
                    <secret secure="true">iilyabbcFOvYLRzpSBygyywbkXnHZ8EuaPLIsESnu/u9u9TUHL8CpTf0/Jh6AiG0</secret>
                    <bearer-token-url>https://iam-svc.dms.cact1.ficoanalyticcloud.com/registration/rest/client/token</bearer-token-url>
                    <endpoint-uri-template>https://dm-40q0bminbff.dms.cact1.ficoanalyticcloud.com/Bvtnuaf4nH0onLFkDfiGxdsJHNc/rest/service/processWithDecisionFlow?solutionID=3x75pu9w5s2&amp;corrId={corrId}</endpoint-uri-template>
                    <header-template>
                        <![CDATA[Content-Type: application/json]]>
                    </header-template>
                    <timeout>7450</timeout>
                    <method>POST</method>
                    <error-stream-name>s-5-E</error-stream-name>
                    <connection-attempts>5</connection-attempts>
                    <sleep-multiplier>500</sleep-multiplier>
                    <max-sleep-interval>500</max-sleep-interval>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="rest-msg-or-path-js-required-field">
                                <name>msg-or-path</name>
                                <input-field>field-data</input-field>
                            </required-field>
                            <required-field xsi:type="rest-is-ref-js-required-field">
                                <name>is-ref</name>
                                <input-field>is-ref</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="rest-response-code-js-generated-field">
                                <output-stream-id>s-10-B</output-stream-id>
                                <name>rest-response-code</name>
                                <output-field>rest-response-code</output-field>
                                <data-type>integer</data-type>
                            </generated-field>
                            <generated-field xsi:type="rest-response-js-generated-field">
                                <output-stream-id>s-10-B</output-stream-id>
                                <name>rest-response</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-10-B</stream-id>
                    <output-fields>
                        <field data-type="any" keep="false">field-data</field>
                        <field data-type="boolean" keep="false">is-ref</field>
                        <field data-type="string" keep="false">corrId</field>
                        <field data-type="date" keep="false">streamProcessingDT</field>
                        <field data-type="string" keep="false">call-type</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>esDEBUG</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                        <stream-consumer>
                            <consuming-job-step-id>createErrorField-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-5-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>E0003-REST-Invocation-Error</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.rest.RestStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="1" xsi:type="rest-job-step">
            <description>Sends a REST request to a specified endpoint. The response from the REST endpoint and the HTTP response code are both returned as generated fields.</description>
            <job-step-id>invokeDM-UsCommercial</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="rest-job-step-params">
                    <rest-auth-type>dmp</rest-auth-type>
                    <client-id secure="true">QtFr7GdPjb6o6rELTUgzcQ==</client-id>
                    <secret secure="true">odLqZ24I7QJX+AnZnKIAbnNifHhaCwevIpxWhzk8ZoiMdlSJIPuG/5FyDjKNlBsX</secret>
                    <bearer-token-url>https://iam-svc.dms.cact1.ficoanalyticcloud.com/registration/rest/client/token</bearer-token-url>
                    <endpoint-uri-template>https://dm-40pnt79smqa.dms.cact1.ficoanalyticcloud.com/Bvtnuaf4nH0onLFkDfiGxdsJHNc/rest/service/processWithDecisionFlow?solutionID=3x75pu9w5s2</endpoint-uri-template>
                    <header-template>
                        <![CDATA[Content-Type: application/json]]>
                    </header-template>
                    <timeout>7450</timeout>
                    <method>POST</method>
                    <error-stream-name>s-6-E</error-stream-name>
                    <connection-attempts>5</connection-attempts>
                    <sleep-multiplier>500</sleep-multiplier>
                    <max-sleep-interval>500</max-sleep-interval>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="rest-msg-or-path-js-required-field">
                                <name>msg-or-path</name>
                                <input-field>field-data</input-field>
                            </required-field>
                            <required-field xsi:type="rest-is-ref-js-required-field">
                                <name>is-ref</name>
                                <input-field>is-ref</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="rest-response-code-js-generated-field">
                                <output-stream-id>s-11-B</output-stream-id>
                                <name>rest-response-code</name>
                                <output-field>rest-response-code</output-field>
                                <data-type>integer</data-type>
                            </generated-field>
                            <generated-field xsi:type="rest-response-js-generated-field">
                                <output-stream-id>s-11-B</output-stream-id>
                                <name>rest-response</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-11-B</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="false">is-ref</field>
                        <field data-type="string" keep="false">corrId</field>
                        <field data-type="date" keep="false">streamProcessingDT</field>
                        <field data-type="string" keep="false">call-type</field>
                        <field data-type="any" keep="false">field-data</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>createErrorField-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                        <stream-consumer>
                            <consuming-job-step-id>esDEBUG</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-6-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>E0003-REST-Invocation-Error</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.rest.RestStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>esDEBUG</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>8</auto-clean-interval>
                    <es-type-name>esCreditRiskDEBUG</es-type-name>
                    <batch-size>1000</batch-size>
                    <idle-time>100</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" xsi:type="script-job-step">
            <description>The script job step uses JSR223 specification implemented in JDK to execute different languages script and get result added to the output stream.</description>
            <job-step-id>add-streamProcessing-DT</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="script-job-step-params">
                    <functionScript>
                        <![CDATA[function initializeTuple() {
    // This function will optionally initialize any
    // globally defined variables that you wish to
    // use in the executeIteration function.
    
    // Example:
    // myGlobalVar = 0;
}
function executeIteration(/** Add fields here */) {
    // The parameters supplied to this function are
    // specified by the required fields configuration.
    
    // Create a function that returns a value for
    // the configured generated field.
    
    // Example:
    // return myField1 + myField2;
	return new Date();
}]]>
                    </functionScript>
                    <functionLanguage>JAVASCRIPT</functionLanguage>
                    <error-stream-name>s-7-E</error-stream-name>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="script-input-js-required-field">
                                <name>script-input-field</name>
                                <input-field>corrId</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="script-js-generated-field">
                                <output-stream-id>s-3-B</output-stream-id>
                                <name>script-output-field</name>
                                <output-field>streamProcessingDT</output-field>
                                <data-type>date</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-3-B</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>determine-call-type</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-7-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>E0001-Call-Type-Identification-Error</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.script.ScriptStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>esERRORS</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>8</auto-clean-interval>
                    <es-type-name>esCreditRiskERRORS</es-type-name>
                    <batch-size>1000</batch-size>
                    <idle-time>100</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>esResponseDebug</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>8</auto-clean-interval>
                    <es-type-name>esResponseDebug</es-type-name>
                    <batch-size>1000</batch-size>
                    <idle-time>100</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="json-normalization-job-step">
            <description>The JSON Normalization Job Step takes a single JSON object specified as a string, extracts various values and for each adds a field to the tuple emitted in the output stream.</description>
            <job-step-id>corrId</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="json-normalization-to-normalize-js-required-field">
                                <name>to-normalize</name>
                                <input-field>field-data</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="json-normalization-normalized-field-js-generated-field">
                                <output-stream-id>s-12-B</output-stream-id>
                                <name>normalized-field</name>
                                <output-field>corrId</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="jsonPath" xsi:type="json-normalization-jsonPath-process-paramType">
                                <value>$.rfs_INTERFACE.OriginatingRequestID</value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-12-B</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>split</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.normalization.JSONNormalizationStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>log-job</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Day</cleanup-unit>
                    <auto-clean-interval>7</auto-clean-interval>
                    <es-type-name>esCorrId</es-type-name>
                    <batch-size>1000</batch-size>
                    <idle-time>100</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="stream-splitter-job-step">
            <description>The stream splitter job step takes the incoming tuple and emits it onto multiple output streams. Only a subset of the tuple's fields may be emitted depending on the configuration.</description>
            <job-step-id>split</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration/>
            <job-step-links>
                <out-stream>
                    <stream-id>s-15411</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>add-streamProcessing-DT</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>s-15458</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>logStartFormatter</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.splitter.SplitterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>logStartFormatter</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>corrId</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-13-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>log-time</output-field>
                                <data-type>date</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${.now?date?string["yyyy-MM-dd\'T\'HH:mm:ss.SSSZ"]}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>corrId</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-13-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>log-message</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA["request-received-from-ingress-topic"]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-13-B</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">log-time</field>
                        <field data-type="string" keep="true">log-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>log-job</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>format-request-log</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>corrId</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-14-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>log-time</output-field>
                                <data-type>date</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${.now?date?string["yyyy-MM-dd\'T\'HH:mm:ss.SSSZ"]}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>corrId</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-14-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>log-message</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA["request-canadian-retail-dm-service"]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-14-B</stream-id>
                    <output-fields>
                        <field data-type="any" keep="false">field-data</field>
                        <field data-type="boolean" keep="false">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="false">streamProcessingDT</field>
                        <field data-type="string" keep="false">call-type</field>
                        <field data-type="date" keep="true">log-time</field>
                        <field data-type="string" keep="true">log-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>log-job</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="stream-splitter-job-step">
            <description>The stream splitter job step takes the incoming tuple and emits it onto multiple output streams. Only a subset of the tuple's fields may be emitted depending on the configuration.</description>
            <job-step-id>js-2</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration/>
            <job-step-links>
                <out-stream>
                    <stream-id>s-19949</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">rest-response</field>
                        <field data-type="string" keep="true">rest-response-code</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>esResponseDebug</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                        <stream-consumer>
                            <consuming-job-step-id>parse-reponse-corrid</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.splitter.SplitterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="json-normalization-job-step">
            <description>The JSON Normalization Job Step takes a single JSON object specified as a string, extracts various values and for each adds a field to the tuple emitted in the output stream.</description>
            <job-step-id>parse-reponse-corrid</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="json-normalization-to-normalize-js-required-field">
                                <name>to-normalize</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="json-normalization-normalized-field-js-generated-field">
                                <output-stream-id>s-15-B</output-stream-id>
                                <name>normalized-field</name>
                                <output-field>corrId</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="jsonPath" xsi:type="json-normalization-jsonPath-process-paramType">
                                <value>$.rfs_INTERFACE.OriginatingRequestID</value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-15-B</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">rest-response</field>
                        <field data-type="string" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">corrId</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>format-response-log</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.normalization.JSONNormalizationStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>format-response-log</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>corrId</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-16-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>log-time</output-field>
                                <data-type>date</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${.now?date?string["yyyy-MM-dd\'T\'HH:mm:ss.SSSZ"]}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>rest-response-code</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-16-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>log-message</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA["response-canadian-retail-dm-service-http-status:${rest\-response\-code}"]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-16-B</stream-id>
                    <output-fields>
                        <field data-type="string" keep="false">rest-response</field>
                        <field data-type="string" keep="false">rest-response-code</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">log-time</field>
                        <field data-type="string" keep="true">log-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>log-job</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="0" xsi:type="routing-job-step">
            <description>This job steps routes CSC applications, to the ads profile store to lookup any existing ADS offers</description>
            <job-step-id>csc-Routing</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="routing-job-step-params">
                    <functionScript>
                        <![CDATA[function filter(fields) {
	var map ={};
	try
	{
		var payload = JSON.parse(fields['field-data'])
		if (payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION && payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_REQUEST.InboundEvent!="FINCALC")
		{
			var approvedProduct1 = payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.PRODUCT.filter(findApprovedProduct)[0];
			map['strAdsStore'] = approvedProduct1.ProductCode.indexOf('CSC')>=0
			map['strRetailDm'] = approvedProduct1.ProductCode.indexOf('CSC')<0
		}
		else
		{
		    map['strAdsStore']=false;
		    map['strRetailDm']=true;
		}
	}
	catch(error)
	{
		map['strAdsStore']=false;
		map['strRetailDm']=true;
	}
	return map;
}
function findApprovedProduct(product)
{
    return product.Type =="approved" && product.LineIndex == 1
}]]>
                    </functionScript>
                    <functionLanguage>JAVASCRIPT</functionLanguage>
                    <error-stream-name>s-10-E</error-stream-name>
                </job-step-params>
            </configuration>
            <job-step-links>
                <out-stream stream-type="error">
                    <stream-id>s-10-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>ads-routing-err</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>strRetailDm</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>format-request-single-stream</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>strAdsStore</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>search-model-year-store</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.routing.RoutingStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>ads-routing-err</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>3</auto-clean-interval>
                    <es-type-name>adsRoouteErr</es-type-name>
                    <batch-size>100</batch-size>
                    <idle-time>1</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" xsi:type="readonly-contextual-profile-job-step">
            <description>Searches ads data store for an existing ads offer</description>
            <job-step-id>search-ads-store</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="readonly-contextual-profile-job-step-params">
                    <profile isStateStore="true">adsOffers</profile>
                    <function-language>JAVASCRIPT</function-language>
                    <custom-function-script>
                        <![CDATA[// Optionally, provide any utility functions that
// you would like to reference from any of the other
// function definitions (e.g. generator key 
// and generator).
//
// Example:
// function add(a, b) {
//      return a + b;
// }]]>
                    </custom-function-script>
                    <error-stream-name>s-12-E</error-stream-name>
                </job-step-params>
                <job-step-state-metadata xsi:type="job-step-stateMetadataType">
                    <state-name name="ContextualProfile" ttl="0" shared="true"/>
                    <state-columns xsi:type="state-columnsDefType">
                        <state-column name="cp_id" column-type="PRIMARYKEY" data-type="string" encrypt="false" enable-index="false"/>
                        <state-column name="cp_value" column-type="DATACOLUMN" data-type="any" encrypt="false" enable-index="false"/>
                    </state-columns>
                </job-step-state-metadata>
                <processing-units>
                    <processing-unit>
                        <generated-fields>
                            <generated-field xsi:type="readonly-contextual-profile-js-generated-field">
                                <output-stream-id>s-30-B</output-stream-id>
                                <name>contextual-profile-output-field</name>
                                <output-field>ads-profile-indicator</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="readonly-generator-key-option" xsi:type="readonly-contextual-profile-process-paramType">
                                <value>FIELD</value>
                            </parameter>
                            <parameter name="generator-key-FIELD" xsi:type="readonly-generator-key-FIELD-type">
                                <value>corrId</value>
                            </parameter>
                            <parameter name="generator-function-FIELD" xsi:type="readonly-generator-function-FIELD-type">
                                <value>
                                    <![CDATA[function generator1Function(profile, fields) {
    //Check to see if an ADS profile exists for application
                var payload=JSON.parse(fields['field-data']);
                var approvedProduct1 = payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.PRODUCT.filter(findApprovedProduct)[0]; 
                               if(!profile)
                    return "noProfile";
                //if a profile exists check to see if terms are still within tolerances
                else if(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.ApplicationTypeCode.slice(1,2).toUpperCase() !== "O" &&
                        profile['model']==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.VEHICLE.VehicleModel &&
                        profile['make']==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.VEHICLE.VehicleMake &&
                        profile['age']==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.VEHICLE.AgeOfVehFinancedinYears &&
                        profile['trim']==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.VEHICLE.VehicleTrimLevel &&
                        profile['universalCode']==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.VEHICLE.UniversalVehicleCode &&
                        profile['sourceCode']==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.VEHICLE.VehicleSourceCode &&
                        profile['body']==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.VEHICLE.VehicleBody &&
                        Math.abs(profile['mileage']-payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.VEHICLE.MileageInKilometres)<=300 &&
                        profile['rate']>=approvedProduct1.Rate &&
                        profile['term']==approvedProduct1.TermMonths &&
                        profile['amortization']==approvedProduct1.AmortizationMonths &&
						Math.abs(profile['income']-getTdsrIncome(payload))<= Math.min(getTdsrIncome(payload)*.05,200) &&
                        (approvedProduct1.Amount<=profile['loanAmount']+Math.min(profile['loanAmount']*.1,1000))){
                           if(profile['applicationType'] ==undefined &&
                               profile['totalAssets'] ==undefined &&
                               profile['totalLiabilites'] ==undefined &&
                               profile['totalMonthlyPayments'] ==undefined &&
                               profile['primaryMiddleName'] ==undefined &&
                               profile['priamryMiddleInitial'] ==undefined &&
                               profile['primaryEmploymentType'] ==undefined &&
                               profile['primaryOccupationType'] ==undefined &&
                               profile['secondaryMiddleName'] ==undefined &&
                               profile['secondaryMiddleInitial'] ==undefined &&
                               profile['secondaryEmploymentType'] ==undefined &&
                               profile['secondaryOccupationType'] ==undefined )
                            {
                                return "validatedProfile";
                            }
                            else if(profile['applicationType'] ==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.ApplicationTypeCode &&
                            profile['totalAssets'] ==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.SUMMARY.TotalAssetAmount &&
                            profile['totalLiabilites'] ==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.SUMMARY.TotalLiabilityBalanceAmount &&
                            profile['totalMonthlyPayments'] ==payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.SUMMARY.TotalLiabilityPaymentAmount &&
                            profile['primaryMiddleName'] == getMiddleName(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER,"primary") &&
                            profile['primaryMiddleInitial'] == getMiddleInitial(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER,"primary") &&
                            profile['primaryEmploymentType'] == getEmploymentType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER,"primary") &&
                            profile['primaryOccupationType'] == getOccupationType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER,"primary") &&
                            profile['secondaryMiddleName'] == getMiddleName(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER,"secondary") &&
                            profile['secondaryMiddleInitial'] == getMiddleInitial(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER,"secondary") &&
                            profile['secondaryEmploymentType'] == getEmploymentType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER,"secondary") &&
                            profile['secondaryOccupationType'] == getOccupationType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER,"secondary") ){
                                return "validatedProfile";
                            }else{
                                return "invalidatedProfile";
                            }
                        }
                else{
                            return "invalidatedProfile";
                }
}
function findApprovedProduct(product)
{
    return product.Type =="approved" && product.LineIndex == 1;
}

//Returns Partial Disclosure income used IN TDSR calculations for CSC
function getTdsrIncome(payload)
{
    if(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.ApplicationTypeCode=='I') 
        return getIncomeType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER[0].SUMMARY,"TotalMonthlyIncome")[0].Amount;
    else if(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.ApplicationTypeCode=='J') 
        return getIncomeType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER[0].SUMMARY,"TotalMonthlyIncome")[0].Amount+
        getIncomeType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER[1].SUMMARY,"TotalMonthlyIncome")[0].Amount;
    else if(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.ApplicationTypeCode=='IO')  
        return getIncomeType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER[0].SUMMARY,"TotalMonthlyIncome")[0].Amount +
        payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.SUMMARY.TotIncomeOfAllRelatedApplicants;
    else
    return getIncomeType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER[0].SUMMARY,"TotalMonthlyIncome")[0].Amount +
           getIncomeType(payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.BORROWER[1].SUMMARY,"TotalMonthlyIncome")[0].Amount +
           payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.SUMMARY.TotIncomeOfAllRelatedApplicants;
}

//Predicate for filtering IncomeType
function getIncomeType(arr,type)
{
	//Ensures that summary array is valid
	if(arr)
    	return arr.filter(function(el) {return el.Type==type});
	else
	 	return [{Amount: 0,Type: "TotalMonthlyIncome"}];
}

    function getArrayWithType(arr,type)
    {
         return arr.filter(function(el) {return el.Type==type});
    }
 
     function getMiddleName(arr,type)
     {
         var borrower = getArrayWithType(arr,type);
         if(typeof borrower !== "undefined" && borrower.length>0){
           if(typeof borrower[0].MiddleName !=="undefined" && borrower[0].MiddleName.length > 0)
             return borrower[0].MiddleName;
           else
             return "n/a";
         }else
         return "n/a";
     }
 
     function getMiddleInitial(arr,type)
     {
         var borrower = getArrayWithType(arr,type);
         if(typeof borrower !== "undefined" && borrower.length>0){
            if(typeof borrower[0].MiddleInitial !=="undefined" && borrower[0].MiddleInitial.length > 0)
                return borrower[0].MiddleInitial;
            else
                return "n/a";
         }else
            return "n/a";
     }
 
     function getEmploymentType(arr,type)
     {
         var borrower = getArrayWithType(arr,type);
         if(typeof borrower !== "undefined" && borrower.length>0)
         {
            var emp = getArrayWithType(borrower[0].EMPLOYMENT,"current");
             if(typeof emp !=="undefined" && emp.length>0){
                if(typeof emp[0].EmploymentType !=="undefined" && emp[0].EmploymentType.length > 0)
                   return emp[0].EmploymentType;
                else
                return "n/a";
         }
         else
            return "n/a";
         }
         return "n/a";
     }
 
 function getOccupationType(arr,type)
 {
     var borrower = getArrayWithType(arr,type);
     if(typeof borrower !== "undefined" && borrower.length>0)
     {
         var emp = getArrayWithType(borrower[0].EMPLOYMENT,"current");
         if(typeof emp !=="undefined" && emp.length>0){
             if(typeof emp[0].OccupationType !=="undefined" && emp[0].OccupationType.length > 0)
                return emp[0].OccupationType;
             else
             return "n/a";
         }
         else
         return "n/a";
     }
     return "n/a";
 }]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <generated-fields>
                            <generated-field xsi:type="readonly-contextual-profile-js-generated-field">
                                <output-stream-id>s-30-B</output-stream-id>
                                <name>contextual-profile-output-field</name>
                                <output-field>tacs</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="readonly-generator-key-option" xsi:type="readonly-contextual-profile-process-paramType">
                                <value>FIELD</value>
                            </parameter>
                            <parameter name="generator-key-FIELD" xsi:type="readonly-generator-key-FIELD-type">
                                <value>corrId</value>
                            </parameter>
                            <parameter name="generator-function-FIELD" xsi:type="readonly-generator-function-FIELD-type">
                                <value>
                                    <![CDATA[function generator2Function(profile, fields) {
	if(!profile)
	{
		return "missing";
	}else
	{
		return JSON.stringify(profile['tacs']);
	}
}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <generated-fields>
                            <generated-field xsi:type="readonly-contextual-profile-js-generated-field">
                                <output-stream-id>s-30-B</output-stream-id>
                                <name>contextual-profile-output-field</name>
                                <output-field>profileString</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="readonly-generator-key-option" xsi:type="readonly-contextual-profile-process-paramType">
                                <value>FIELD</value>
                            </parameter>
                            <parameter name="generator-key-FIELD" xsi:type="readonly-generator-key-FIELD-type">
                                <value>corrId</value>
                            </parameter>
                            <parameter name="generator-function-FIELD" xsi:type="readonly-generator-function-FIELD-type">
                                <value>
                                    <![CDATA[function generator3Function(profile, fields) {
    if(!profile)
	{
		return "missing";
	}else
	{
		return JSON.stringify(profile);
	}
}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-30-B</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="string" keep="true">ads-profile-indicator</field>
                        <field data-type="string" keep="true">tacs</field>
                        <field data-type="string" keep="true">profileString</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>adsOfferRouting</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                        <stream-consumer>
                            <consuming-job-step-id>profileRetrived</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-12-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                        <field data-type="any" keep="true">error-tuple</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>ads-ProfileStoreErr</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.contextual.profile.ReadonlyContextualProfileJobStepStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="0" xsi:type="routing-job-step">
            <description>This job step routes CSC Alternative Deals (ADS) based on if they have ADS profile</description>
            <job-step-id>adsOfferRouting</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="routing-job-step-params">
                    <functionScript>
                        <![CDATA[function filter(fields) {
	var map ={};
	map['sendAdsOffer'] = fields.get('ads-profile-indicator')==="validatedProfile";
	map['invalidAdsOffer'] = fields.get('ads-profile-indicator')==="invalidatedProfile";
	map['getAldDecision']=  fields.get('ads-profile-indicator')==="noProfile";
	return map;
}]]>
                    </functionScript>
                    <functionLanguage>JAVASCRIPT</functionLanguage>
                    <error-stream-name>s-13-E</error-stream-name>
                </job-step-params>
            </configuration>
            <job-step-links>
                <out-stream stream-type="error">
                    <stream-id>s-13-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>ads-routing-err</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>getAldDecision</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="any" keep="true">field-data</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>format-request-single-stream</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>invalidAdsOffer</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="string" keep="true">ads-profile-indicator</field>
                        <field data-type="string" keep="true">tacs</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>invaildatedAdsOffer</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>sendAdsOffer</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="string" keep="true">ads-profile-indicator</field>
                        <field data-type="string" keep="true">tacs</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>csc-calculations</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.routing.RoutingStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" xsi:type="script-job-step">
            <description>The script job step uses JSR223 specification implemented in JDK to execute different languages script and get result added to the output stream.</description>
            <job-step-id>populateAdsOffer</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="script-job-step-params">
                    <functionScript>
                        <![CDATA[function initializeTuple() {
    // This function will optionally initialize any
    // globally defined variables that you wish to
    // use in the executeIteration function.
    
    // Example:
    // myGlobalVar = 0;
}
function executeIteration(restResponse,tacs) {
    var payload = JSON.parse(restResponse);      
    payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.DECISION={};
	payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.DECISION = [{DecisionId:"AP",DecisionType:"AP",Description:"RETRIEVED ADS APPROVAL"}];
    if(tacs == "missing")
    {
        return JSON.stringify(payload);
    }else
    {
		payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.LEGACY.TAC={};
        payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.LEGACY.TAC=JSON.parse(tacs)
        return JSON.stringify(payload);
    }
}
]]>
                    </functionScript>
                    <functionLanguage>JAVASCRIPT</functionLanguage>
                    <error-stream-name>s-14-E</error-stream-name>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="script-input-js-required-field">
                                <name>script-input-field</name>
                                <input-field>rest-response</input-field>
                                <input-field>tacs</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="script-js-generated-field">
                                <output-stream-id>s-31-B</output-stream-id>
                                <name>script-output-field</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-31-B</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="string" keep="false">ads-profile-indicator</field>
                        <field data-type="string" keep="false">tacs</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>formatAdsResponse</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-14-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>adsJavaScriptErr</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.script.ScriptStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>formatAdsResponse</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-32-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${rest\-response!"NULL-REST-RESPONSE-TO-DMPS"}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-32-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>rest-response-code</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${"200"}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-32-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>error-message</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${""}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-32-B</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="false">is-ref</field>
                        <field data-type="string" keep="false">corrId</field>
                        <field data-type="date" keep="false">streamProcessingDT</field>
                        <field data-type="string" keep="false">call-type</field>
                        <field data-type="any" keep="false">field-data</field>
                        <field data-type="string" keep="true">rest-response</field>
                        <field data-type="string" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>adsOutbound</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="topic-outbound-job-step">
            <description>Outbounds the ADS offers to creditRiskOUT</description>
            <job-step-id>adsOutbound</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="topic-outbound-job-step-params">
                    <topic-name>creditRiskOUT</topic-name>
                    <time-unit>HOURS</time-unit>
                    <replication-factor>0</replication-factor>
                    <acknowledgement-level>Platform Default</acknowledgement-level>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.topicoutbound.TopicOutboundStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" xsi:type="script-job-step">
            <description>The script job step uses JSR223 specification implemented in JDK to execute different languages script and get result added to the output stream.</description>
            <job-step-id>invaildatedAdsOffer</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="script-job-step-params">
                    <functionScript>
                        <![CDATA[function initializeTuple() {
    // This function will optionally initialize any
    // globally defined variables that you wish to
    // use in the executeIteration function.
    
    // Example:
    // myGlobalVar = 0;
}
function executeIteration(fieldData) {
	var payload = JSON.parse(fieldData);
    payload.rfs_INTERFACE.CAN.RETAIL_CAN.LOAN_APPLICATION.EXTENSION.AUDIT.APP_FLAGS.push({Index:403,Indicator:"Y"});
	return JSON.stringify(payload); 
}]]>
                    </functionScript>
                    <functionLanguage>JAVASCRIPT</functionLanguage>
                    <error-stream-name>s-15-E</error-stream-name>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="script-input-js-required-field">
                                <name>script-input-field</name>
                                <input-field>field-data</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="script-js-generated-field">
                                <output-stream-id>s-33-B</output-stream-id>
                                <name>script-output-field</name>
                                <output-field>field-data</output-field>
                                <data-type>any</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-33-B</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="string" keep="false">ads-profile-indicator</field>
                        <field data-type="string" keep="false">tacs</field>
                        <field data-type="any" keep="true">field-data</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>format-request-single-stream</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-15-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>adsJavaScriptErr</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.script.ScriptStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>adsJavaScriptErr</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>3</auto-clean-interval>
                    <es-type-name>adsJavaScriptErr</es-type-name>
                    <batch-size>100</batch-size>
                    <idle-time>1</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>ads-ProfileStoreErr</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>3</auto-clean-interval>
                    <es-type-name>adsProfileStoreErr</es-type-name>
                    <batch-size>100</batch-size>
                    <idle-time>1</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>Creates a single stream of all tuple fields required to invoke Canadian retail component </description>
            <job-step-id>format-request-single-stream</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>streamProcessingDT</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-34-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>steamProcessingDT</output-field>
                                <data-type>date</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${.now?date?string["yyyy-MM-dd\'T\'HH:mm:ss.SSSZ"]}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>call-type</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-34-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>call-type</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${call\-type}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>corrId</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-34-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>corrId</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${corrId}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>field-data</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-34-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>field-data</output-field>
                                <data-type>any</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${field\-data}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>is-ref</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-34-B</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>is-ref</output-field>
                                <data-type>boolean</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${is\-ref?c}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-34-B</stream-id>
                    <output-fields>
                        <field data-type="date" keep="false">streamProcessingDT</field>
                        <field data-type="date" keep="true">steamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>invokeDM-CanadianRetail</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>profileRetrived</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>1</auto-clean-interval>
                    <es-type-name>profileRetrieved</es-type-name>
                    <batch-size>100</batch-size>
                    <idle-time>10</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="1" xsi:type="rest-job-step">
            <description>call to DM entry point for updated scores, ltv and TDSR for CSC</description>
            <job-step-id>csc-calculations</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="rest-job-step-params">
                    <rest-auth-type>dmp</rest-auth-type>
                    <client-id secure="true">QtFr7GdPjb6o6rELTUgzcQ==</client-id>
                    <secret secure="true">odLqZ24I7QJX+AnZnKIAbnNifHhaCwevIpxWhzk8ZoiMdlSJIPuG/5FyDjKNlBsX</secret>
                    <bearer-token-url>https://iam-svc.dms.cact1.ficoanalyticcloud.com/registration/rest/client/token</bearer-token-url>
                    <endpoint-uri-template>https://dm-40pmzarfufx.dms.cact1.ficoanalyticcloud.com/Bvtnuaf4nH0onLFkDfiGxdsJHNc/rest/service/cscCalculations?solutionID=3x75pu9w5s2</endpoint-uri-template>
                    <header-template>
                        <![CDATA[Content-Type: application/json]]>
                    </header-template>
                    <timeout>7495</timeout>
                    <method>POST</method>
                    <error-stream-name>s-16-E</error-stream-name>
                    <connection-attempts>5</connection-attempts>
                    <sleep-multiplier>100</sleep-multiplier>
                    <max-sleep-interval>3000</max-sleep-interval>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="rest-msg-or-path-js-required-field">
                                <name>msg-or-path</name>
                                <input-field>field-data</input-field>
                            </required-field>
                            <required-field xsi:type="rest-is-ref-js-required-field">
                                <name>is-ref</name>
                                <input-field>is-ref</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="rest-response-code-js-generated-field">
                                <output-stream-id>s-35-B</output-stream-id>
                                <name>rest-response-code</name>
                                <output-field>rest-response-code</output-field>
                                <data-type>integer</data-type>
                            </generated-field>
                            <generated-field xsi:type="rest-response-js-generated-field">
                                <output-stream-id>s-35-B</output-stream-id>
                                <name>rest-response</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-35-B</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="string" keep="true">ads-profile-indicator</field>
                        <field data-type="string" keep="true">tacs</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>populateAdsOffer</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-16-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>adsJavaScriptErr</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.rest.RestStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="1" xsi:type="rest-job-step">
            <description>Sends a REST request to a specified endpoint. The response from the REST endpoint and the HTTP response code are both returned as generated fields.</description>
            <job-step-id>invokeUsDataServices-1791</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="rest-job-step-params">
                    <rest-auth-type>dmp-jwt</rest-auth-type>
                    <client-id-jwt secure="true">2miuSixQMHcKZgdE+8mXGw==</client-id-jwt>
                    <secret-jwt secure="true">Weg/WljPlgrs5WlmWLm/gn+4eDgRmAV0yYkelbm1xN9220Ex+tZiZzl+3HHRSq3N</secret-jwt>
                    <jwt-token-url>https://iam-svc.dms.cact1.ficoanalyticcloud.com/iam/jwt/token/v1/signedJWT</jwt-token-url>
                    <endpoint-uri-template>https://fwskapi.dms.cact1.ficoanalyticcloud.com/production/fn-2xsxr4rlzxd-1jux8tlodte-dataaggregation-production</endpoint-uri-template>
                    <header-template>
                        <![CDATA[Content-Type: application/json]]>
                    </header-template>
                    <timeout>30000</timeout>
                    <method>POST</method>
                    <error-stream-name>s-1-E-1791</error-stream-name>
                    <connection-attempts>3</connection-attempts>
                    <sleep-multiplier>500</sleep-multiplier>
                    <max-sleep-interval>500</max-sleep-interval>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="rest-msg-or-path-js-required-field">
                                <name>msg-or-path</name>
                                <input-field>dataServicesRequest</input-field>
                            </required-field>
                            <required-field xsi:type="rest-is-ref-js-required-field">
                                <name>is-ref</name>
                                <input-field>is-ref</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="rest-response-code-js-generated-field">
                                <output-stream-id>s-4-B-1791</output-stream-id>
                                <name>rest-response-code</name>
                                <output-field>rest-response-code</output-field>
                                <data-type>integer</data-type>
                            </generated-field>
                            <generated-field xsi:type="rest-response-js-generated-field">
                                <output-stream-id>s-4-B-1791</output-stream-id>
                                <name>rest-response</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-4-B-1791</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="string" keep="false">dataServicesRequest</field>
                        <field data-type="long" keep="true">beforeInvokeDataServicesTimeStamp</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>split-2-1791</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-1-E-1791</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>E0006-Data-Services-Error-1791</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.rest.RestStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>GenerateRequest-1791</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>field-data</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-5-B-1791</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>dataServicesRequest</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[{
  "RequestObject": {
    "rfsPayload": "${field\-data?json_string}"
  }
}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>is-ref</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-5-B-1791</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>beforeInvokeDataServicesTimeStamp</output-field>
                                <data-type>long</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${.now?long?c}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-5-B-1791</stream-id>
                    <output-fields>
                        <field data-type="any" keep="false">field-data</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="string" keep="true">dataServicesRequest</field>
                        <field data-type="long" keep="true">beforeInvokeDataServicesTimeStamp</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>split-1-1791</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>E0006-Data-Services-Error-1791</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>error-message</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-6-B-1791</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>error-messageMOD</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${"E0006 - Data Services Invocation Error "}${error\-message!}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-6-B-1791</stream-id>
                    <output-fields>
                        <field data-type="string" keep="false">error-message</field>
                        <field data-type="string" keep="true">error-messageMOD</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>createOtherFields-5292</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>esDebugDsRequest-1791</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>8</auto-clean-interval>
                    <es-type-name>esDebugDsRequests</es-type-name>
                    <batch-size>1000</batch-size>
                    <idle-time>100</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>esDebugDsResponse-1791</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>8</auto-clean-interval>
                    <es-type-name>esDebugDsResponse</es-type-name>
                    <batch-size>1000</batch-size>
                    <idle-time>100</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="stream-splitter-job-step">
            <description>The stream splitter job step takes the incoming tuple and emits it onto multiple output streams. Only a subset of the tuple's fields may be emitted depending on the configuration.</description>
            <job-step-id>split-1-1791</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration/>
            <job-step-links>
                <out-stream>
                    <stream-id>s-5061-1791</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="string" keep="true">dataServicesRequest</field>
                        <field data-type="long" keep="true">beforeInvokeDataServicesTimeStamp</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>invokeUsDataServices-1791</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>s-5324-1791</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">dataServicesRequest</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>esDebugDsRequest-1791</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.splitter.SplitterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="stream-splitter-job-step">
            <description>The stream splitter job step takes the incoming tuple and emits it onto multiple output streams. Only a subset of the tuple's fields may be emitted depending on the configuration.</description>
            <job-step-id>split-2-1791</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration/>
            <job-step-links>
                <out-stream>
                    <stream-id>s-7101-1791</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="long" keep="true">beforeInvokeDataServicesTimeStamp</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>getSuccessStatus</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>s-7350-1791</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>parseResponse-1791</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>s-2873</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>getFileToSend-1738</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.splitter.SplitterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="json-normalization-job-step">
            <description>The JSON Normalization Job Step takes a single JSON object specified as a string, extracts various values and for each adds a field to the tuple emitted in the output stream.</description>
            <job-step-id>parseResponse-1791</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="json-normalization-to-normalize-js-required-field">
                                <name>to-normalize</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="json-normalization-normalized-field-js-generated-field">
                                <output-stream-id>s-8-B-1791</output-stream-id>
                                <name>normalized-field</name>
                                <output-field>field-data</output-field>
                                <data-type>any</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="jsonPath" xsi:type="json-normalization-jsonPath-process-paramType">
                                <value>$.ResponseObject.rfsPayload</value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-8-B-1791</stream-id>
                    <output-fields>
                        <field data-type="integer" keep="false">rest-response-code</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="string" keep="false">rest-response</field>
                        <field data-type="any" keep="true">field-data</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>invokeDM-UsCommercial</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.normalization.JSONNormalizationStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>The formatter job step uses the supplied FreeMarker template to output a converted string from the DMP Streaming tuple input values.</description>
            <job-step-id>calcDSResponseTime-1791</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field>beforeInvokeDataServicesTimeStamp</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s-9-B-1791</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>responseTimeInMS</output-field>
                                <data-type>long</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[${((.now?long)-(beforeInvokeDataServicesTimeStamp?c?number))?c}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-9-B-1791</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="long" keep="false">beforeInvokeDataServicesTimeStamp</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                        <field data-type="boolean" keep="true">success</field>
                        <field data-type="long" keep="true">responseTimeInMS</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>esDebugDsResponse-1791</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" xsi:type="script-job-step">
            <description>The script job step uses JSR223 specification implemented in JDK to execute different languages script and get result added to the output stream.</description>
            <job-step-id>getFileToSend-1738</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="script-job-step-params">
                    <functionScript>
                        <![CDATA[var iter = 1;//iteration counter
var responseObj = {};//response obj


function initializeTuple() {
    iter = 1;
    responseObj = {};
}

function executeIteration(response) {
    if(iter == 1){
        var file = "NO MORE FILES";
        //check for files to send from bureaus
        responseObj = JSON.parse(response);
        //reduce in memmory response object
        if(responseObj.ResponseObject.appState != null){
            delete responseObj.ResponseObject.appState;
        }
        if(responseObj.ResponseObject.rfsPayload != null){
            delete responseObj.ResponseObject.rfsPayload;
        }
        if(responseObj.ResponseObject.logEntries != null){
            delete responseObj.ResponseObject.logEntries;
        }
        var myFiles = responseObj.ResponseObject.fdoResponses;
        if(myFiles != null && myFiles.length > 0){
            //Do we have any files to send, pop the array
            file = myFiles.pop();
            iter++;//update iteration counter
        }
        return file;
    }
    else{
        //return rest of response
        return JSON.stringify(responseObj);
    }
}]]>
                    </functionScript>
                    <functionLanguage>JAVASCRIPT</functionLanguage>
                    <error-stream-name>s-3-E-1738</error-stream-name>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="script-input-js-required-field">
                                <name>script-input-field</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="script-js-generated-field">
                                <output-stream-id>s-11-B-1738</output-stream-id>
                                <name>script-output-field</name>
                                <output-field>field-data</output-field>
                                <data-type>any</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="script-input-js-required-field">
                                <name>script-input-field</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="script-js-generated-field">
                                <output-stream-id>s-11-B-1738</output-stream-id>
                                <name>script-output-field</name>
                                <output-field>rest-response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-11-B-1738</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="any" keep="true">field-data</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>onlyFilesWithContent-1738</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-3-E-1738</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>esDebugSFTP-1738</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.script.ScriptStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" processing-iteration-count="0" xsi:type="stream-filter-job-step">
            <description>Filter tuples from the input stream. The input tuple is emitted into the single output stream based on the filter condition and the emit action.</description>
            <job-step-id>onlyFilesWithContent-1738</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="stream-filter-job-step-params">
                    <condition-type>SCRIPT</condition-type>
                    <filter-language>JAVASCRIPT</filter-language>
                    <filter-condition>
                        <![CDATA[function filter(fields) {
    return (fields.get("field-data") != "NO MORE FILES");
}
]]>
                    </filter-condition>
                    <on-match>RETAIN</on-match>
                </job-step-params>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-12-B-1738</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="string" keep="true">rest-response</field>
                        <field data-type="any" keep="true">field-data</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>split-3-1738</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.filter.StreamFilterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="stream-splitter-job-step">
            <description>The stream splitter job step takes the incoming tuple and emits it onto multiple output streams. Only a subset of the tuple's fields may be emitted depending on the configuration.</description>
            <job-step-id>split-3-1738</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration/>
            <job-step-links>
                <out-stream>
                    <stream-id>s-9700-1738</stream-id>
                    <output-fields>
                        <field data-type="any" keep="true">field-data</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>sftpFullResponse-1738</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream>
                    <stream-id>s-10288-1738</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="string" keep="true">rest-response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>getFileToSend-1738</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.splitter.SplitterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="topic-outbound-job-step">
            <description>The topic outbound job step generates DMP Streaming tuples which are sent to the specified topic.</description>
            <job-step-id>sftpFullResponse-1738</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="topic-outbound-job-step-params">
                    <topic-name>CreditRiskOutputFileRequest</topic-name>
                    <time-unit>HOURS</time-unit>
                    <replication-factor>0</replication-factor>
                    <acknowledgement-level>Platform Default</acknowledgement-level>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>FULL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.topicoutbound.TopicOutboundStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Indexes data into elasticsearch for the given elasticsearch type.</description>
            <job-step-id>esDebugSFTP-1738</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <customize-cleanup>true</customize-cleanup>
                    <cleanup-unit>Hour</cleanup-unit>
                    <auto-clean-interval>8</auto-clean-interval>
                    <es-type-name>esDebugSFTP</es-type-name>
                    <batch-size>1000</batch-size>
                    <idle-time>100</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="json-normalization-job-step">
            <description>The JSON Normalization Job Step takes a single JSON object specified as a string, extracts various values and for each adds a field to the tuple emitted in the output stream.</description>
            <job-step-id>getSuccessStatus</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="json-normalization-to-normalize-js-required-field">
                                <name>to-normalize</name>
                                <input-field>rest-response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="json-normalization-normalized-field-js-generated-field">
                                <output-stream-id>s-17-B</output-stream-id>
                                <name>normalized-field</name>
                                <output-field>success</output-field>
                                <data-type>boolean</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="jsonPath" xsi:type="json-normalization-jsonPath-process-paramType">
                                <value>$.ResponseObject.success</value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-17-B</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="long" keep="true">beforeInvokeDataServicesTimeStamp</field>
                        <field data-type="integer" keep="true">rest-response-code</field>
                        <field data-type="string" keep="true">rest-response</field>
                        <field data-type="boolean" keep="true">success</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>calcDSResponseTime-1791</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.normalization.JSONNormalizationStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" xsi:type="readonly-contextual-profile-job-step">
            <description>This job step searches for applications that have a valid model year profile</description>
            <job-step-id>search-model-year-store</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="readonly-contextual-profile-job-step-params">
                    <profile isStateStore="true">cscModelYear</profile>
                    <function-language>JAVASCRIPT</function-language>
                    <custom-function-script>
                        <![CDATA[// Optionally, provide any utility functions that
// you would like to reference from any of the other
// function definitions (e.g. generator key 
// and generator).
//
// Example:
// function add(a, b) {
//      return a + b;
// }]]>
                    </custom-function-script>
                    <error-stream-name>s-8-E</error-stream-name>
                </job-step-params>
                <job-step-state-metadata xsi:type="job-step-stateMetadataType">
                    <state-name name="ContextualProfile" ttl="0" shared="true"/>
                    <state-columns xsi:type="state-columnsDefType">
                        <state-column name="cp_id" column-type="PRIMARYKEY" data-type="string" encrypt="false" enable-index="false"/>
                        <state-column name="cp_value" column-type="DATACOLUMN" data-type="any" encrypt="false" enable-index="false"/>
                    </state-columns>
                </job-step-state-metadata>
                <processing-units>
                    <processing-unit>
                        <generated-fields>
                            <generated-field xsi:type="readonly-contextual-profile-js-generated-field">
                                <output-stream-id>s-18-B</output-stream-id>
                                <name>contextual-profile-output-field</name>
                                <output-field>field-data</output-field>
                                <data-type>any</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="readonly-generator-key-option" xsi:type="readonly-contextual-profile-process-paramType">
                                <value>FIELD</value>
                            </parameter>
                            <parameter name="generator-key-FIELD" xsi:type="readonly-generator-key-FIELD-type">
                                <value>corrId</value>
                            </parameter>
                            <parameter name="generator-function-FIELD" xsi:type="readonly-generator-function-FIELD-type">
                                <value>
                                    <![CDATA[//This function is used to expose Model Yeay profile attributes to Decision Modeler
function generator1Function(profile, fields) {
    //Check to see if an ADS profile exists for application
                var payload=JSON.parse(fields["field-data"]);
                if(!profile)
                    return fields["field-data"];
                //if a model year profile exists create business terms list 
                else 
                {
                    //Create Decision Response object
                    if(!payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE)
                        payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE={};
                    //Create BUSINESSTERMS list 
                    if(!payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.BUSINESSTERMS)
                        payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.BUSINESSTERMS=[];
                    //Add Model Year Profile values to BUSINESSTERMS
                    payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.BUSINESSTERMS.push(createBusinessTerm("modelYearProfileFound","true",
                        "valid model year change over found in DMPS contextual profile"));
                    payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.BUSINESSTERMS.push(createBusinessTerm("lastAmountFinanced",profile["lastAmountFinanced"],
                        "last amount financed returned from DMPS contextual profile store"));
                    payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.BUSINESSTERMS.push(createBusinessTerm("lastBlackBookValue",profile["lastBlackBookValue"],
                        "last black book value returned from DMPS contextual profile store"));
                    payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.BUSINESSTERMS.push(createBusinessTerm("lastInterestRate",profile["lastInterestRate"],
                        "last interest returned from DMPS contextual profile store"));
                    payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.BUSINESSTERMS.push(createBusinessTerm("lastTdsr",profile["lastTdsr"],
                        "last tdsr returned from DMPS contextual profile store"));
                    payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.BUSINESSTERMS.push(createBusinessTerm("lastTdsrIncome",profile["lastTdsrIncome"],
                        "last income value returned from DMPS contextual profile store"));
                        payload.rfs_INTERFACE.DECISION_ENGINE.DECISION_RESPONSE.BUSINESSTERMS.push(createBusinessTerm("lastLtv",profile["lastLtv"],
                        "last ltv value from DMPS contextual profile store"));
                    return JSON.stringify(payload);
                }
}
//Helper function to create a business term object
function createBusinessTerm(name,value,description)
{
    return {"name":name,"description":description,"value":value};
}]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-18-B</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="true">is-ref</field>
                        <field data-type="string" keep="true">corrId</field>
                        <field data-type="date" keep="true">streamProcessingDT</field>
                        <field data-type="string" keep="true">call-type</field>
                        <field data-type="any" keep="true">field-data</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>search-ads-store</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>s-8-E</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                        <field data-type="any" keep="true">error-tuple</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>ads-ProfileStoreErr</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.contextual.profile.ReadonlyContextualProfileJobStepStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
    </job-steps>
</job-specification>