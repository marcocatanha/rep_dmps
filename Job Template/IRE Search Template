<?xml version="1.0" encoding="UTF-8"?>
<job-specification xmlns="http://com.fico/dmip/jobsAndJobSteps" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://com.fico/dmip/jobsAndJobSteps SampleMergedJobTemplate.xsd">
    <diagram-state>
        <![CDATA[{"v":"1.0","s":1,"p":"-513 359","d":90,"j":[{"i":"SearchRequestFormatter","p":"108.50000000000028 503.9999999999999"},{"i":"IRESearch","p":"119.99999999999932 671.9999999999999"},{"i":"ErrorVisStore","p":"280.00000000000045 840"},{"i":"JSONNormalization","p":"1.7053025658242404e-13 840"}],"l":[{"f":"SearchRequestFormatter","t":"IRESearch","s":"s6"},{"f":"IRESearch","t":"JSONNormalization","s":"rest-out-2"},{"f":"IRESearch","t":"ErrorVisStore","s":"rest-err-1"}],"g":[],"m":{"x":{"p":"1600 0","d":1600,"l":1601},"y":{"p":"0 1600","d":1600,"l":1601}},"svg":"<svg width=\"513px\" height=\"437px\" viewBox=\"0 0 513 437\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#mainClip274635)\"><g transform=\"matrix(1, 0, 0, 1, 15.99999999999983, -487.9999999999999)\"><g transform=\"matrix(1, 0, 0, 1, -30, 480)\"><rect x=\"0\" y=\"0\" width=\"565\" height=\"489\" fill=\"#f2f2f2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP274637)\"></g></g><g transform=\"matrix(1, 0, 0, 1, 280.00000000000045, 840)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP274638)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.9384765625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">ErrorVisStore</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 188.36171264214792, 570.5)\"><path d=\"M 9.663381206337363e-13,0 L 0,96.99999999999977\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357851176, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.258287357851174, 91.99999999999977)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.258287357851174, 91.99999999999977)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.258287357851174, 81.99999999999977)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.258287357851174, 81.99999999999977)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496025)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 81.36171264214758, 738.4999999999998)\"><path d=\"M 25.99999999999875,0 L 25.99999999999875,50.000000000000114 L 0,50.000000000000114 L 0,97.00000000000023\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 18.638287357852768, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 23.25828735785277, 92.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 23.25828735785277, 92.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 23.25828735785277, 82.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 23.25828735785277, 82.00000000000023)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.748748774960475)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 312.4999999999991, 738.4999999999998)\"><path d=\"M 0,0 L 0,50.000000000000114 L 66.00000000000136,50.000000000000114 L 66.00000000000136,97.00000000000023\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 72.12000000000137, 92.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 72.12000000000137, 92.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 72.12000000000137, 82.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 72.12000000000137, 82.00000000000023)\"></path><g transform=\"matrix(1, 0, 0, 1, 2.8617126421485395, 37.748748774960475)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 108.50000000000028, 503.9999999999999)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 222,0 L 222,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 222,0 L 222,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 208, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP274639)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.351318359375, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SearchRequestFormatter</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1.7053025658242404e-13, 840)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP274640)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 15.587158203125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 25.969666666666665,14.095249999999998 C 22.046078166666668,14.269045916666663 23.444896583333335,19.699466583333333 23.07825325,22.121664499999998 C 23.292668749999997,24.496108 21.084312166666663,26.4496635 18.74739425,25.998916666666663 C 18.122857999999997,26.174644166666667 18.0537435,25.794949916666663 18.136083333333332,25.263802416666664 C 18.136083333333332,24.801423833333327 18.136083333333332,24.339045249999995 18.136083333333332,23.876666666666665 C 19.186408583333332,23.972281666666664 20.656994583333333,23.822619166666662 20.79834033333333,22.51455808333333 C 21.09751583333333,19.855172999999997 20.385782083333332,16.987264666666665 21.76521641666666,14.545014249999998 C 22.234544583333335,13.846724666666665 22.923543499999997,13.299297916666664 23.709833333333332,13 C 19.40353025,11.226420833333332 21.873917,6.006139208333332 20.427333333333333,2.631416666666667 C 19.952125916666663,1.706542933333333 18.1571455,2.6609671833333333 18.1415,1.7568595416666664 C 18.1415,1.1712396583333333 18.1415,0.585619883333333 18.1415,0 C 19.5994955,-0.021306999999999778 21.320983666666667,-0.08245899999999984 22.2585415,1.2439567833333334 C 23.37423075,2.8219582083333328 23.084731583333333,4.850465858333333 23.164916666666663,6.6700833333333325 C 22.730448,8.764101666666667 23.471082916666663,11.93089625 25.964430916666664,11.965260666666666 C 25.96616425,12.675257833333331 25.967897583333333,13.385253916666667 25.969630916666663,14.095249999999998 z M 0,11.890666666666666 C 3.0603030249999996,11.901302833333332 2.9631975749999997,8.03762375 2.8083174166666662,5.876164991666665 C 2.8433655249999994,4.030949324999999 2.721194016666666,1.7454928833333327 4.420072908333333,0.5694893750000003 C 5.372927083333333,-0.061494008333333176 6.871621249999999,-0.1290253249999999 7.832499999999999,0.0735114250000001 C 7.832499999999999,0.7567853583333339 7.832499999999999,1.4400594000000004 7.832499999999999,2.123333333333333 C 6.37348075,1.8293025833333332 4.835567858333332,2.7163593166666664 5.060961966666666,4.386964183333332 C 5.1759032,7.193378833333332 5.6340503916666655,11.709426083333332 2.2598333333333325,13 C 5.207048383333333,14.086294083333332 5.156518358333333,17.629785333333334 5.090718749999999,20.272822916666666 C 5.188759333333332,21.44074183333333 4.745368225,23.284815666666667 6.208247283333332,23.742150249999998 C 6.7598959999999995,24.144411416666664 8.124496249999998,23.393773 7.831416666666666,24.4615085 C 7.831416666666666,24.974339 7.831416666666666,25.4871695 7.831416666666666,26 C 6.374522591666667,26.022554999999997 4.685231958333332,26.0664625 3.717999999999999,24.77583333333333 C 1.4586925166666662,21.841976 4.3907751333333325,17.033611833333335 1.4768254583333333,14.512615 C 0.6670834083333335,14.103948083333332 -0.3212668333333338,14.297534333333333 0,13.143934916666666 C 0,12.726178833333332 0,12.308422749999998 0,11.890666666666666 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">JSONNormalization</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">json-normalization</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 119.99999999999932, 671.9999999999999)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP274641)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 43.180419921875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 25.7587890625,9.9912109375 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.2412109375,0.2412109375 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.0087890625,0.2412109375 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 9.6103515625,3.3896484375 7.3125,2.4375 Q 7.3125,2.4375 5.0146484375,3.3896484375 Q 5.0146484375,3.3896484375 4.0625,5.6875 Q 4.0625,5.6875 5.0146484375,7.9853515625 Q 5.0146484375,7.9853515625 7.3125,8.9375 Q 7.3125,8.9375 9.6103515625,7.9853515625 Q 9.6103515625,7.9853515625 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 24.57177734375,4.67822265625 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.6162109375,3.4912109375 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">IRESearch</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g></g></g><clipPath id=\"mainClip274635\"><rect x=\"0\" y=\"0\" width=\"513\" height=\"437\"></rect></clipPath><clipPath id=\"CLIP274637\"><path d=\"M 0,0 L 565,0 L 565,489 L 0,489 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP274638\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP274639\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP274640\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP274641\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath></svg>","svgPreview":"<svg width=\"146px\" height=\"125px\" viewBox=\"0 0 146 125\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#mainClip274643)\"><rect x=\"0\" y=\"0\" width=\"146\" height=\"125\" fill=\"#D2E9F4\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></rect><g transform=\"matrix(0.2698019801980197, 0, 0, 0.2698019801980197, 7.999999999999954, -127.98019801980189)\"><g transform=\"matrix(1, 0, 0, 1, 280.00000000000045, 840)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP274645)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 23.9384765625, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 8.125,9.75 L 8.125,16.25 L 4.875,16.25 L 4.875,9.75 L 8.125,9.75 z M 13,3.25 L 13,16.25 L 9.75,16.25 L 9.75,3.25 L 13,3.25 z M 26,17.875 L 26,19.5 L 0,19.5 L 0,0 L 1.625,0 L 1.625,17.875 L 26,17.875 z M 17.875,6.5 L 17.875,16.25 L 14.625,16.25 L 14.625,6.5 L 17.875,6.5 z M 22.75,1.625 L 22.75,16.25 L 19.5,16.25 L 19.5,1.625 L 22.75,1.625 z\" fill=\"#00B5E2\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">ErrorVisStore</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">visualization-store</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 188.36171264214792, 570.5)\"><path d=\"M 9.663381206337363e-13,0 L 0,96.99999999999977\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 31.638287357851176, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.258287357851174, 91.99999999999977)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.258287357851174, 91.99999999999977)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 36.258287357851174, 81.99999999999977)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 36.258287357851174, 81.99999999999977)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.74874877496025)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 81.36171264214758, 738.4999999999998)\"><path d=\"M 25.99999999999875,0 L 25.99999999999875,50.000000000000114 L 0,50.000000000000114 L 0,97.00000000000023\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 18.638287357852768, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 23.25828735785277, 92.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 23.25828735785277, 92.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 23.25828735785277, 82.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 23.25828735785277, 82.00000000000023)\"></path><g transform=\"matrix(1, 0, 0, 1, 0, 37.748748774960475)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#787573\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#787573\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 312.4999999999991, 738.4999999999998)\"><path d=\"M 0,0 L 0,50.000000000000114 L 66.00000000000136,50.000000000000114 L 66.00000000000136,97.00000000000023\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 1.5, 1.5)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 72.12000000000137, 92.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 72.12000000000137, 92.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(0, 1, -1, 0, 72.12000000000137, 82.00000000000023)\"></path><path d=\"M 0,0 L 8,4.62 L 0,9.24 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"3\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(0, 1, -1, 0, 72.12000000000137, 82.00000000000023)\"></path><g transform=\"matrix(1, 0, 0, 1, 2.8617126421485395, 37.748748774960475)\"><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"#9F7174\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 8.834167483359762,0 L 53.44240723234452,0 C 57.397598737193604,0 62.276574715704285,4.878975978510677 62.276574715704285,8.834167483359762 L 62.276574715704285,17.66833496671952 C 62.276574715704285,21.623526471568606 57.397598737193604,26.502502450079284 53.44240723234452,26.502502450079284 L 8.834167483359762,26.502502450079284 C 4.878975978510677,26.502502450079284 0,21.623526471568606 0,17.66833496671952 L 0,8.834167483359762 C 0,4.878975978510677 4.878975978510677,0 8.834167483359762,0 z\" fill=\"none\" stroke=\"#9F7174\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 7.470562748477139, 7.470562748477143)\"><text x=\"0\" y=\"9.42103271484375\" style=\"font: 11px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SHUFFLE</text></g></g></g><g transform=\"matrix(1, 0, 0, 1, 108.50000000000028, 503.9999999999999)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 222,0 L 222,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 222,0 L 222,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 208, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP274646)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 11.351318359375, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 10.25130143335948,0 C 11.116546316765312,0 11.981792127219567,0 12.847037010625401,0 C 12.694382728374812,0.8652451615203587 12.541729373172645,1.7304906938600866 12.389075090922057,2.5957355772659207 C 13.25431997432789,2.5957355772659207 14.119565784782143,2.5957355772659207 14.984810668187977,2.5957355772659207 C 15.137464950438567,1.7304906938600881 15.290118305640732,0.8652451615203604 15.442772587891321,0 C 16.308017471297156,0 17.173263281751407,0 18.038508165157243,0 C 17.885853882906652,0.8652451615203587 17.733200527704486,1.7304906938600866 17.5805462454539,2.5957355772659207 C 18.44579112885973,2.5957355772659207 19.311036939313986,2.5957355772659207 20.17628182271982,2.5957355772659207 C 20.023318833345222,3.4609804606717534 19.87035584397062,4.326226271126007 19.71739285459602,5.1914711545318415 C 18.85214797119019,5.1914711545318415 17.986902160735934,5.1914711545318415 17.1216572773301,5.1914711545318415 C 16.969312629251945,6.056716037937674 16.816967054125367,6.921961848391928 16.664622406047208,7.787206731797762 C 17.529867289453044,7.787206731797762 18.395113099907295,7.787206731797762 19.26035798331313,7.787206731797762 C 19.10770370106254,8.652451615203596 18.955050345860375,9.517697425657849 18.802396063609788,10.382942309063683 C 17.93715118020395,10.382942309063683 17.0719053697497,10.382942309063683 16.206660486343864,10.382942309063683 C 16.054624545389718,11.248187192469517 15.902588604435573,12.11343300292377 15.750552663481423,12.978677886329605 C 14.88530778007559,12.978677886329605 14.020061969621338,12.978677886329605 13.154817086215504,12.978677886329605 C 13.30716173429366,12.11343300292377 13.459507309420237,11.248187192469517 13.611851957498395,10.382942309063683 C 12.746607074092562,10.382942309063683 11.881361263638308,10.382942309063683 11.016116380232473,10.382942309063683 C 10.866243243243241,11.248187192469517 10.71637103330243,12.11343300292377 10.5664978963132,12.978677886329605 C 9.69878057477002,12.978677886329605 8.83106325322684,12.978677886329605 7.963345931683662,12.978677886329605 C 8.115690579761818,12.11343300292377 8.268036154888396,11.248187192469517 8.420380802966555,10.382942309063683 C 7.555135919560722,10.382942309063683 6.689890387220994,10.382942309063683 5.824645225700635,10.382942309063683 C 5.977299229836698,9.517697425657849 6.129953141267918,8.652451615203596 6.28260714540398,7.787206731797762 C 7.147852306924339,7.787206731797762 8.013097839264066,7.787206731797762 8.8783427226699,7.787206731797762 C 9.030687370748057,6.924124652356843 9.183032945874634,6.061042572915925 9.335377593952794,5.197960493475008 C 8.470132710546961,5.197960493475008 7.604886900092707,5.197960493475008 6.739642016686874,5.197960493475008 C 6.892296020822936,4.330551879055839 7.044949932254156,3.463144191685091 7.197603936390219,2.5957355772659225 C 8.06284881979605,2.5957355772659225 8.928094630250305,2.5957355772659225 9.79333951365614,2.5957355772659225 C 9.945993795906727,1.73049069386009 10.098647151108896,0.865245161520362 10.251301433359483,3.2935376042506246e-15 z M 11.474078299935819,7.787206731797759 C 12.339323183341651,7.787206731797759 13.204568993795904,7.787206731797759 14.069813877201739,7.787206731797759 C 14.222468159452328,6.921961848391925 14.375121514654493,6.056716037937672 14.527775796905082,5.191471154531838 C 13.662530913499248,5.191471154531838 12.797285103044997,5.191471154531838 11.932040219639163,5.191471154531838 C 11.779385937388573,6.0567160379376705 11.626732582186406,6.921961848391925 11.474078299935819,7.787206731797759 z M 5.562290522712686,1.9468016829494397 C 5.134303137702346,1.2978677886329604 4.706315845396848,0.6489338943164794 4.278328460386507,0 C 2.8522190044926186,2.163112672038793 1.4261094558938885,4.326226271126007 0,6.4893389431648005 C 1.4261094558938885,8.652451615203594 2.8522190044926186,10.815565214290809 4.278328460386507,12.978677886329601 C 4.706315845396848,12.329743992013121 5.134303137702346,11.680810097696641 5.562290522712686,11.03187620338016 C 4.563550388647222,9.517697425657849 3.5648101618769164,8.003517720887114 2.566070027811452,6.4893389431648005 C 3.5648101618769164,4.975160165442487 4.563550388647222,3.4609804606717534 5.562290522712686,1.9468016829494397 z M 20.437709477287314,11.03187620338016 C 20.865697140412177,11.68081009769664 21.293683876488622,12.329743992013118 21.721671539613492,12.978677886329601 C 23.147780717392855,10.815565214290809 24.573890822220637,8.652451615203594 26,6.4893389431648005 C 24.573890822220637,4.326226271126007 23.147780717392855,2.163112672038793 21.721671539613492,0 C 21.293683876488625,0.6489338943164794 20.86569714041218,1.2978677886329604 20.437709477287314,1.9468016829494397 C 21.43644933323825,3.4609804606717534 22.435190116237607,4.975160165442487 23.433929972188544,6.4893389431648005 C 22.435190116237607,8.003517720887114 21.43644933323825,9.517697425657845 20.437709477287314,11.03187620338016 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">SearchRequestFormatter</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">formatter</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 1.7053025658242404e-13, 840)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP274647)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 15.587158203125, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 25.969666666666665,14.095249999999998 C 22.046078166666668,14.269045916666663 23.444896583333335,19.699466583333333 23.07825325,22.121664499999998 C 23.292668749999997,24.496108 21.084312166666663,26.4496635 18.74739425,25.998916666666663 C 18.122857999999997,26.174644166666667 18.0537435,25.794949916666663 18.136083333333332,25.263802416666664 C 18.136083333333332,24.801423833333327 18.136083333333332,24.339045249999995 18.136083333333332,23.876666666666665 C 19.186408583333332,23.972281666666664 20.656994583333333,23.822619166666662 20.79834033333333,22.51455808333333 C 21.09751583333333,19.855172999999997 20.385782083333332,16.987264666666665 21.76521641666666,14.545014249999998 C 22.234544583333335,13.846724666666665 22.923543499999997,13.299297916666664 23.709833333333332,13 C 19.40353025,11.226420833333332 21.873917,6.006139208333332 20.427333333333333,2.631416666666667 C 19.952125916666663,1.706542933333333 18.1571455,2.6609671833333333 18.1415,1.7568595416666664 C 18.1415,1.1712396583333333 18.1415,0.585619883333333 18.1415,0 C 19.5994955,-0.021306999999999778 21.320983666666667,-0.08245899999999984 22.2585415,1.2439567833333334 C 23.37423075,2.8219582083333328 23.084731583333333,4.850465858333333 23.164916666666663,6.6700833333333325 C 22.730448,8.764101666666667 23.471082916666663,11.93089625 25.964430916666664,11.965260666666666 C 25.96616425,12.675257833333331 25.967897583333333,13.385253916666667 25.969630916666663,14.095249999999998 z M 0,11.890666666666666 C 3.0603030249999996,11.901302833333332 2.9631975749999997,8.03762375 2.8083174166666662,5.876164991666665 C 2.8433655249999994,4.030949324999999 2.721194016666666,1.7454928833333327 4.420072908333333,0.5694893750000003 C 5.372927083333333,-0.061494008333333176 6.871621249999999,-0.1290253249999999 7.832499999999999,0.0735114250000001 C 7.832499999999999,0.7567853583333339 7.832499999999999,1.4400594000000004 7.832499999999999,2.123333333333333 C 6.37348075,1.8293025833333332 4.835567858333332,2.7163593166666664 5.060961966666666,4.386964183333332 C 5.1759032,7.193378833333332 5.6340503916666655,11.709426083333332 2.2598333333333325,13 C 5.207048383333333,14.086294083333332 5.156518358333333,17.629785333333334 5.090718749999999,20.272822916666666 C 5.188759333333332,21.44074183333333 4.745368225,23.284815666666667 6.208247283333332,23.742150249999998 C 6.7598959999999995,24.144411416666664 8.124496249999998,23.393773 7.831416666666666,24.4615085 C 7.831416666666666,24.974339 7.831416666666666,25.4871695 7.831416666666666,26 C 6.374522591666667,26.022554999999997 4.685231958333332,26.0664625 3.717999999999999,24.77583333333333 C 1.4586925166666662,21.841976 4.3907751333333325,17.033611833333335 1.4768254583333333,14.512615 C 0.6670834083333335,14.103948083333332 -0.3212668333333338,14.297534333333333 0,13.143934916666666 C 0,12.726178833333332 0,12.308422749999998 0,11.890666666666666 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">JSONNormalization</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">json-normalization</text></g></g></g></g></g><g transform=\"matrix(1, 0, 0, 1, 119.99999999999932, 671.9999999999999)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\"><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"#fff\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><path d=\"M 0,0 L 199,0 L 199,67 L 0,67 z\" fill=\"none\" stroke=\"#00629B\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path><g transform=\"matrix(1, 0, 0, 1, 185, 4)\"><g transform=\"matrix(1, 0, 0, 1, 0, 0)\" clip-path=\"url(#CLIP274648)\"><text x=\"8\" y=\"10.277490234375001\" style=\"font: 400 12px Roboto, sans-serif\" text-anchor=\"end\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">1</text></g></g><g transform=\"matrix(1, 0, 0, 1, 43.180419921875, 19.7257080078125)\"><g transform=\"matrix(1, 0, 0, 1, 6, 0)\"><path d=\"M 3.25,9.75 L 25.1875,9.75 Q 25.517578125,9.75 25.7587890625,9.9912109375 Q 25.7587890625,9.9912109375 26,10.5625 L 26,16.25 L 22.75,16.25 L 22.75,13 L 3.25,13 L 3.25,16.25 L 0,16.25 L 0,0.8125 Q 0,0.482421875 0.2412109375,0.2412109375 Q 0.2412109375,0.2412109375 0.8125,0 L 2.4375,0 Q 2.767578125,0 3.0087890625,0.2412109375 Q 3.0087890625,0.2412109375 3.25,0.8125 L 3.25,9.75 z M 10.5625,5.6875 Q 10.5625,4.341796875 9.6103515625,3.3896484375 Q 9.6103515625,3.3896484375 7.3125,2.4375 Q 7.3125,2.4375 5.0146484375,3.3896484375 Q 5.0146484375,3.3896484375 4.0625,5.6875 Q 4.0625,5.6875 5.0146484375,7.9853515625 Q 5.0146484375,7.9853515625 7.3125,8.9375 Q 7.3125,8.9375 9.6103515625,7.9853515625 Q 9.6103515625,7.9853515625 10.5625,5.6875 z M 26,8.9375 L 26,8.125 Q 26,6.1064453125 24.57177734375,4.67822265625 Q 24.57177734375,4.67822265625 21.125,3.25 L 12.1875,3.25 Q 11.857421875,3.25 11.6162109375,3.4912109375 Q 11.6162109375,3.4912109375 11.375,4.0625 L 11.375,8.9375 L 26,8.9375 z\" fill=\"#84329B\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0.5, 0.5)\"></path></g><g transform=\"matrix(1, 0, 0, 1, 43, 0)\"><text x=\"0\" y=\"11.13394775390625\" style=\"font: 13px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">IRESearch</text><g transform=\"matrix(1, 0, 0, 1, 0, 14.845263671875001)\"><text x=\"0\" y=\"10.277490234375001\" style=\"font: 12px Roboto, sans-serif\" text-anchor=\"start\" fill=\"#212122\" stroke=\"none\" transform=\"matrix(1, 0, 0, 1, 0, 0)\">rest</text></g></g></g></g></g></g></g><clipPath id=\"mainClip274643\"><rect x=\"0\" y=\"0\" width=\"146\" height=\"125\"></rect></clipPath><clipPath id=\"CLIP274645\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP274646\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP274647\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath><clipPath id=\"CLIP274648\"><path d=\"M 0,0 L 8,0 L 8,12 L 0,12 z\" transform=\"matrix(1, 0, 0, 1, 0, 0)\"></path></clipPath></svg>"}]]>
    </diagram-state>
    <job-specification-version>
        <version>1.0</version>
        <dmip-version-since>1.0</dmip-version-since>
        <organization>FICO</organization>
    </job-specification-version>
    <name>IRE Search Template</name>
    <description>Sample IRE Search template</description>
    <job-params>
        <parameter>
            <name>dmip.non.tx.job.acker.enforced</name>
            <value>false</value>
        </parameter>
        <parameter>
            <name>dmip.state.qos.consistency</name>
            <value>true</value>
        </parameter>
        <parameter>
            <name>dmip.state.qos.persistence</name>
            <value>Delayed</value>
        </parameter>
        <parameter>
            <name>dmip.visualization.store.rolling.unit</name>
            <value>Day</value>
        </parameter>
    </job-params>
    <job-steps>
        <job-step parallelism-hint="1" xsi:type="formatter-job-step">
            <description>Generate a custom IRE entity search request for each input name.</description>
            <job-step-id>SearchRequestFormatter</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field></input-field>
                                <input-field></input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s6</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>msg-or-path</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[<ENTITY name="E_Person" op="query">
   <WHERE>
    <Name>${firstName} ${lastName}</Name>
  </WHERE> 
  <OPTIONS mode="cluster"/>
</ENTITY>]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="formatter-input-js-required-field">
                                <name>input</name>
                                <input-field></input-field>
                                <input-field></input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="formatter-instantiatedTemplate-js-generated-field">
                                <output-stream-id>s6</output-stream-id>
                                <name>instantiatedTemplate</name>
                                <output-field>is-ref</output-field>
                                <data-type>boolean</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="conversionTemplate" xsi:type="formatter-js-process-paramType">
                                <value>
                                    <![CDATA[false]]>
                                </value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s6</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">msg-or-path</field>
                        <field data-type="boolean" keep="true">is-ref</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>IRESearch</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.formatter.FormatterStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" are-builtin-fields-for-error-stream="true" processing-iteration-count="1" xsi:type="rest-job-step">
            <description>Performs a REST call to execute the entity search command on the IRE server.</description>
            <job-step-id>IRESearch</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="rest-job-step-params">
                    <rest-auth-type>oauth</rest-auth-type>
		    <access-token secure="true"></access-token>
                    <access-token-base64-encode-needed>false</access-token-base64-encode-needed>
                    <refresh-token-url>
                        <![CDATA[https://ire.novalocal.com:8443/oauth/token?]]>
                    </refresh-token-url>
                    <refresh-token-url-secure-params secure="true"></refresh-token-url-secure-params>
                    <endpoint-uri-template>https://ire.novalocal.com:8443/rest/do/execute</endpoint-uri-template>
                    <header-template>
                        <![CDATA[Accept: application/json
Content-Type: text/xml]]>
                    </header-template>
                    <timeout>30000</timeout>
                    <method>POST</method>
                    <error-stream-name>rest-err-1</error-stream-name>
                </job-step-params>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="rest-msg-or-path-js-required-field">
                                <name>msg-or-path</name>
                                <input-field>msg-or-path</input-field>
                            </required-field>
                            <required-field xsi:type="rest-is-ref-js-required-field">
                                <name>is-ref</name>
                                <input-field>is-ref</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="rest-response-code-js-generated-field">
                                <output-stream-id>rest-out-2</output-stream-id>
                                <name>rest-response-code</name>
                                <output-field>rest_response_code</output-field>
                                <data-type>integer</data-type>
                            </generated-field>
                            <generated-field xsi:type="rest-response-js-generated-field">
                                <output-stream-id>rest-out-2</output-stream-id>
                                <name>rest-response</name>
                                <output-field>rest_response</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>rest-out-2</stream-id>
                    <output-fields>
                        <field data-type="boolean" keep="false">is-ref</field>
                        <field data-type="string" keep="false">msg-or-path</field>
                        <field data-type="integer" keep="true">rest_response_code</field>
                        <field data-type="string" keep="true">rest_response</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>JSONNormalization</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
                <out-stream stream-type="error">
                    <stream-id>rest-err-1</stream-id>
                    <output-fields>
                        <field data-type="string" keep="true">error-message</field>
                    </output-fields>
                    <stream-consumers>
                        <stream-consumer>
                            <consuming-job-step-id>ErrorVisStore</consuming-job-step-id>
                            <grouping-by>SHUFFLE</grouping-by>
                        </stream-consumer>
                    </stream-consumers>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.rest.RestStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="visualization-store-job-step">
            <description>Visualization Store collects batches of incoming tuples and writes them to a visualization store where the information they contain can be viewed through the Visualization dashboard.</description>
            <job-step-id>ErrorVisStore</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <job-step-params xsi:type="visualization-store-job-step-params">
                    <es-type-name>IRESearchError</es-type-name>
                    <batch-size>100</batch-size>
                    <idle-time>1</idle-time>
                </job-step-params>
            </configuration>
            <step-type>OUTBOUND</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.visualization.VisualizationStoreStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>true</requires-data-source>
        </job-step>
        <job-step parallelism-hint="1" xsi:type="json-normalization-job-step">
            <description>Extract elements from the IRE entity search JSON response.</description>
            <job-step-id>JSONNormalization</job-step-id>
            <job-step-version>
                <version>1.0</version>
                <dmip-version-since>1.0</dmip-version-since>
                <organization>FICO</organization>
            </job-step-version>
            <configuration>
                <processing-units>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="json-normalization-to-normalize-js-required-field">
                                <name>to-normalize</name>
                                <input-field>rest_response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="json-normalization-normalized-field-js-generated-field">
                                <output-stream-id>s-1-B</output-stream-id>
                                <name>normalized-field</name>
                                <output-field>FirstMatchName</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="jsonPath" xsi:type="json-normalization-jsonPath-process-paramType">
                                <value>$.RESPONSE.RESULT.CLUSTER.[0].Name.#text</value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="json-normalization-to-normalize-js-required-field">
                                <name>to-normalize</name>
                                <input-field>rest_response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="json-normalization-normalized-field-js-generated-field">
                                <output-stream-id>s-1-B</output-stream-id>
                                <name>normalized-field</name>
                                <output-field>FirstMatchDOB</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="jsonPath" xsi:type="json-normalization-jsonPath-process-paramType">
                                <value>$.RESPONSE.RESULT.CLUSTER.[0].DOB.#text</value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="json-normalization-to-normalize-js-required-field">
                                <name>to-normalize</name>
                                <input-field>rest_response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="json-normalization-normalized-field-js-generated-field">
                                <output-stream-id>s-1-B</output-stream-id>
                                <name>normalized-field</name>
                                <output-field>FirstMatchEmail</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="jsonPath" xsi:type="json-normalization-jsonPath-process-paramType">
                                <value>$.RESPONSE.RESULT.CLUSTER.[0].Email.#text</value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                    <processing-unit>
                        <required-fields>
                            <required-field xsi:type="json-normalization-to-normalize-js-required-field">
                                <name>to-normalize</name>
                                <input-field>rest_response</input-field>
                            </required-field>
                        </required-fields>
                        <generated-fields>
                            <generated-field xsi:type="json-normalization-normalized-field-js-generated-field">
                                <output-stream-id>s-1-B</output-stream-id>
                                <name>normalized-field</name>
                                <output-field>FirstMatchHomePhone</output-field>
                                <data-type>string</data-type>
                            </generated-field>
                        </generated-fields>
                        <process-params>
                            <parameter name="jsonPath" xsi:type="json-normalization-jsonPath-process-paramType">
                                <value>$.RESPONSE.RESULT.CLUSTER.[0].HomePhone.#text</value>
                            </parameter>
                        </process-params>
                    </processing-unit>
                </processing-units>
            </configuration>
            <job-step-links>
                <out-stream>
                    <stream-id>s-1-B</stream-id>
                    <output-fields>
                        <field data-type="integer" keep="false">rest_response_code</field>
                        <field data-type="string" keep="false">rest_response</field>
                        <field data-type="string" keep="true">FirstMatchName</field>
                        <field data-type="string" keep="true">FirstMatchDOB</field>
                        <field data-type="string" keep="true">FirstMatchEmail</field>
                        <field data-type="string" keep="true">FirstMatchHomePhone</field>
                    </output-fields>
                    <stream-consumers/>
                </out-stream>
            </job-step-links>
            <step-type>TRANSFORMATION</step-type>
            <tuple-processing-type>PARTIAL</tuple-processing-type>
            <job-step-builder-class>com.fico.dmip.procjobstep.normalization.JSONNormalizationStrategyBuilder</job-step-builder-class>
            <schedulable>false</schedulable>
            <requires-data-source>false</requires-data-source>
        </job-step>
    </job-steps>
</job-specification>